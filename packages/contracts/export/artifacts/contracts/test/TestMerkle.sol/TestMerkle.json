{
  "contractName": "TestMerkle",
  "sourceName": "contracts/test/TestMerkle.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "calculateRootFromPowerOfTwo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getEmptyTreeHashAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_wordIndex",
          "type": "uint256"
        }
      ],
      "name": "getHashOfWordAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_log2Size",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRootFromBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_position",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfReplacement",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfFullDrive",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_replacement",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "siblings",
          "type": "bytes32[]"
        }
      ],
      "name": "getRootAfterReplacementInDrive",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506105ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046102d7565b6100cd565b60405190815260200160405180910390f35b61006f61008f36600461034f565b610154565b61006f6100a2366004610419565b6101d2565b61006f6100b536600461047d565b61025f565b61006f6100c83660046102d7565b610299565b6040516334bd712d60e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906334bd712d9061010b908790879087906004016104b2565b602060405180830381865af4158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c91906104eb565b949350505050565b60405163451a105560e01b81526004810182905260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063451a1055906024015b602060405180830381865af41580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc91906104eb565b92915050565b6040516379de460160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906379de460190610214908990899089908990899060040161053f565b602060405180830381865af4158015610231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025591906104eb565b9695505050505050565b6040516310561d5760e31b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906382b0eab89061018b90859060040161056a565b60405163c84583a160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063c84583a19061010b908790879087906004016104b2565b6000806000604084860312156102ec57600080fd5b833567ffffffffffffffff8082111561030457600080fd5b818601915086601f83011261031857600080fd5b81358181111561032757600080fd5b87602082850101111561033957600080fd5b6020928301989097509590910135949350505050565b60006020828403121561036157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261038f57600080fd5b8135602067ffffffffffffffff808311156103ac576103ac610368565b8260051b604051601f19603f830116810181811084821117156103d1576103d1610368565b6040529384528581018301938381019250878511156103ef57600080fd5b83870191505b8482101561040e578135835291830191908301906103f5565b979650505050505050565b600080600080600060a0868803121561043157600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff81111561046457600080fd5b6104708882890161037e565b9150509295509295909350565b60006020828403121561048f57600080fd5b813567ffffffffffffffff8111156104a657600080fd5b61014c8482850161037e565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b6000602082840312156104fd57600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561053457815187529582019590820190600101610518565b509495945050505050565b85815284602082015283604082015282606082015260a06080820152600061040e60a0830184610504565b60208152600061057d6020830184610504565b939250505056fea2646970667358221220f3203403cc9f9707319af3b72048cae713cf7d1ca36d0e2c07d600323a0d729a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046102d7565b6100cd565b60405190815260200160405180910390f35b61006f61008f36600461034f565b610154565b61006f6100a2366004610419565b6101d2565b61006f6100b536600461047d565b61025f565b61006f6100c83660046102d7565b610299565b6040516334bd712d60e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906334bd712d9061010b908790879087906004016104b2565b602060405180830381865af4158015610128573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014c91906104eb565b949350505050565b60405163451a105560e01b81526004810182905260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063451a1055906024015b602060405180830381865af41580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc91906104eb565b92915050565b6040516379de460160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906379de460190610214908990899089908990899060040161053f565b602060405180830381865af4158015610231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025591906104eb565b9695505050505050565b6040516310561d5760e31b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906382b0eab89061018b90859060040161056a565b60405163c84583a160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063c84583a19061010b908790879087906004016104b2565b6000806000604084860312156102ec57600080fd5b833567ffffffffffffffff8082111561030457600080fd5b818601915086601f83011261031857600080fd5b81358181111561032757600080fd5b87602082850101111561033957600080fd5b6020928301989097509590910135949350505050565b60006020828403121561036157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261038f57600080fd5b8135602067ffffffffffffffff808311156103ac576103ac610368565b8260051b604051601f19603f830116810181811084821117156103d1576103d1610368565b6040529384528581018301938381019250878511156103ef57600080fd5b83870191505b8482101561040e578135835291830191908301906103f5565b979650505050505050565b600080600080600060a0868803121561043157600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff81111561046457600080fd5b6104708882890161037e565b9150509295509295909350565b60006020828403121561048f57600080fd5b813567ffffffffffffffff8111156104a657600080fd5b61014c8482850161037e565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b6000602082840312156104fd57600080fd5b5051919050565b600081518084526020808501945080840160005b8381101561053457815187529582019590820190600101610518565b509495945050505050565b85815284602082015283604082015282606082015260a06080820152600061040e60a0830184610504565b60208152600061057d6020830184610504565b939250505056fea2646970667358221220f3203403cc9f9707319af3b72048cae713cf7d1ca36d0e2c07d600323a0d729a64736f6c63430008140033",
  "linkReferences": {
    "contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 255
        },
        {
          "length": 20,
          "start": 397
        },
        {
          "length": 20,
          "start": 516
        },
        {
          "length": 20,
          "start": 657
        },
        {
          "length": 20,
          "start": 715
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 223
        },
        {
          "length": 20,
          "start": 365
        },
        {
          "length": 20,
          "start": 484
        },
        {
          "length": 20,
          "start": 625
        },
        {
          "length": 20,
          "start": 683
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "293200",
        "executionCost": "331",
        "totalCost": "293531"
      },
      "external": {
        "calculateRootFromPowerOfTwo(bytes32[])": "infinite",
        "getEmptyTreeHashAtIndex(uint256)": "infinite",
        "getHashOfWordAtIndex(bytes,uint256)": "infinite",
        "getMerkleRootFromBytes(bytes,uint256)": "infinite",
        "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "infinite"
      }
    },
    "methodIdentifiers": {
      "calculateRootFromPowerOfTwo(bytes32[])": "82b0eab8",
      "getEmptyTreeHashAtIndex(uint256)": "451a1055",
      "getHashOfWordAtIndex(bytes,uint256)": "34bd712d",
      "getMerkleRootFromBytes(bytes,uint256)": "c84583a1",
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "79de4601"
    }
  }
}