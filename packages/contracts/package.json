{
    "name": "@cartesi/util",
    "version": "6.0.0",
    "description": "Solidity Util Contracts",
    "scripts": {
        "build": "run-s compile export",
        "clean:ignored": "rimraf artifacts cache coverage deployments/localhost dist generated-src src/types/*",
        "clean:hardhat": "hardhat clean",
        "clean": "run-s clean:hardhat clean:ignored",
        "compile": "hardhat compile",
        "copy-dts": "copyfiles -u 1 \"src/**/*.d.ts\" dist/src",
        "deploy": "run-s deploy:development",
        "deploy:arbitrum": "hardhat deploy --network arbitrum --export export/abi/arbitrum.json",
        "deploy:arbitrum_goerli": "hardhat deploy --network arbitrum_goerli --export export/abi/arbitrum_goerli.json",
        "deploy:avalanche": "hardhat deploy --network avalanche --export export/abi/avalanche.json",
        "deploy:avalanche_fuji": "hardhat deploy --network avalanche_fuji --export export/abi/avalanche_fuji.json",
        "deploy:bsc": "hardhat deploy --network bsc --export export/abi/bsc.json",
        "deploy:bsc_testnet": "hardhat deploy --network bsc_testnet --export export/abi/bsc_testnet.json",
        "deploy:celo": "hardhat deploy --network celo --export export/abi/celo.json",
        "deploy:celo_testnet": "hardhat deploy --network celo_testnet --export export/abi/celo_testnet.json",
        "deploy:chiado": "hardhat deploy --network chiado --export export/abi/chiado.json",
        "deploy:development": "hardhat deploy --network localhost",
        "deploy:fantom": "hardhat deploy --network fantom --export export/abi/fantom.json",
        "deploy:fantom_testnet": "hardhat deploy --network fantom_testnet --export export/abi/fantom_testnet.json",
        "deploy:gnosis": "hardhat deploy --network gnosis --export export/abi/gnosis.json",
        "deploy:goerli": "hardhat deploy --network goerli --export export/abi/goerli.json",
        "deploy:iotex": "hardhat deploy --network iotex --export export/abi/iotex.json",
        "deploy:iotex_testnet": "hardhat deploy --network iotex_testnet --export export/abi/iotex_testnet.json",
        "deploy:mainnet": "hardhat deploy --network mainnet --export export/abi/mainnet.json",
        "deploy:mainnets": "run-s deploy:arbitrum deploy:avalanche deploy:bsc deploy:celo deploy:fantom deploy:gnosis deploy:iotex deploy:mainnet deploy:metis deploy:optimism deploy:polygon",
        "deploy:metis": "hardhat deploy --network metis --export export/abi/metis.json",
        "deploy:metis_goerli": "hardhat deploy --network metis_goerli --export export/abi/metis_goerli.json",
        "deploy:optimism": "hardhat deploy --network optimism --export export/abi/optimism.json",
        "deploy:optimism_goerli": "hardhat deploy --network optimism_goerli --export export/abi/optimism_goerli.json",
        "deploy:polygon": "hardhat deploy --network polygon --export export/abi/polygon.json",
        "deploy:polygon_mumbai": "hardhat deploy --network polygon_mumbai --export export/abi/polygon_mumbai.json",
        "deploy:sepolia": "hardhat deploy --network sepolia --export export/abi/sepolia.json",
        "deploy:testnet": "run-s deploy:arbitrum_goerli deploy:avalanche_fuji deploy:bsc_testnet deploy:celo_testnet deploy:chiado deploy:fantom_testnet deploy:goerli deploy:iotex_testnet deploy:metis_goerli deploy:optimism_goerli deploy:polygon_mumbai deploy:sepolia",
        "export": "hardhat export-artifacts export/artifacts --hide-sources --including-empty-bytecode --including-no-public-functions",
        "info": "npm-scripts-info",
        "prepack": "run-s build tsc copy-dts",
        "prettier": "prettier --check src/**/*.ts test/**/*.ts contracts/**/*.sol",
        "solhint": "solhint contracts/**/*.sol",
        "start": "hardhat node",
        "test": "hardhat test",
        "test:coverage": "hardhat coverage",
        "tsc": "tsc"
    },
    "scripts-info": {
        "build": "Build contracts and typescript code",
        "copy-dts": "Copy TypeChain type definition files to typescript output dir",
        "clean": "Clean build artifacts, including contracts local deployment information",
        "deploy": "Deploy contracts to local node. Requires node running on localhost:8545",
        "deploy:arbitrum": "Deploy contracts to arbitrum. Requires environment variable MNEMONIC.",
        "deploy:arbitrum_goerli": "Deploy contracts to arbitrum_goerli. Requires environment variable MNEMONIC.",
        "deploy:avalanche": "Deploy contracts to avalanche. Requires environment variable MNEMONIC.",
        "deploy:avalanche_fuji": "Deploy contracts to avalanche_fuji. Requires environment variable MNEMONIC.",
        "deploy:bsc": "Deploy contracts to bsc. Requires environment variable MNEMONIC.",
        "deploy:bsc_testnet": "Deploy contracts to bsc_testnet. Requires environment variable MNEMONIC.",
        "deploy:chiado": "Deploy contracts to chiado. Requires environment variable MNEMONIC.",
        "deploy:development": "Deploy contracts to local node. Requires node running on localhost:8545",
        "deploy:gnosis": "Deploy contracts to gnosis. Requires environment variable MNEMONIC.",
        "deploy:goerli": "Deploy contracts to goerli. Requires environment variable MNEMONIC.",
        "deploy:iotex": "Deploy contracts to iotex. Requires environment variable MNEMONIC.",
        "deploy:iotex_testnet": "Deploy contracts to iotex_testnet. Requires environment variable MNEMONIC.",
        "deploy:mainnet": "Deploy contracts to mainnet. Requires environment variable MNEMONIC.",
        "deploy:mainnets": "Deploy contracts to all supported mainnets. Requires environment variable MNEMONIC.",
        "deploy:metis": "Deploy contracts to metis. Requires environment variable MNEMONIC.",
        "deploy:metis_goerli": "Deploy contracts to metis_goerli. Requires environment variable MNEMONIC.",
        "deploy:optimism": "Deploy contracts to optimism. Requires environment variable MNEMONIC.",
        "deploy:optimism_goerli": "Deploy contracts to optimism_goerli. Requires environment variable MNEMONIC.",
        "deploy:polygon": "Deploy contracts to polygon. Requires environment variable MNEMONIC.",
        "deploy:polygon_mumbai": "Deploy contracts to polygon_mumbai. Requires environment variable MNEMONIC.",
        "deploy:sepolia": "Deploy contracts to sepolia. Requires environment variable MNEMONIC.",
        "deploy:testnet": "Deploy contracts to all supported testnets. Requires environment variable MNEMONIC.",
        "export": "Export artifacts in a simpler format",
        "info": "Displays information about the scripts.",
        "prettier": "Check code style",
        "solhint": "Run solidity linter",
        "test": "Run unit tests",
        "test:coverage": "Run test coverage report"
    },
    "dependencies": {},
    "devDependencies": {
        "@nomicfoundation/hardhat-chai-matchers": "^2",
        "@nomicfoundation/hardhat-ethers": "^3",
        "@nomicfoundation/hardhat-verify": "^1",
        "@safe-global/safe-singleton-factory": "^1",
        "@typechain/ethers-v6": "^0.4",
        "@typechain/hardhat": "^8",
        "@types/chai": "^4",
        "@types/keccak": "^3",
        "@types/mocha": "^10",
        "@types/node": "^20",
        "@wagmi/chains": "^1",
        "chai": "^4",
        "copyfiles": "^2",
        "decimal.js": "^10",
        "ethers": "^6",
        "hardhat": "^2",
        "hardhat-deploy": "0.11",
        "mocha": "^10",
        "npm-run-all": "^4",
        "npm-scripts-info": "^0.3",
        "prettier": "^3",
        "prettier-plugin-solidity": "^1",
        "rimraf": "^5",
        "solhint": "^3",
        "solhint-plugin-prettier": "^0.0.5",
        "solidity-coverage": "^0.8",
        "ts-generator": "^0.1",
        "ts-node": "^10",
        "typechain": "^8",
        "typescript": "^5"
    },
    "repository": {
        "type": "git",
        "url": "git://github.com/cartesi/solidity-util.git"
    },
    "keywords": [
        "cartesi"
    ],
    "files": [
        "contracts",
        "deployments/*/*.json",
        "deployments/*/.chainid",
        "dist/deploy/*.js",
        "export"
    ],
    "author": "Danilo Tuler",
    "license": "Apache-2.0"
}
