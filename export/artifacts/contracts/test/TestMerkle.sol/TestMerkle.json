{
  "contractName": "TestMerkle",
  "sourceName": "contracts/test/TestMerkle.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "calculateRootFromPowerOfTwo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getEmptyTreeHashAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_wordIndex",
          "type": "uint256"
        }
      ],
      "name": "getHashOfWordAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_log2Size",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRootFromBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_position",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfReplacement",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfFullDrive",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_replacement",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "siblings",
          "type": "bytes32[]"
        }
      ],
      "name": "getRootAfterReplacementInDrive",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506105e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046103ed565b6100cd565b60405190815260200160405180910390f35b61006f61008f366004610460565b610163565b61006f6100a2366004610478565b6101f0565b61006f6100b53660046103a2565b61028c565b61006f6100c83660046103ed565b6102c6565b6040516334bd712d60e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906334bd712d9061010b9087908790879060040161052e565b60206040518083038186803b15801561012357600080fd5b505af4158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b91906103d5565b949350505050565b60405163451a105560e01b81526004810182905260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063451a1055906024015b60206040518083038186803b1580156101b257600080fd5b505af41580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906103d5565b92915050565b6040516379de460160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906379de4601906102329089908990899089908990600401610566565b60206040518083038186803b15801561024a57600080fd5b505af415801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906103d5565b9695505050505050565b6040516310561d5760e31b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906382b0eab89061019a908590600401610514565b60405163c84583a160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063c84583a19061010b9087908790879060040161052e565b600082601f830112610314578081fd5b8135602067ffffffffffffffff808311156103315761033161059c565b8260051b604051601f19603f830116810181811084821117156103565761035661059c565b60405284815283810192508684018288018501891015610374578687fd5b8692505b85831015610396578035845292840192600192909201918401610378565b50979650505050505050565b6000602082840312156103b3578081fd5b813567ffffffffffffffff8111156103c9578182fd5b61015b84828501610304565b6000602082840312156103e6578081fd5b5051919050565b600080600060408486031215610401578182fd5b833567ffffffffffffffff80821115610418578384fd5b818601915086601f83011261042b578384fd5b813581811115610439578485fd5b87602082850101111561044a578485fd5b6020928301989097509590910135949350505050565b600060208284031215610471578081fd5b5035919050565b600080600080600060a0868803121561048f578081fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156104c1578182fd5b6104cd88828901610304565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610509578151875295820195908201906001016104ed565b509495945050505050565b60208152600061052760208301846104da565b9392505050565b6040815282604082015282846060830137600080606085840101526060601f19601f8601168301019050826020830152949350505050565b85815284602082015283604082015282606082015260a06080820152600061059160a08301846104da565b979650505050505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122069b66a0478fb448a36d9f8fbb7bbc51c69c212e77608a3b9d6b376b1a698f49064736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046103ed565b6100cd565b60405190815260200160405180910390f35b61006f61008f366004610460565b610163565b61006f6100a2366004610478565b6101f0565b61006f6100b53660046103a2565b61028c565b61006f6100c83660046103ed565b6102c6565b6040516334bd712d60e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906334bd712d9061010b9087908790879060040161052e565b60206040518083038186803b15801561012357600080fd5b505af4158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b91906103d5565b949350505050565b60405163451a105560e01b81526004810182905260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063451a1055906024015b60206040518083038186803b1580156101b257600080fd5b505af41580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906103d5565b92915050565b6040516379de460160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906379de4601906102329089908990899089908990600401610566565b60206040518083038186803b15801561024a57600080fd5b505af415801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906103d5565b9695505050505050565b6040516310561d5760e31b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__906382b0eab89061019a908590600401610514565b60405163c84583a160e01b815260009073__$a7cee7f7ec908a01620b3c597839795faf$__9063c84583a19061010b9087908790879060040161052e565b600082601f830112610314578081fd5b8135602067ffffffffffffffff808311156103315761033161059c565b8260051b604051601f19603f830116810181811084821117156103565761035661059c565b60405284815283810192508684018288018501891015610374578687fd5b8692505b85831015610396578035845292840192600192909201918401610378565b50979650505050505050565b6000602082840312156103b3578081fd5b813567ffffffffffffffff8111156103c9578182fd5b61015b84828501610304565b6000602082840312156103e6578081fd5b5051919050565b600080600060408486031215610401578182fd5b833567ffffffffffffffff80821115610418578384fd5b818601915086601f83011261042b578384fd5b813581811115610439578485fd5b87602082850101111561044a578485fd5b6020928301989097509590910135949350505050565b600060208284031215610471578081fd5b5035919050565b600080600080600060a0868803121561048f578081fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156104c1578182fd5b6104cd88828901610304565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610509578151875295820195908201906001016104ed565b509495945050505050565b60208152600061052760208301846104da565b9392505050565b6040815282604082015282846060830137600080606085840101526060601f19601f8601168301019050826020830152949350505050565b85815284602082015283604082015282606082015260a06080820152600061059160a08301846104da565b979650505050505050565b634e487b7160e01b600052604160045260246000fdfea264697066735822122069b66a0478fb448a36d9f8fbb7bbc51c69c212e77608a3b9d6b376b1a698f49064736f6c63430008040033",
  "linkReferences": {
    "contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 255
        },
        {
          "length": 20,
          "start": 412
        },
        {
          "length": 20,
          "start": 546
        },
        {
          "length": 20,
          "start": 702
        },
        {
          "length": 20,
          "start": 760
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/MerkleV2.sol": {
      "MerkleV2": [
        {
          "length": 20,
          "start": 223
        },
        {
          "length": 20,
          "start": 380
        },
        {
          "length": 20,
          "start": 514
        },
        {
          "length": 20,
          "start": 670
        },
        {
          "length": 20,
          "start": 728
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "302400",
        "executionCost": "343",
        "totalCost": "302743"
      },
      "external": {
        "calculateRootFromPowerOfTwo(bytes32[])": "infinite",
        "getEmptyTreeHashAtIndex(uint256)": "infinite",
        "getHashOfWordAtIndex(bytes,uint256)": "infinite",
        "getMerkleRootFromBytes(bytes,uint256)": "infinite",
        "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "infinite"
      }
    },
    "methodIdentifiers": {
      "calculateRootFromPowerOfTwo(bytes32[])": "82b0eab8",
      "getEmptyTreeHashAtIndex(uint256)": "451a1055",
      "getHashOfWordAtIndex(bytes,uint256)": "34bd712d",
      "getMerkleRootFromBytes(bytes,uint256)": "c84583a1",
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "79de4601"
    }
  }
}