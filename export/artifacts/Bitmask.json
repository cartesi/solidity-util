{
  "contractName": "Bitmask",
  "sourceName": "contracts/Bitmask.sol",
  "abi": [],
  "bytecode": "0x61020161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806303fbaf73146100455780636449da101461006c575b600080fd5b610058610053366004610130565b61008e565b604051901515815260200160405180910390f35b81801561007857600080fd5b5061008c610087366004610151565b6100ce565b005b60008061009d6101008461018d565b905060006100ad610100856101a1565b6000928352602095909552506040902054600190931b909216151592915050565b60006100dc6101008461018d565b905060006100ec610100856101a1565b9050821561011057600082815260208690526040902080546001831b179055610129565b600082815260208690526040902080546001831b191690555b5050505050565b60008060408385031215610142578182fd5b50508035926020909101359150565b600080600060608486031215610165578081fd5b833592506020840135915060408401358015158114610182578182fd5b809150509250925092565b60008261019c5761019c6101b5565b500490565b6000826101b0576101b06101b5565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212200f8e0f4b82404ab41a0a463ebfd6ceb825dcf1eb840a650cbfc02d268876dbf464736f6c63430008040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806303fbaf73146100455780636449da101461006c575b600080fd5b610058610053366004610130565b61008e565b604051901515815260200160405180910390f35b81801561007857600080fd5b5061008c610087366004610151565b6100ce565b005b60008061009d6101008461018d565b905060006100ad610100856101a1565b6000928352602095909552506040902054600190931b909216151592915050565b60006100dc6101008461018d565b905060006100ec610100856101a1565b9050821561011057600082815260208690526040902080546001831b179055610129565b600082815260208690526040902080546001831b191690555b5050505050565b60008060408385031215610142578182fd5b50508035926020909101359150565b600080600060608486031215610165578081fd5b833592506020840135915060408401358015158114610182578182fd5b809150509250925092565b60008261019c5761019c6101b5565b500490565b6000826101b0576101b06101b5565b500690565b634e487b7160e01b600052601260045260246000fdfea26469706673582212200f8e0f4b82404ab41a0a463ebfd6ceb825dcf1eb840a650cbfc02d268876dbf464736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "author": "Stephen Chen",
    "kind": "dev",
    "methods": {},
    "title": "Bit Mask Library",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0x201 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FBAF73 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x6449DA10 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x151 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D PUSH2 0x100 DUP5 PUSH2 0x18D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD PUSH2 0x100 DUP6 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 SWAP4 SHL SWAP1 SWAP3 AND ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC PUSH2 0x100 DUP5 PUSH2 0x18D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC PUSH2 0x100 DUP6 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP4 SHL OR SWAP1 SSTORE PUSH2 0x129 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP4 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x142 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x182 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19C JUMPI PUSH2 0x19C PUSH2 0x1B5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B0 JUMPI PUSH2 0x1B0 PUSH2 0x1B5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP15 0xF 0x4B DUP3 BLOCKHASH 0x4A 0xB4 BYTE EXP CHAINID RETURNDATACOPY 0xBF 0xD6 0xCE 0xB8 0x25 0xDC CALL 0xEB DUP5 EXP PUSH6 0xCBFC02D2688 PUSH23 0xDBF464736F6C6343000804003300000000000000000000 ",
      "sourceMap": "746:1079:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;746:1079:0;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1332:2",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:2",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "126:171:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "172:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "181:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "174:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "174:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "174:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "147:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "156:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "143:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "143:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "168:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "139:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "139:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "136:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "207:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "230:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "217:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "217:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "207:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "249:42:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "276:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "287:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "272:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "272:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "259:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "259:32:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "249:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_mapping$_t_uint256_$_t_uint256_$t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "84:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "95:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "107:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "115:6:2",
                    "type": ""
                  }
                ],
                "src": "14:283:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "428:328:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "474:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:6:2"
                                },
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "491:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "476:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "476:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "476:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "449:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "445:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "445:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "470:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "441:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "438:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "509:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "532:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "519:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "509:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "551:42:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "578:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "589:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "574:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "574:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "561:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "561:32:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "551:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "602:45:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "632:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "643:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "628:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "628:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "615:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "615:32:2"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "606:5:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "700:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "709:6:2"
                                },
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "702:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "702:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "702:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "669:5:2"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "690:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "683:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "683:13:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:21:2"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "666:2:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "666:32:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "659:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:40:2"
                      },
                      "nodeType": "YulIf",
                      "src": "656:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "735:15:2",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "745:5:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "735:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_mapping$_t_uint256_$_t_uint256_$t_uint256t_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "378:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "389:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "401:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "409:6:2",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "417:6:2",
                    "type": ""
                  }
                ],
                "src": "302:454:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "864:92:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "874:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "886:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "897:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "874:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "916:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "941:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:14:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "927:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "927:22:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "909:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "909:41:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "909:41:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "833:9:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "844:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "855:4:2",
                    "type": ""
                  }
                ],
                "src": "761:195:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1007:74:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1030:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "1032:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1032:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1032:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1027:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1020:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1020:9:2"
                      },
                      "nodeType": "YulIf",
                      "src": "1017:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1061:14:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1070:1:2"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1073:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "1066:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:9:2"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "1061:1:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "992:1:2",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "995:1:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "1001:1:2",
                    "type": ""
                  }
                ],
                "src": "961:120:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1124:74:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1147:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "1149:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1149:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1149:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1144:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1137:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:9:2"
                      },
                      "nodeType": "YulIf",
                      "src": "1134:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1178:14:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "1187:1:2"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1190:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "mod",
                          "nodeType": "YulIdentifier",
                          "src": "1183:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1183:9:2"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "1178:1:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "mod_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "1109:1:2",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "1112:1:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "1118:1:2",
                    "type": ""
                  }
                ],
                "src": "1086:112:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1235:95:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1252:1:2",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1259:3:2",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1264:10:2",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1255:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1255:20:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1245:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:31:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1245:31:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:1:2",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1295:4:2",
                            "type": "",
                            "value": "0x12"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1285:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1285:15:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1285:15:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1316:1:2",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1319:4:2",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "1309:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1309:15:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1309:15:2"
                    }
                  ]
                },
                "name": "panic_error_0x12",
                "nodeType": "YulFunctionDefinition",
                "src": "1203:127:2"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_mapping$_t_uint256_$_t_uint256_$t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_mapping$_t_uint256_$_t_uint256_$t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
          "id": 2,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FBAF73 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x6449DA10 EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0x130 JUMP JUMPDEST PUSH2 0x8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x151 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D PUSH2 0x100 DUP5 PUSH2 0x18D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAD PUSH2 0x100 DUP6 PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 SWAP4 SHL SWAP1 SWAP3 AND ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC PUSH2 0x100 DUP5 PUSH2 0x18D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEC PUSH2 0x100 DUP6 PUSH2 0x1A1 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP4 SHL OR SWAP1 SSTORE PUSH2 0x129 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP4 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x142 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x182 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19C JUMPI PUSH2 0x19C PUSH2 0x1B5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B0 JUMPI PUSH2 0x1B0 PUSH2 0x1B5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF DUP15 0xF 0x4B DUP3 BLOCKHASH 0x4A 0xB4 BYTE EXP CHAINID RETURNDATACOPY 0xBF 0xD6 0xCE 0xB8 0x25 0xDC CALL 0xEB DUP5 EXP PUSH6 0xCBFC02D2688 PUSH23 0xDBF464736F6C6343000804003300000000000000000000 ",
      "sourceMap": "746:1079:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:378;;;;;;:::i;:::-;;:::i;:::-;;;934:14:2;;927:22;909:41;;897:2;882:18;1445:378:0;;;;;;;810:587;;;;;;;;;;-1:-1:-1;810:587:0;;;;;:::i;:::-;;:::i;:::-;;1445:378;1565:4;;1688:10;1695:3;1688:4;:10;:::i;:::-;1655:44;-1:-1:-1;1709:21:0;1733:10;1740:3;1733:4;:10;:::i;:::-;1763:23;;;;;;;;;-1:-1:-1;1763:23:0;;;;1790:1;:18;;;1763:46;;;1762:53;;;1445:378;-1:-1:-1;;1445:378:0:o;810:587::-;1015:22;1048:10;1055:3;1048:4;:10;:::i;:::-;1015:44;-1:-1:-1;1069:21:0;1093:10;1100:3;1093:4;:10;:::i;:::-;1069:34;;1118:6;1114:277;;;1182:23;;;;;;;;;;;;;1225:1;:18;;1182:62;1140:104;;1114:277;;;1317:23;;;;;;;;;;;;;1361:1;:18;;1359:21;1317:63;1275:105;;1114:277;810:587;;;;;:::o;14:283:2:-;107:6;115;168:2;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;-1:-1:-1;;217:23:2;;;287:2;272:18;;;259:32;;-1:-1:-1;126:171:2:o;302:454::-;401:6;409;417;470:2;458:9;449:7;445:23;441:32;438:2;;;491:6;483;476:22;438:2;532:9;519:23;509:33;;589:2;578:9;574:18;561:32;551:42;;643:2;632:9;628:18;615:32;690:5;683:13;676:21;669:5;666:32;656:2;;717:6;709;702:22;656:2;745:5;735:15;;;428:328;;;;;:::o;961:120::-;1001:1;1027;1017:2;;1032:18;;:::i;:::-;-1:-1:-1;1066:9:2;;1007:74::o;1086:112::-;1118:1;1144;1134:2;;1149:18;;:::i;:::-;-1:-1:-1;1183:9:2;;1124:74::o;1203:127::-;1264:10;1259:3;1255:20;1252:1;1245:31;1295:4;1292:1;1285:15;1319:4;1316:1;1309:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "102600",
        "executionCost": "184",
        "totalCost": "102784"
      },
      "external": {
        "getBit(mapping(uint256 => uint256) storage,uint256)": "1305",
        "setBit(mapping(uint256 => uint256) storage,uint256,bool)": "21382"
      }
    },
    "methodIdentifiers": {
      "getBit(mapping(uint256 => uint256) storage,uint256)": "03fbaf73",
      "setBit(mapping(uint256 => uint256) storage,uint256,bool)": "6449da10"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Stephen Chen\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Bit Mask Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getBit(mapping(uint256 => uint256) storage,uint256)\":{\"notice\":\"Get a bit in the bit mask\"},\"setBit(mapping(uint256 => uint256) storage,uint256,bool)\":{\"notice\":\"Set a bit in the bit mask\"}},\"notice\":\"Implements bit mask with dynamic array\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bitmask.sol\":\"Bitmask\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bitmask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Bit Mask Library\\n/// @author Stephen Chen\\n/// @notice Implements bit mask with dynamic array\\nlibrary Bitmask {\\n    /// @notice Set a bit in the bit mask\\n    function setBit(\\n        mapping(uint256 => uint256) storage bitmask,\\n        uint256 _bit,\\n        bool _value\\n    ) public {\\n        // calculate the number of bits has been store in bitmask now\\n        uint256 positionOfMask = uint256(_bit / 256);\\n        uint256 positionOfBit = _bit % 256;\\n\\n        if (_value) {\\n            bitmask[positionOfMask] =\\n                bitmask[positionOfMask] |\\n                (1 << positionOfBit);\\n        } else {\\n            bitmask[positionOfMask] =\\n                bitmask[positionOfMask] &\\n                ~(1 << positionOfBit);\\n        }\\n    }\\n\\n    /// @notice Get a bit in the bit mask\\n    function getBit(mapping(uint256 => uint256) storage bitmask, uint256 _bit)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        // calculate the number of bits has been store in bitmask now\\n        uint256 positionOfMask = uint256(_bit / 256);\\n        uint256 positionOfBit = _bit % 256;\\n\\n        return ((bitmask[positionOfMask] & (1 << positionOfBit)) != 0);\\n    }\\n}\\n\",\"keccak256\":\"0xe35cf68672f5844589c0e56f36aa3813ca4ffb882a55a46d15adac7e3cc889bd\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getBit(mapping(uint256 => uint256) storage,uint256)": {
        "notice": "Get a bit in the bit mask"
      },
      "setBit(mapping(uint256 => uint256) storage,uint256,bool)": {
        "notice": "Set a bit in the bit mask"
      }
    },
    "notice": "Implements bit mask with dynamic array",
    "version": 1
  }
}