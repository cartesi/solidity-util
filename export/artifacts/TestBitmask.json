{
  "contractName": "TestBitmask",
  "sourceName": "contracts/test/TestBitmask.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bit",
          "type": "uint256"
        }
      ],
      "name": "getBit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bit",
          "type": "uint256"
        }
      ],
      "name": "setBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bit",
          "type": "uint256"
        }
      ],
      "name": "unsetBit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610258806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063428be8071461004657806383363ef61461005b578063d991aeee1461006e575b600080fd5b61005961005436600461020a565b610095565b005b61005961006936600461020a565b61010a565b61008161007c36600461020a565b610150565b604051901515815260200160405180910390f35b6040516306449da160e41b815260006004820181905260248201839052604482015273__$42c89e72d697364e16223415bf9649dea2$__90636449da10906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b5050505050565b6040516306449da160e41b815260006004820152602481018290526001604482015273__$42c89e72d697364e16223415bf9649dea2$__90636449da10906064016100d7565b6040516303fbaf7360e01b8152600060048201819052602482018390529073__$42c89e72d697364e16223415bf9649dea2$__906303fbaf739060440160206040518083038186803b1580156101a557600080fd5b505af41580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd91906101e3565b92915050565b6000602082840312156101f4578081fd5b81518015158114610203578182fd5b9392505050565b60006020828403121561021b578081fd5b503591905056fea264697066735822122081c071ad5e7ba8454c3609b99aa0697a8d06cab47dee7f3c00c08c39f0db23e664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063428be8071461004657806383363ef61461005b578063d991aeee1461006e575b600080fd5b61005961005436600461020a565b610095565b005b61005961006936600461020a565b61010a565b61008161007c36600461020a565b610150565b604051901515815260200160405180910390f35b6040516306449da160e41b815260006004820181905260248201839052604482015273__$42c89e72d697364e16223415bf9649dea2$__90636449da10906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b5050505050565b6040516306449da160e41b815260006004820152602481018290526001604482015273__$42c89e72d697364e16223415bf9649dea2$__90636449da10906064016100d7565b6040516303fbaf7360e01b8152600060048201819052602482018390529073__$42c89e72d697364e16223415bf9649dea2$__906303fbaf739060440160206040518083038186803b1580156101a557600080fd5b505af41580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd91906101e3565b92915050565b6000602082840312156101f4578081fd5b81518015158114610203578182fd5b9392505050565b60006020828403121561021b578081fd5b503591905056fea264697066735822122081c071ad5e7ba8454c3609b99aa0697a8d06cab47dee7f3c00c08c39f0db23e664736f6c63430008040033",
  "linkReferences": {
    "contracts/Bitmask.sol": {
      "Bitmask": [
        {
          "length": 20,
          "start": 217
        },
        {
          "length": 20,
          "start": 334
        },
        {
          "length": 20,
          "start": 400
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/Bitmask.sol": {
      "Bitmask": [
        {
          "length": 20,
          "start": 185
        },
        {
          "length": 20,
          "start": 302
        },
        {
          "length": 20,
          "start": 368
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "contracts/Bitmask.sol": {
          "Bitmask": [
            {
              "length": 20,
              "start": 217
            },
            {
              "length": 20,
              "start": 334
            },
            {
              "length": 20,
              "start": 400
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x428BE807 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x83363EF6 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD991AEEE EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x10A JUMP JUMPDEST PUSH2 0x81 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6449DA1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6449DA10 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6449DA1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6449DA10 SWAP1 PUSH1 0x64 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3FBAF73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x3FBAF73 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x203 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xC0 PUSH18 0xAD5E7BA8454C3609B99AA0697A8D06CAB47D 0xEE PUSH32 0x3C00C08C39F0DB23E664736F6C63430008040033000000000000000000000000 ",
      "sourceMap": "692:408:1:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1353:2",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:2",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "92:219:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "138:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "147:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "155:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "140:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "140:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "140:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "113:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "122:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "109:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "109:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "134:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "105:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "105:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "102:2:2"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "173:29:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "192:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "186:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "186:16:2"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "177:5:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "255:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "264:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "257:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "257:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "257:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:2"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "245:5:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "238:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "238:13:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:21:2"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "221:2:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:32:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "214:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:40:2"
                      },
                      "nodeType": "YulIf",
                      "src": "211:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "290:15:2",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "300:5:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "290:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "58:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "69:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "81:6:2",
                    "type": ""
                  }
                ],
                "src": "14:297:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "386:120:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "432:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "441:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "449:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "434:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "434:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "434:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "407:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "416:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "403:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "403:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "428:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "399:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "399:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "396:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "467:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "490:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "477:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "467:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "352:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "363:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "375:6:2",
                    "type": ""
                  }
                ],
                "src": "316:190:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "606:92:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "616:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "628:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "639:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "624:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "624:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "616:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "658:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "683:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:14:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "669:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "669:22:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "651:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:41:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "651:41:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "575:9:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "586:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "597:4:2",
                    "type": ""
                  }
                ],
                "src": "511:187:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "865:119:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "875:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "887:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "898:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "883:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "883:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "875:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "917:9:2"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "910:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:25:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "910:25:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "955:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "966:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "951:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "951:18:2"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "971:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "944:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "944:34:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "944:34:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_mapping$_t_uint256_$_t_uint256_$_t_uint256__to_t_uint256_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "826:9:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "837:6:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "845:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "856:4:2",
                    "type": ""
                  }
                ],
                "src": "703:281:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1173:178:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1183:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1195:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1206:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1191:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1191:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1183:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1225:9:2"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1236:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1218:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:25:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1218:25:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1263:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1274:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1259:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1259:18:2"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1279:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1252:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1252:34:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1252:34:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1306:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1317:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1302:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1302:18:2"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1336:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1329:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1329:14:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1322:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:22:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1295:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1295:50:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1295:50:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_mapping$_t_uint256_$_t_uint256_$_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1126:9:2",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1137:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1145:6:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1153:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1164:4:2",
                    "type": ""
                  }
                ],
                "src": "989:362:2"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_mapping$_t_uint256_$_t_uint256_$_t_uint256__to_t_uint256_t_uint256__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_mapping$_t_uint256_$_t_uint256_$_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n}",
          "id": 2,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {
        "contracts/Bitmask.sol": {
          "Bitmask": [
            {
              "length": 20,
              "start": 185
            },
            {
              "length": 20,
              "start": 302
            },
            {
              "length": 20,
              "start": 368
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x428BE807 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x83363EF6 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD991AEEE EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x10A JUMP JUMPDEST PUSH2 0x81 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6449DA1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6449DA10 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6449DA1 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x0 SWAP1 PUSH4 0x6449DA10 SWAP1 PUSH1 0x64 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3FBAF73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x3FBAF73 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x203 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xC0 PUSH18 0xAD5E7BA8454C3609B99AA0697A8D06CAB47D 0xEE PUSH32 0x3C00C08C39F0DB23E664736F6C63430008040033000000000000000000000000 ",
      "sourceMap": "692:408:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:83;;;;;;:::i;:::-;;:::i;:::-;;822:80;;;;;;:::i;:::-;;:::i;997:101::-;;;;;;:::i;:::-;;:::i;:::-;;;676:14:2;;669:22;651:41;;639:2;624:18;997:101:1;;;;;;;908:83;957:27;;-1:-1:-1;;;957:27:1;;:7;:27;;;1218:25:2;;;1259:18;;;1252:34;;;1302:18;;;1295:50;957:14:1;;;;1191:18:2;;957:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:83;:::o;822:80::-;869:26;;-1:-1:-1;;;869:26:1;;:7;:26;;;1218:25:2;1259:18;;;1252:34;;;890:4:1;1302:18:2;;;1295:50;869:14:1;;;;1191:18:2;;869:26:1;1173:178:2;997:101:1;1071:20;;-1:-1:-1;;;1071:20:1;;1048:4;1071:20;;;910:25:2;;;951:18;;;944:34;;;1048:4:1;1071:14;;;;883:18:2;;1071:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1064:27;997:101;-1:-1:-1;;997:101:1:o;14:297:2:-;81:6;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:2:o;316:190::-;375:6;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:2;;386:120;-1:-1:-1;386:120:2:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "120000",
        "executionCost": "165",
        "totalCost": "120165"
      },
      "external": {
        "getBit(uint256)": "infinite",
        "setBit(uint256)": "infinite",
        "unsetBit(uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "getBit(uint256)": "d991aeee",
      "setBit(uint256)": "83363ef6",
      "unsetBit(uint256)": "428be807"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bit\",\"type\":\"uint256\"}],\"name\":\"getBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bit\",\"type\":\"uint256\"}],\"name\":\"setBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bit\",\"type\":\"uint256\"}],\"name\":\"unsetBit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestBitmask.sol\":\"TestBitmask\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bitmask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\n/// @title Bit Mask Library\\n/// @author Stephen Chen\\n/// @notice Implements bit mask with dynamic array\\nlibrary Bitmask {\\n    /// @notice Set a bit in the bit mask\\n    function setBit(\\n        mapping(uint256 => uint256) storage bitmask,\\n        uint256 _bit,\\n        bool _value\\n    ) public {\\n        // calculate the number of bits has been store in bitmask now\\n        uint256 positionOfMask = uint256(_bit / 256);\\n        uint256 positionOfBit = _bit % 256;\\n\\n        if (_value) {\\n            bitmask[positionOfMask] =\\n                bitmask[positionOfMask] |\\n                (1 << positionOfBit);\\n        } else {\\n            bitmask[positionOfMask] =\\n                bitmask[positionOfMask] &\\n                ~(1 << positionOfBit);\\n        }\\n    }\\n\\n    /// @notice Get a bit in the bit mask\\n    function getBit(mapping(uint256 => uint256) storage bitmask, uint256 _bit)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        // calculate the number of bits has been store in bitmask now\\n        uint256 positionOfMask = uint256(_bit / 256);\\n        uint256 positionOfBit = _bit % 256;\\n\\n        return ((bitmask[positionOfMask] & (1 << positionOfBit)) != 0);\\n    }\\n}\\n\",\"keccak256\":\"0xe35cf68672f5844589c0e56f36aa3813ca4ffb882a55a46d15adac7e3cc889bd\",\"license\":\"Apache-2.0\"},\"contracts/test/TestBitmask.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Test Bitmask\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Bitmask.sol\\\";\\n\\ncontract TestBitmask {\\n    using Bitmask for mapping(uint256 => uint256);\\n\\n    mapping(uint256 => uint256) internal bitmask;\\n\\n    function setBit(uint256 _bit) public {\\n        bitmask.setBit(_bit, true);\\n    }\\n\\n    function unsetBit(uint256 _bit) public {\\n        bitmask.setBit(_bit, false);\\n    }\\n\\n    function getBit(uint256 _bit) public view returns (bool) {\\n        return bitmask.getBit(_bit);\\n    }\\n}\\n\",\"keccak256\":\"0xd70470f5812927c7c5694802516db9b4d3c229f4c794da9ceefbda8c39340ff8\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 115,
        "contract": "contracts/test/TestBitmask.sol:TestBitmask",
        "label": "bitmask",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}