{
  "contractName": "TestMerkle",
  "sourceName": "contracts/test/TestMerkle.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "calculateRootFromPowerOfTwo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getEmptyTreeHashAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_wordIndex",
          "type": "uint256"
        }
      ],
      "name": "getHashOfWordAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "_log2Size",
          "type": "uint8"
        }
      ],
      "name": "getMerkleRootFromBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_log2Size",
          "type": "uint8"
        }
      ],
      "name": "getPristineHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_position",
          "type": "uint64"
        },
        {
          "internalType": "bytes8",
          "name": "_value",
          "type": "bytes8"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_position",
          "type": "uint64"
        },
        {
          "internalType": "uint8",
          "name": "_logOfSize",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_drive",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "siblings",
          "type": "bytes32[]"
        }
      ],
      "name": "getRootWithDrive",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061084a806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806382b0eab81161005b57806382b0eab8146100cd5780638492d93b146100e0578063a7342688146100f3578063d7304dd91461010657600080fd5b806334bd712d14610082578063451a1055146100a757806349fd2697146100ba575b600080fd5b610095610090366004610526565b610119565b60405190815260200160405180910390f35b6100956100b53660046105c2565b6101af565b6100956100c8366004610570565b61023c565b6100956100db3660046104db565b61027a565b6100956100ee3660046105da565b6102b4565b6100956101013660046106aa565b6102f2565b610095610114366004610644565b61032f565b6040516334bd712d60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906334bd712d9061015790879087908790600401610741565b60206040518083038186803b15801561016f57600080fd5b505af4158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a7919061050e565b949350505050565b60405163451a105560e01b81526004810182905260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063451a1055906024015b60206040518083038186803b1580156101fe57600080fd5b505af4158015610212573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610236919061050e565b92915050565b6040516349fd269760e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906349fd26979061015790879087908790600401610765565b6040516310561d5760e31b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906382b0eab8906101e690859060040161072e565b604051638492d93b60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__90638492d93b906101579087908790879060040161078c565b6040516314e684d160e31b815260ff8216600482015260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063a7342688906024016101e6565b60405163d7304dd960e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063d7304dd99061036f9088908890889088906004016107c2565b60206040518083038186803b15801561038757600080fd5b505af415801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf919061050e565b95945050505050565b600082601f8301126103d8578081fd5b8135602067ffffffffffffffff808311156103f5576103f56107fe565b8260051b604051601f19603f8301168101818110848211171561041a5761041a6107fe565b60405284815283810192508684018288018501891015610438578687fd5b8692505b8583101561045a57803584529284019260019290920191840161043c565b50979650505050505050565b60008083601f840112610477578182fd5b50813567ffffffffffffffff81111561048e578182fd5b6020830191508360208285010111156104a657600080fd5b9250929050565b803567ffffffffffffffff811681146104c557600080fd5b919050565b803560ff811681146104c557600080fd5b6000602082840312156104ec578081fd5b813567ffffffffffffffff811115610502578182fd5b6101a7848285016103c8565b60006020828403121561051f578081fd5b5051919050565b60008060006040848603121561053a578182fd5b833567ffffffffffffffff811115610550578283fd5b61055c86828701610466565b909790965060209590950135949350505050565b600080600060408486031215610584578283fd5b833567ffffffffffffffff81111561059a578384fd5b6105a686828701610466565b90945092506105b99050602085016104ca565b90509250925092565b6000602082840312156105d3578081fd5b5035919050565b6000806000606084860312156105ee578283fd5b6105f7846104ad565b925060208401356001600160c01b031981168114610613578283fd5b9150604084013567ffffffffffffffff81111561062e578182fd5b61063a868287016103c8565b9150509250925092565b60008060008060808587031215610659578081fd5b610662856104ad565b9350610670602086016104ca565b925060408501359150606085013567ffffffffffffffff811115610692578182fd5b61069e878288016103c8565b91505092959194509250565b6000602082840312156106bb578081fd5b6106c4826104ca565b9392505050565b6000815180845260208085019450808401835b838110156106fa578151875295820195908201906001016106de565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006106c460208301846106cb565b604081526000610755604083018587610705565b9050826020830152949350505050565b604081526000610779604083018587610705565b905060ff83166020830152949350505050565b67ffffffffffffffff8416815267ffffffffffffffff60c01b831660208201526060604082015260006103bf60608301846106cb565b67ffffffffffffffff8516815260ff841660208201528260408201526080606082015260006107f460808301846106cb565b9695505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220be3cde506cd491e687ced3c0d03c78df5d5660657914e3dda53811c5fbee471664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806382b0eab81161005b57806382b0eab8146100cd5780638492d93b146100e0578063a7342688146100f3578063d7304dd91461010657600080fd5b806334bd712d14610082578063451a1055146100a757806349fd2697146100ba575b600080fd5b610095610090366004610526565b610119565b60405190815260200160405180910390f35b6100956100b53660046105c2565b6101af565b6100956100c8366004610570565b61023c565b6100956100db3660046104db565b61027a565b6100956100ee3660046105da565b6102b4565b6100956101013660046106aa565b6102f2565b610095610114366004610644565b61032f565b6040516334bd712d60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906334bd712d9061015790879087908790600401610741565b60206040518083038186803b15801561016f57600080fd5b505af4158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a7919061050e565b949350505050565b60405163451a105560e01b81526004810182905260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063451a1055906024015b60206040518083038186803b1580156101fe57600080fd5b505af4158015610212573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610236919061050e565b92915050565b6040516349fd269760e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906349fd26979061015790879087908790600401610765565b6040516310561d5760e31b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906382b0eab8906101e690859060040161072e565b604051638492d93b60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__90638492d93b906101579087908790879060040161078c565b6040516314e684d160e31b815260ff8216600482015260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063a7342688906024016101e6565b60405163d7304dd960e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063d7304dd99061036f9088908890889088906004016107c2565b60206040518083038186803b15801561038757600080fd5b505af415801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf919061050e565b95945050505050565b600082601f8301126103d8578081fd5b8135602067ffffffffffffffff808311156103f5576103f56107fe565b8260051b604051601f19603f8301168101818110848211171561041a5761041a6107fe565b60405284815283810192508684018288018501891015610438578687fd5b8692505b8583101561045a57803584529284019260019290920191840161043c565b50979650505050505050565b60008083601f840112610477578182fd5b50813567ffffffffffffffff81111561048e578182fd5b6020830191508360208285010111156104a657600080fd5b9250929050565b803567ffffffffffffffff811681146104c557600080fd5b919050565b803560ff811681146104c557600080fd5b6000602082840312156104ec578081fd5b813567ffffffffffffffff811115610502578182fd5b6101a7848285016103c8565b60006020828403121561051f578081fd5b5051919050565b60008060006040848603121561053a578182fd5b833567ffffffffffffffff811115610550578283fd5b61055c86828701610466565b909790965060209590950135949350505050565b600080600060408486031215610584578283fd5b833567ffffffffffffffff81111561059a578384fd5b6105a686828701610466565b90945092506105b99050602085016104ca565b90509250925092565b6000602082840312156105d3578081fd5b5035919050565b6000806000606084860312156105ee578283fd5b6105f7846104ad565b925060208401356001600160c01b031981168114610613578283fd5b9150604084013567ffffffffffffffff81111561062e578182fd5b61063a868287016103c8565b9150509250925092565b60008060008060808587031215610659578081fd5b610662856104ad565b9350610670602086016104ca565b925060408501359150606085013567ffffffffffffffff811115610692578182fd5b61069e878288016103c8565b91505092959194509250565b6000602082840312156106bb578081fd5b6106c4826104ca565b9392505050565b6000815180845260208085019450808401835b838110156106fa578151875295820195908201906001016106de565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006106c460208301846106cb565b604081526000610755604083018587610705565b9050826020830152949350505050565b604081526000610779604083018587610705565b905060ff83166020830152949350505050565b67ffffffffffffffff8416815267ffffffffffffffff60c01b831660208201526060604082015260006103bf60608301846106cb565b67ffffffffffffffff8516815260ff841660208201528260408201526080606082015260006107f460808301846106cb565b9695505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220be3cde506cd491e687ced3c0d03c78df5d5660657914e3dda53811c5fbee471664736f6c63430008040033",
  "linkReferences": {
    "contracts/Merkle.sol": {
      "Merkle": [
        {
          "length": 20,
          "start": 331
        },
        {
          "length": 20,
          "start": 488
        },
        {
          "length": 20,
          "start": 622
        },
        {
          "length": 20,
          "start": 684
        },
        {
          "length": 20,
          "start": 742
        },
        {
          "length": 20,
          "start": 813
        },
        {
          "length": 20,
          "start": 865
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/Merkle.sol": {
      "Merkle": [
        {
          "length": 20,
          "start": 299
        },
        {
          "length": 20,
          "start": 456
        },
        {
          "length": 20,
          "start": 590
        },
        {
          "length": 20,
          "start": 652
        },
        {
          "length": 20,
          "start": 710
        },
        {
          "length": 20,
          "start": 781
        },
        {
          "length": 20,
          "start": 833
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "contracts/Merkle.sol": {
          "Merkle": [
            {
              "length": 20,
              "start": 331
            },
            {
              "length": 20,
              "start": 488
            },
            {
              "length": 20,
              "start": 622
            },
            {
              "length": 20,
              "start": 684
            },
            {
              "length": 20,
              "start": 742
            },
            {
              "length": 20,
              "start": 813
            },
            {
              "length": 20,
              "start": 865
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82B0EAB8 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8492D93B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xA7342688 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xD7304DD9 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34BD712D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x49FD2697 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x95 PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH2 0x95 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34BD712D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34BD712D SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x451A1055 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x451A1055 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x49FD2697 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x49FD2697 SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10561D57 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x82B0EAB8 SWAP1 PUSH2 0x1E6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8492D93B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x8492D93B SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14E684D1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xA7342688 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD7304DD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xD7304DD9 SWAP1 PUSH2 0x36F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x3F5 JUMPI PUSH2 0x3F5 PUSH2 0x7FE JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x41A JUMPI PUSH2 0x41A PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x438 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x45A JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x43C JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x477 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x502 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A7 DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x550 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x55C DUP7 DUP3 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x584 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x5A6 DUP7 DUP3 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x5B9 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5EE JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x5F7 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x613 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x63A DUP7 DUP3 DUP8 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x659 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x662 DUP6 PUSH2 0x4AD JUMP JUMPDEST SWAP4 POP PUSH2 0x670 PUSH1 0x20 DUP7 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x692 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x69E DUP8 DUP3 DUP9 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6C4 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6DE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x755 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x779 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC0 SHL DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3BF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x7F4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE EXTCODECOPY 0xDE POP PUSH13 0xD491E687CED3C0D03C78DF5D56 PUSH1 0x65 PUSH26 0x14E3DDA53811C5FBEE471664736F6C6343000804003300000000 ",
      "sourceMap": "690:1407:4:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:8201:5",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:5",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "78:869:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "127:24:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:5:5"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "143:5:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "129:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "129:20:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "129:20:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "106:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "114:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "102:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "102:17:5"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "121:3:5"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "98:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "98:27:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "91:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:35:5"
                      },
                      "nodeType": "YulIf",
                      "src": "88:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "160:30:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "183:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "170:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "170:20:5"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "164:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "199:14:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "209:4:5",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "203:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "222:28:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "226:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "273:22:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "275:16:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "275:18:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "275:18:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "265:2:5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "269:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "262:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "262:10:5"
                      },
                      "nodeType": "YulIf",
                      "src": "259:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "304:20:5",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:1:5",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "321:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "314:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:10:5"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "308:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "333:23:5",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "353:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "347:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "347:9:5"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "337:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "365:56:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "387:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "403:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "407:2:5",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:11:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "416:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "412:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "412:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "395:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "395:25:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "383:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:38:5"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "369:10:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "480:22:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "482:16:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "482:18:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "482:18:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "439:10:5"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "451:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "436:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "436:18:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "459:10:5"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "471:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "456:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "456:22:5"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "433:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:46:5"
                      },
                      "nodeType": "YulIf",
                      "src": "430:2:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "518:2:5",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "522:10:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "511:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "511:22:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "511:22:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "542:17:5",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:5"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "546:3:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "575:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "583:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "568:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "568:18:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "595:22:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "606:6:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "614:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:15:5"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "595:3:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "626:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "649:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "637:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "637:15:5"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "630:3:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "698:24:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:5:5"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "714:5:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "700:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "700:20:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "700:20:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "675:6:5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "683:2:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:15:5"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "688:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:24:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "693:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "664:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:33:5"
                      },
                      "nodeType": "YulIf",
                      "src": "661:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "731:14:5",
                      "value": {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:5"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "735:1:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "799:118:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "820:3:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "838:3:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nodeType": "YulIdentifier",
                                    "src": "825:12:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "825:17:5"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "813:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "813:30:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "813:30:5"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "856:19:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "867:3:5"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "863:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "863:12:5"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "856:3:5"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "888:19:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:3:5"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "904:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "895:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "895:12:5"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "888:3:5"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "765:1:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "768:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "762:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:9:5"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "772:18:5",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "774:14:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "783:1:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "786:1:5",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "779:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "779:9:5"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "774:1:5"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "758:3:5",
                        "statements": []
                      },
                      "src": "754:163:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "926:15:5",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "935:6:5"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "926:5:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_array_bytes32_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "52:6:5",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "60:3:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "68:5:5",
                    "type": ""
                  }
                ],
                "src": "14:933:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1024:303:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1073:30:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1082:8:5"
                                },
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1092:8:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1075:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1075:26:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1075:26:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1052:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1060:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1048:17:5"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1067:3:5"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1044:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1044:27:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1037:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1037:35:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1034:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1112:30:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1135:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1122:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1122:20:5"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "1112:6:5"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1185:30:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1194:8:5"
                                },
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:8:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1187:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1187:26:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1187:26:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1157:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1165:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1154:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1154:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1151:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1224:29:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1240:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1248:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:17:5"
                      },
                      "variableNames": [
                        {
                          "name": "arrayPos",
                          "nodeType": "YulIdentifier",
                          "src": "1224:8:5"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1305:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1314:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1317:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1307:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1307:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1307:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1276:6:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1284:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:19:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1293:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1268:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1268:30:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1300:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1265:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1265:39:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1262:2:5"
                    }
                  ]
                },
                "name": "abi_decode_bytes_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "987:6:5",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "995:3:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "arrayPos",
                    "nodeType": "YulTypedName",
                    "src": "1003:8:5",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "1013:6:5",
                    "type": ""
                  }
                ],
                "src": "952:375:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1380:123:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1390:29:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1399:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:20:5"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1390:5:5"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1481:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1490:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1493:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1483:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1483:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1483:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1441:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1452:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1459:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1448:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1448:30:5"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1438:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1438:41:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1431:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1431:49:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1428:2:5"
                    }
                  ]
                },
                "name": "abi_decode_uint64",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "1359:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1370:5:5",
                    "type": ""
                  }
                ],
                "src": "1332:171:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1555:109:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1565:29:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1587:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1574:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1574:20:5"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "1565:5:5"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1642:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1651:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1654:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1644:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1644:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1644:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1616:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1627:5:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1634:4:5",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1623:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1623:16:5"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1613:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:27:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1606:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1606:35:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1603:2:5"
                    }
                  ]
                },
                "name": "abi_decode_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "1534:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "1545:5:5",
                    "type": ""
                  }
                ],
                "src": "1508:156:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1764:273:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1810:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1819:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1827:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1812:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1812:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1812:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1785:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1794:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1781:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1781:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1806:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1774:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1845:37:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1859:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1859:23:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1849:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1925:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1934:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1942:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1927:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1927:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1927:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1897:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1905:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1894:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1891:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1960:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2003:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2014:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1999:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1999:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2023:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "1970:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1970:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1960:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1730:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1741:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1753:6:5",
                    "type": ""
                  }
                ],
                "src": "1669:368:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2123:113:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2169:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2178:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2186:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2171:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2171:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2171:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2144:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2153:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2140:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2140:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2165:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2136:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2136:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2133:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2204:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2220:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2214:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2214:16:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2204:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2089:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2100:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2112:6:5",
                    "type": ""
                  }
                ],
                "src": "2042:194:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2347:391:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2393:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:6:5"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2410:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2395:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2395:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2395:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2368:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2377:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2364:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2364:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2389:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2360:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2360:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2357:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2428:37:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2455:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2442:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2442:23:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2432:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2508:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2517:6:5"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2525:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2510:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2510:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2510:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2480:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2488:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2477:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2477:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2474:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2543:84:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2599:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2610:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2595:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2595:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2619:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "2569:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2569:58:5"
                      },
                      "variables": [
                        {
                          "name": "value0_1",
                          "nodeType": "YulTypedName",
                          "src": "2547:8:5",
                          "type": ""
                        },
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "2557:8:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2636:18:5",
                      "value": {
                        "name": "value0_1",
                        "nodeType": "YulIdentifier",
                        "src": "2646:8:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2636:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2663:18:5",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "2673:8:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2663:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2690:42:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2717:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2728:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2713:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2713:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2700:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:32:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2690:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2297:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2308:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2320:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2328:6:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2336:6:5",
                    "type": ""
                  }
                ],
                "src": "2241:497:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2847:395:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2893:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2902:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2910:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2895:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2895:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2895:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2868:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2877:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2864:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2864:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2889:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2857:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2928:37:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2955:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2942:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2942:23:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2932:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3008:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3017:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3025:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3010:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3010:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3010:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2980:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2988:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2977:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "2974:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3043:84:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3099:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3110:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3095:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3095:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3119:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "3069:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3069:58:5"
                      },
                      "variables": [
                        {
                          "name": "value0_1",
                          "nodeType": "YulTypedName",
                          "src": "3047:8:5",
                          "type": ""
                        },
                        {
                          "name": "value1_1",
                          "nodeType": "YulTypedName",
                          "src": "3057:8:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3136:18:5",
                      "value": {
                        "name": "value0_1",
                        "nodeType": "YulIdentifier",
                        "src": "3146:8:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3136:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3163:18:5",
                      "value": {
                        "name": "value1_1",
                        "nodeType": "YulIdentifier",
                        "src": "3173:8:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3163:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3190:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3221:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3232:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3217:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3217:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3200:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3200:36:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3190:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2797:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2808:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2820:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2828:6:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2836:6:5",
                    "type": ""
                  }
                ],
                "src": "2743:499:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3317:120:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3363:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3372:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3380:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3365:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3365:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3365:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3338:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3347:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3334:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3334:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3359:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3330:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3330:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "3327:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3398:33:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3421:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3408:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3408:23:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3398:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3283:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3294:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3306:6:5",
                    "type": ""
                  }
                ],
                "src": "3247:190:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3569:505:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3615:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3624:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3632:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3617:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3617:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3617:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3590:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3599:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3586:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3586:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3611:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3582:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3582:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "3579:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3650:38:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3678:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "3660:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3660:28:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3650:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3697:45:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3727:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3738:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3723:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3723:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3710:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3710:32:5"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3701:5:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3814:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3823:6:5"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3831:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3816:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3816:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3816:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3764:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3775:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3786:3:5",
                                        "type": "",
                                        "value": "192"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3791:18:5",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3782:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3782:28:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3771:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3771:40:5"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "3761:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3761:51:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3754:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3754:59:5"
                      },
                      "nodeType": "YulIf",
                      "src": "3751:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3849:15:5",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3859:5:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3849:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3873:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3904:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3915:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3900:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3900:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3887:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3887:32:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3877:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3962:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3971:6:5"
                                },
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3979:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3964:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3964:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3964:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3934:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3942:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3931:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3931:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "3928:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3997:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4040:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4051:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4036:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4036:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4060:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "4007:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4007:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3997:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint64t_bytes8t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3519:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3530:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3542:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3550:6:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "3558:6:5",
                    "type": ""
                  }
                ],
                "src": "3442:632:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4222:436:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4269:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4278:6:5"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4286:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4271:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4271:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4271:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4243:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4252:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4239:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4239:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4264:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4235:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:33:5"
                      },
                      "nodeType": "YulIf",
                      "src": "4232:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4304:38:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4332:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint64",
                          "nodeType": "YulIdentifier",
                          "src": "4314:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4314:28:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4304:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4351:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4382:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4393:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4378:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4378:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4361:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:36:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4351:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4406:42:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4433:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4444:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4429:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4429:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4416:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4416:32:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4406:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4457:46:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4488:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4499:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4484:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4484:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4471:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4471:32:5"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4461:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4546:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4555:6:5"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4563:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4548:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4548:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4548:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4518:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4515:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4515:30:5"
                      },
                      "nodeType": "YulIf",
                      "src": "4512:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4581:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4624:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4635:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4620:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4620:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4644:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "4591:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4591:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4581:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint64t_uint8t_bytes32t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4164:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4175:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4187:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4195:6:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4203:6:5",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "4211:6:5",
                    "type": ""
                  }
                ],
                "src": "4079:579:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4731:124:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4777:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4786:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4794:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4779:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4779:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4779:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4752:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4748:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4748:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4773:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4744:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4744:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "4741:2:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4812:37:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4839:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "4822:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4822:27:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4812:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint8",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4697:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4708:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4720:6:5",
                    "type": ""
                  }
                ],
                "src": "4663:192:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4921:376:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4931:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4951:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4945:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4945:12:5"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "4935:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4973:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4978:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4966:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4966:19:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4966:19:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4994:14:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5004:4:5",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4998:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5017:19:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5028:3:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5033:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5024:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5024:12:5"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5017:3:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5045:28:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5063:5:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5070:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5059:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5059:14:5"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "5049:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5082:12:5",
                      "value": {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5091:3:5"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "5086:1:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5152:120:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5173:3:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5184:6:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5178:5:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5178:13:5"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5166:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5166:26:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5166:26:5"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "5205:19:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5216:3:5"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5221:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5212:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5212:12:5"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5205:3:5"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "5237:25:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5251:6:5"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5259:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5247:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5247:15:5"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5237:6:5"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5114:1:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5117:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5111:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5111:13:5"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "5125:18:5",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5127:14:5",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5136:1:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5139:1:5",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5132:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5132:9:5"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "5127:1:5"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "5107:3:5",
                        "statements": []
                      },
                      "src": "5103:169:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5281:10:5",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5288:3:5"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5281:3:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_array_bytes32_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "4898:5:5",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4905:3:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4913:3:5",
                    "type": ""
                  }
                ],
                "src": "4860:437:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5368:202:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5385:3:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5390:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5378:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5378:19:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5378:19:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5423:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5428:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5419:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5419:14:5"
                          },
                          {
                            "name": "start",
                            "nodeType": "YulIdentifier",
                            "src": "5435:5:5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5442:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "5406:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5406:43:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5406:43:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5473:3:5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5478:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5469:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5469:16:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5487:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5465:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5465:27:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5494:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5458:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5458:40:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5458:40:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5507:57:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5522:3:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5535:6:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5543:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5531:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5531:15:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5552:2:5",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5548:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5548:7:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5527:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5527:29:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5518:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5518:39:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5559:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5514:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5514:50:5"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5507:3:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_bytes_calldata",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "start",
                    "nodeType": "YulTypedName",
                    "src": "5337:5:5",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "5344:6:5",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "5352:3:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "5360:3:5",
                    "type": ""
                  }
                ],
                "src": "5302:268:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5734:110:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5751:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5762:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5744:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5744:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5744:21:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5774:64:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5811:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5823:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5834:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5819:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5819:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "5782:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5782:56:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5774:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5703:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5714:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5725:4:5",
                    "type": ""
                  }
                ],
                "src": "5575:269:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5950:76:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5960:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5972:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5983:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5968:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5968:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5960:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6002:9:5"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6013:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5995:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5995:25:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5995:25:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5919:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5930:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5941:4:5",
                    "type": ""
                  }
                ],
                "src": "5849:177:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6196:158:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6213:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6224:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6206:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6206:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6206:21:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6236:69:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6270:6:5"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6278:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6290:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6301:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6286:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6286:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "6244:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6244:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6236:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6325:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6336:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6321:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6321:18:5"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6341:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6314:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6314:34:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6314:34:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6149:9:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "6160:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6168:6:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6176:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6187:4:5",
                    "type": ""
                  }
                ],
                "src": "6031:323:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6520:169:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6537:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6548:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6530:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6530:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6530:21:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6560:69:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6594:6:5"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6602:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6614:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6625:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6610:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6610:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes_calldata",
                          "nodeType": "YulIdentifier",
                          "src": "6568:25:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6568:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6560:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6649:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6660:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6645:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6645:18:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "6669:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6677:4:5",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6665:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6665:17:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6638:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6638:45:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6638:45:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint8__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6473:9:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "6484:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6492:6:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6500:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6511:4:5",
                    "type": ""
                  }
                ],
                "src": "6359:330:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6803:76:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6813:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6825:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6836:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6821:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6821:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6813:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6855:9:5"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6866:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6848:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6848:25:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6848:25:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6772:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6783:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6794:4:5",
                    "type": ""
                  }
                ],
                "src": "6694:185:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7095:256:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7112:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7127:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7135:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7123:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7123:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7105:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7105:50:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7105:50:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7175:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7186:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7171:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7171:18:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "7195:6:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7207:3:5",
                                    "type": "",
                                    "value": "192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7212:18:5",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7203:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7203:28:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7191:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7191:41:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7164:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7164:69:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7164:69:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7253:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7264:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7249:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7249:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7269:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7242:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7242:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7242:30:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7281:64:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7318:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7330:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7341:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7326:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7326:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "7289:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7289:56:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7281:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint64_t_bytes8_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint64_t_bytes8_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7048:9:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7059:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7067:6:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7075:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7086:4:5",
                    "type": ""
                  }
                ],
                "src": "6884:467:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7593:277:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7610:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7625:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7633:18:5",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7621:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7621:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7603:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7603:50:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7603:50:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7673:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7684:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7669:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7669:18:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "7693:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7701:4:5",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7689:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7689:17:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7662:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7662:45:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7662:45:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7727:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7738:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7723:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7723:18:5"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7743:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7716:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7716:34:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7716:34:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7770:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7781:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7766:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7766:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7786:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7759:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7759:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7759:31:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7799:65:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7836:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7848:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7859:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7844:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7844:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "7807:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7807:57:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7799:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint64_t_uint8_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint64_t_uint8_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7538:9:5",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "7549:6:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7557:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7565:6:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7573:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7584:4:5",
                    "type": ""
                  }
                ],
                "src": "7356:514:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7980:87:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7990:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8002:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8013:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7998:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7998:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7990:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8032:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8047:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8055:4:5",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8043:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8043:17:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8025:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8025:36:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8025:36:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7949:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7960:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7971:4:5",
                    "type": ""
                  }
                ],
                "src": "7875:192:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8104:95:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8121:1:5",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8128:3:5",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8133:10:5",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "8124:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8124:20:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8114:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8114:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8114:31:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8161:1:5",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8164:4:5",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8154:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8154:15:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8154:15:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8185:1:5",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8188:4:5",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8178:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8178:15:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8178:15:5"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "8072:127:5"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint64t_bytes8t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_uint64(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, shl(192, 0xffffffffffffffff)))) { revert(value1, value1) }\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint64t_uint8t_bytes32t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_uint64(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        value3 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_array_bytes32_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_bytes32_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint8__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint64_t_bytes8_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint64_t_bytes8_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, shl(192, 0xffffffffffffffff)))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_array_bytes32_dyn(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint64_t_uint8_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint64_t_uint8_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_array_bytes32_dyn(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
          "id": 5,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {
        "contracts/Merkle.sol": {
          "Merkle": [
            {
              "length": 20,
              "start": 299
            },
            {
              "length": 20,
              "start": 456
            },
            {
              "length": 20,
              "start": 590
            },
            {
              "length": 20,
              "start": 652
            },
            {
              "length": 20,
              "start": 710
            },
            {
              "length": 20,
              "start": 781
            },
            {
              "length": 20,
              "start": 833
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82B0EAB8 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x8492D93B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xA7342688 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xD7304DD9 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34BD712D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0x49FD2697 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH2 0x95 PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH2 0x95 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x5DA JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x644 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34BD712D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34BD712D SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x741 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x451A1055 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x451A1055 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x49FD2697 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x49FD2697 SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10561D57 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x82B0EAB8 SWAP1 PUSH2 0x1E6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x72E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8492D93B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x8492D93B SWAP1 PUSH2 0x157 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14E684D1 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xA7342688 SWAP1 PUSH1 0x24 ADD PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD7304DD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xD7304DD9 SWAP1 PUSH2 0x36F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x3F5 JUMPI PUSH2 0x3F5 PUSH2 0x7FE JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x41A JUMPI PUSH2 0x41A PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x438 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x45A JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x43C JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x477 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x502 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1A7 DUP5 DUP3 DUP6 ADD PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51F JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x53A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x550 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x55C DUP7 DUP3 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x584 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x59A JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x5A6 DUP7 DUP3 DUP8 ADD PUSH2 0x466 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x5B9 SWAP1 POP PUSH1 0x20 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5EE JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x5F7 DUP5 PUSH2 0x4AD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x613 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x63A DUP7 DUP3 DUP8 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x659 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x662 DUP6 PUSH2 0x4AD JUMP JUMPDEST SWAP4 POP PUSH2 0x670 PUSH1 0x20 DUP7 ADD PUSH2 0x4CA JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x692 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x69E DUP8 DUP3 DUP9 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BB JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6C4 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6FA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6DE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x755 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x779 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x705 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND DUP2 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC0 SHL DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3BF PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x7F4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x6CB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE EXTCODECOPY 0xDE POP PUSH13 0xD491E687CED3C0D03C78DF5D56 PUSH1 0x65 PUSH26 0x14E3DDA53811C5FBEE471664736F6C6343000804003300000000 ",
      "sourceMap": "690:1407:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:200;;;;;;:::i;:::-;;:::i;:::-;;;5995:25:5;;;5983:2;5968:18;1703:200:4;;;;;;;1322:169;;;;;;:::i;:::-;;:::i;1497:200::-;;;;;;:::i;:::-;;:::i;1909:186::-;;;;;;:::i;:::-;;:::i;851:198::-;;;;;;:::i;:::-;;:::i;716:129::-;;;;;;:::i;:::-;;:::i;1055:261::-;;;;;;:::i;:::-;;:::i;1703:200::-;1850:46;;-1:-1:-1;;;1850:46:4;;1820:7;;1850:6;;:27;;:46;;1878:5;;;;1885:10;;1850:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:53;1703:200;-1:-1:-1;;;;1703:200:4:o;1322:169::-;1446:38;;-1:-1:-1;;;1446:38:4;;;;;5995:25:5;;;1416:7:4;;1446:6;;:30;;5968:18:5;;1446:38:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1439:45;1322:169;-1:-1:-1;;1322:169:4:o;1497:200::-;1643:47;;-1:-1:-1;;;1643:47:4;;1613:7;;1643:6;;:29;;:47;;1673:5;;;;1680:9;;1643:47;;;:::i;1909:186::-;2046:42;;-1:-1:-1;;;2046:42:4;;2016:7;;2046:6;;:34;;:42;;2081:6;;2046:42;;;:::i;851:198::-;1002:40;;-1:-1:-1;;;1002:40:4;;976:7;;1002:6;;:14;;:40;;1017:9;;1028:6;;1036:5;;1002:40;;;:::i;716:129::-;805:33;;-1:-1:-1;;;805:33:4;;8055:4:5;8043:17;;805:33:4;;;8025:36:5;779:7:4;;805:6;;:22;;7998:18:5;;805:33:4;7980:87:5;1055:261:4;1245:64;;-1:-1:-1;;;1245:64:4;;1219:7;;1245:6;;:23;;:64;;1269:9;;1280:10;;1292:6;;1300:8;;1245:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1238:71;1055:261;-1:-1:-1;;;;;1055:261:4:o;14:933:5:-;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;183:6;170:20;209:4;232:18;269:2;265;262:10;259:2;;;275:18;;:::i;:::-;321:2;318:1;314:10;353:2;347:9;416:2;412:7;407:2;403;399:11;395:25;387:6;383:38;471:6;459:10;456:22;451:2;439:10;436:18;433:46;430:2;;;482:18;;:::i;:::-;518:2;511:22;568:18;;;602:15;;;;-1:-1:-1;637:15:5;;;671;;;667:24;;664:33;-1:-1:-1;661:2:5;;;714:5;707;700:20;661:2;740:5;731:14;;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;786:1;779:9;;;;;895:12;;754:163;;;-1:-1:-1;935:6:5;78:869;-1:-1:-1;;;;;;;78:869:5:o;952:375::-;1003:8;1013:6;1067:3;1060:4;1052:6;1048:17;1044:27;1034:2;;1092:8;1082;1075:26;1034:2;-1:-1:-1;1122:20:5;;1165:18;1154:30;;1151:2;;;1204:8;1194;1187:26;1151:2;1248:4;1240:6;1236:17;1224:29;;1300:3;1293:4;1284:6;1276;1272:19;1268:30;1265:39;1262:2;;;1317:1;1314;1307:12;1262:2;1024:303;;;;;:::o;1332:171::-;1399:20;;1459:18;1448:30;;1438:41;;1428:2;;1493:1;1490;1483:12;1428:2;1380:123;;;:::o;1508:156::-;1574:20;;1634:4;1623:16;;1613:27;;1603:2;;1654:1;1651;1644:12;1669:368;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:2;;;1827:6;1819;1812:22;1774:2;1872:9;1859:23;1905:18;1897:6;1894:30;1891:2;;;1942:6;1934;1927:22;1891:2;1970:61;2023:7;2014:6;2003:9;1999:22;1970:61;:::i;2042:194::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:2;;;2186:6;2178;2171:22;2133:2;-1:-1:-1;2214:16:5;;2123:113;-1:-1:-1;2123:113:5:o;2241:497::-;2320:6;2328;2336;2389:2;2377:9;2368:7;2364:23;2360:32;2357:2;;;2410:6;2402;2395:22;2357:2;2455:9;2442:23;2488:18;2480:6;2477:30;2474:2;;;2525:6;2517;2510:22;2474:2;2569:58;2619:7;2610:6;2599:9;2595:22;2569:58;:::i;:::-;2646:8;;2543:84;;-1:-1:-1;2728:2:5;2713:18;;;;2700:32;;2347:391;-1:-1:-1;;;;2347:391:5:o;2743:499::-;2820:6;2828;2836;2889:2;2877:9;2868:7;2864:23;2860:32;2857:2;;;2910:6;2902;2895:22;2857:2;2955:9;2942:23;2988:18;2980:6;2977:30;2974:2;;;3025:6;3017;3010:22;2974:2;3069:58;3119:7;3110:6;3099:9;3095:22;3069:58;:::i;:::-;3146:8;;-1:-1:-1;3043:84:5;-1:-1:-1;3200:36:5;;-1:-1:-1;3232:2:5;3217:18;;3200:36;:::i;:::-;3190:46;;2847:395;;;;;:::o;3247:190::-;3306:6;3359:2;3347:9;3338:7;3334:23;3330:32;3327:2;;;3380:6;3372;3365:22;3327:2;-1:-1:-1;3408:23:5;;3317:120;-1:-1:-1;3317:120:5:o;3442:632::-;3542:6;3550;3558;3611:2;3599:9;3590:7;3586:23;3582:32;3579:2;;;3632:6;3624;3617:22;3579:2;3660:28;3678:9;3660:28;:::i;:::-;3650:38;-1:-1:-1;3738:2:5;3723:18;;3710:32;-1:-1:-1;;;;;;3771:40:5;;3761:51;;3751:2;;3831:6;3823;3816:22;3751:2;3859:5;-1:-1:-1;3915:2:5;3900:18;;3887:32;3942:18;3931:30;;3928:2;;;3979:6;3971;3964:22;3928:2;4007:61;4060:7;4051:6;4040:9;4036:22;4007:61;:::i;:::-;3997:71;;;3569:505;;;;;:::o;4079:579::-;4187:6;4195;4203;4211;4264:3;4252:9;4243:7;4239:23;4235:33;4232:2;;;4286:6;4278;4271:22;4232:2;4314:28;4332:9;4314:28;:::i;:::-;4304:38;;4361:36;4393:2;4382:9;4378:18;4361:36;:::i;:::-;4351:46;;4444:2;4433:9;4429:18;4416:32;4406:42;;4499:2;4488:9;4484:18;4471:32;4526:18;4518:6;4515:30;4512:2;;;4563:6;4555;4548:22;4512:2;4591:61;4644:7;4635:6;4624:9;4620:22;4591:61;:::i;:::-;4581:71;;;4222:436;;;;;;;:::o;4663:192::-;4720:6;4773:2;4761:9;4752:7;4748:23;4744:32;4741:2;;;4794:6;4786;4779:22;4741:2;4822:27;4839:9;4822:27;:::i;:::-;4812:37;4731:124;-1:-1:-1;;;4731:124:5:o;4860:437::-;4913:3;4951:5;4945:12;4978:6;4973:3;4966:19;5004:4;5033:2;5028:3;5024:12;5017:19;;5070:2;5063:5;5059:14;5091:3;5103:169;5117:6;5114:1;5111:13;5103:169;;;5178:13;;5166:26;;5212:12;;;;5247:15;;;;5139:1;5132:9;5103:169;;;-1:-1:-1;5288:3:5;;4921:376;-1:-1:-1;;;;;4921:376:5:o;5302:268::-;5390:6;5385:3;5378:19;5442:6;5435:5;5428:4;5423:3;5419:14;5406:43;-1:-1:-1;5360:3:5;5469:16;;;5487:4;5465:27;;;5458:40;;;;5552:2;5531:15;;;-1:-1:-1;;5527:29:5;5518:39;;;5514:50;;5368:202::o;5575:269::-;5762:2;5751:9;5744:21;5725:4;5782:56;5834:2;5823:9;5819:18;5811:6;5782:56;:::i;6031:323::-;6224:2;6213:9;6206:21;6187:4;6244:61;6301:2;6290:9;6286:18;6278:6;6270;6244:61;:::i;:::-;6236:69;;6341:6;6336:2;6325:9;6321:18;6314:34;6196:158;;;;;;:::o;6359:330::-;6548:2;6537:9;6530:21;6511:4;6568:61;6625:2;6614:9;6610:18;6602:6;6594;6568:61;:::i;:::-;6560:69;;6677:4;6669:6;6665:17;6660:2;6649:9;6645:18;6638:45;6520:169;;;;;;:::o;6884:467::-;7135:18;7127:6;7123:31;7112:9;7105:50;7212:18;7207:3;7203:28;7195:6;7191:41;7186:2;7175:9;7171:18;7164:69;7269:2;7264;7253:9;7249:18;7242:30;7086:4;7289:56;7341:2;7330:9;7326:18;7318:6;7289:56;:::i;7356:514::-;7633:18;7625:6;7621:31;7610:9;7603:50;7701:4;7693:6;7689:17;7684:2;7673:9;7669:18;7662:45;7743:6;7738:2;7727:9;7723:18;7716:34;7786:3;7781:2;7770:9;7766:18;7759:31;7584:4;7807:57;7859:3;7848:9;7844:19;7836:6;7807:57;:::i;:::-;7799:65;7593:277;-1:-1:-1;;;;;;7593:277:5:o;8072:127::-;8133:10;8128:3;8124:20;8121:1;8114:31;8164:4;8161:1;8154:15;8188:4;8185:1;8178:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "424400",
        "executionCost": "461",
        "totalCost": "424861"
      },
      "external": {
        "calculateRootFromPowerOfTwo(bytes32[])": "infinite",
        "getEmptyTreeHashAtIndex(uint256)": "infinite",
        "getHashOfWordAtIndex(bytes,uint256)": "infinite",
        "getMerkleRootFromBytes(bytes,uint8)": "infinite",
        "getPristineHash(uint8)": "infinite",
        "getRoot(uint64,bytes8,bytes32[])": "infinite",
        "getRootWithDrive(uint64,uint8,bytes32,bytes32[])": "infinite"
      }
    },
    "methodIdentifiers": {
      "calculateRootFromPowerOfTwo(bytes32[])": "82b0eab8",
      "getEmptyTreeHashAtIndex(uint256)": "451a1055",
      "getHashOfWordAtIndex(bytes,uint256)": "34bd712d",
      "getMerkleRootFromBytes(bytes,uint8)": "49fd2697",
      "getPristineHash(uint8)": "a7342688",
      "getRoot(uint64,bytes8,bytes32[])": "8492d93b",
      "getRootWithDrive(uint64,uint8,bytes32,bytes32[])": "d7304dd9"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"calculateRootFromPowerOfTwo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getEmptyTreeHashAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_wordIndex\",\"type\":\"uint256\"}],\"name\":\"getHashOfWordAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"_log2Size\",\"type\":\"uint8\"}],\"name\":\"getMerkleRootFromBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_log2Size\",\"type\":\"uint8\"}],\"name\":\"getPristineHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_position\",\"type\":\"uint64\"},{\"internalType\":\"bytes8\",\"name\":\"_value\",\"type\":\"bytes8\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_position\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_logOfSize\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_drive\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"name\":\"getRootWithDrive\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestMerkle.sol\":\"TestMerkle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\"},\"contracts/CartesiMath.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title CartesiMath\\n/// @author Felipe Argento\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\nlibrary CartesiMath {\\n    using SafeMath for uint256;\\n\\n    // mapping values are packed as bytes3 each\\n    // see test/TestCartesiMath.ts for decimal values\\n    bytes constant log2tableTimes1M =\\n        hex\\\"0000000F4240182F421E8480236E082771822AD63A2DC6C0305E8532B04834C96736B3C23876D73A187A3B9D4A3D09003E5EA63FA0C540D17741F28843057D440BA745062945F60246DC1047B917488DC7495ABA4A207C4ADF8A4B98544C4B404CF8AA4DA0E64E44434EE3054F7D6D5013B750A61A5134C851BFF05247BD52CC58534DE753CC8D54486954C19C55384255AC75561E50568DE956FB575766B057D00758376F589CFA5900BA5962BC59C3135A21CA5A7EF15ADA945B34BF5B8D805BE4DF5C3AEA5C8FA95CE3265D356C5D86835DD6735E25455E73005EBFAD5F0B525F55F75F9FA25FE85A60302460770860BD0A61023061467F6189FD61CCAE620E98624FBF62902762CFD5630ECD634D12638AA963C7966403DC643F7F647A8264B4E864EEB56527EC6560906598A365D029660724663D9766738566A8F066DDDA6712476746386779AF67ACAF67DF3A6811526842FA68743268A4FC68D55C6905536934E169640A6992CF69C13169EF326A1CD46A4A186A76FF6AA38C6ACFC0\\\";\\n\\n    /// @notice Approximates log2 * 1M\\n    /// @param _num number to take log2 * 1M of\\n    /// @return approximate log2 times 1M\\n    function log2ApproxTimes1M(uint256 _num) public pure returns (uint256) {\\n        require(_num > 0, \\\"Number cannot be zero\\\");\\n        uint256 leading = 0;\\n\\n        if (_num == 1) return 0;\\n\\n        while (_num > 128) {\\n            _num = _num >> 1;\\n            leading += 1;\\n        }\\n        return (leading.mul(uint256(1000000))).add(getLog2TableTimes1M(_num));\\n    }\\n\\n    /// @notice navigates log2tableTimes1M\\n    /// @param _num number to take log2 of\\n    /// @return result after table look-up\\n    function getLog2TableTimes1M(uint256 _num) public pure returns (uint256) {\\n        bytes3 result = 0;\\n        for (uint8 i = 0; i < 3; i++) {\\n            bytes3 tempResult = log2tableTimes1M[(_num - 1) * 3 + i];\\n            result = result | (tempResult >> (i * 8));\\n        }\\n\\n        return uint256(uint24(result));\\n    }\\n\\n    /// @notice get floor of log2 of number\\n    /// @param _num number to take floor(log2) of\\n    /// @return floor(log2) of _num\\n   function getLog2Floor(uint256 _num) public pure returns (uint8) {\\n       require(_num != 0, \\\"log of zero is undefined\\\");\\n\\n       return uint8(255 - clz(_num));\\n    }\\n\\n    /// @notice checks if a number is Power of 2\\n    /// @param _num number to check\\n    /// @return true if number is power of 2, false if not\\n    function isPowerOf2(uint256 _num) public pure returns (bool) {\\n        if (_num == 0) return false;\\n\\n        return _num & (_num - 1) == 0;\\n    }\\n\\n    /// @notice count trailing zeros\\n    /// @param _num number you want the ctz of\\n    /// @dev this a binary search implementation\\n    function ctz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0) { n = n + 128; _num = _num >> 128; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF == 0) { n = n + 64; _num = _num >> 64; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000FFFFFFFF == 0) { n = n + 32; _num = _num >> 32; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000FFFF == 0) { n = n + 16; _num = _num >> 16; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000000000FF == 0) { n = n +  8; _num = _num >>  8; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000000F == 0) { n = n +  4; _num = _num >>  4; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000003 == 0) { n = n +  2; _num = _num >>  2; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000001 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n\\n    /// @notice count leading zeros\\n    /// @param _num number you want the clz of\\n    /// @dev this a binary search implementation\\n    function clz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 == 0) { n = n + 128; _num = _num << 128; }\\n        if (_num & 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 == 0) { n = n + 64; _num = _num << 64; }\\n        if (_num & 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 == 0) { n = n + 32; _num = _num << 32; }\\n        if (_num & 0xFFFF000000000000000000000000000000000000000000000000000000000000 == 0) { n = n + 16; _num = _num << 16; }\\n        if (_num & 0xFF00000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  8; _num = _num <<  8; }\\n        if (_num & 0xF000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  4; _num = _num <<  4; }\\n        if (_num & 0xC000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  2; _num = _num <<  2; }\\n        if (_num & 0x8000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n}\\n\",\"keccak256\":\"0xca784f2c33319c7e0501f836b6527dc39b1f0ae5768e2a16b87a7b3a9b2f73ad\",\"license\":\"Apache-2.0\"},\"contracts/Merkle.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Library for Merkle proofs\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"./CartesiMath.sol\\\";\\n\\nlibrary Merkle {\\n    using CartesiMath for uint256;\\n    using SafeMath for uint256;\\n\\n    uint256 constant L_WORD_SIZE = 3; // word = 8 bytes, log = 3\\n\\n    // merkle root hashes of trees of zero concatenated\\n    // 32 bytes for each root, first one is keccak(0), second one is\\n    // keccak(keccack(0), keccak(0)) and so on\\n\\n    bytes constant EMPTY_TREE_HASHES =\\n        hex\\\"011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88\\\";\\n\\n    // number of hashes in EMPTY_TREE_HASHES\\n    uint256 constant EMPTY_TREE_SIZE = 61 * 32; // 32 bytes per 61 indexes (64 words)\\n\\n    /// @notice Gets the pristine hash of a drive full of zeroes\\n    /// @param _log2Size log2 of size of the empty drive\\n    /// @return merkle root hash of the drive of size 1 << log2Size filled with zeros\\n    /// @dev using the precomputed EMPTY_TREE_HASHES is cheaper\\n    function getPristineHash(uint8 _log2Size) public pure returns (bytes32) {\\n        require(_log2Size >= 3, \\\"Has to be at least one word\\\");\\n        require(_log2Size <= 64, \\\"Cannot be bigger than the machine itself\\\");\\n\\n        bytes8 value = 0;\\n        bytes32 runningHash = keccak256(abi.encodePacked(value));\\n\\n        for (uint256 i = 3; i < _log2Size; i++) {\\n            runningHash = keccak256(abi.encodePacked(runningHash, runningHash));\\n        }\\n\\n        return runningHash;\\n    }\\n\\n    /// @notice Gets merkle root of drive with _value on _position\\n    /// @param _position position of word in drive\\n    /// @param _value word to include in drive\\n    /// @param proof array of siblings to generate merkle root\\n    /// @return new merkle root hash after _value inclusion\\n    function getRoot(\\n        uint64 _position,\\n        bytes8 _value,\\n        bytes32[] memory proof\\n    ) public pure returns (bytes32) {\\n        bytes32 runningHash = keccak256(abi.encodePacked(_value));\\n\\n        return getRootWithDrive(_position, 3, runningHash, proof);\\n    }\\n\\n    /// @notice Gets merkle root hash of machine with drive _drive\\n    /// @param _position position of _drive\\n    /// @param _logOfSize log2 of size of _drive\\n    /// @param _drive drive to be included\\n    /// @param siblings _drive's so that merkle root can be calculated\\n    function getRootWithDrive(\\n        uint64 _position,\\n        uint8 _logOfSize,\\n        bytes32 _drive,\\n        bytes32[] memory siblings\\n    ) public pure returns (bytes32) {\\n        require(_logOfSize >= 3, \\\"Must be at least a word\\\");\\n        require(_logOfSize <= 64, \\\"Cannot be bigger than the machine itself\\\");\\n\\n        uint64 size = uint64(2)**_logOfSize;\\n\\n        require(((size - 1) & _position) == 0, \\\"Position is not aligned\\\");\\n        require(\\n            siblings.length == 64 - _logOfSize,\\n            \\\"Proof length does not match\\\"\\n        );\\n\\n        bytes32 drive = _drive;\\n\\n        for (uint64 i = 0; i < siblings.length; i++) {\\n            if ((_position & (size << i)) == 0) {\\n                drive = keccak256(abi.encodePacked(drive, siblings[i]));\\n            } else {\\n                drive = keccak256(abi.encodePacked(siblings[i], drive));\\n            }\\n        }\\n\\n        return drive;\\n    }\\n\\n    /// @notice Gets precomputed hash of zero in empty tree hashes\\n    /// @param _index of hash wanted\\n    /// @dev first index is keccak(0), second index is keccak(keccak(0), keccak(0))\\n    function getEmptyTreeHashAtIndex(uint256 _index)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _index.mul(32);\\n        require(EMPTY_TREE_SIZE >= start.add(32), \\\"index out of bounds\\\");\\n        bytes32 hashedZeros;\\n        bytes memory zeroTree = EMPTY_TREE_HASHES;\\n\\n        // first word is length, then skip index words\\n        assembly {\\n            hashedZeros := mload(add(add(zeroTree, 0x20), start))\\n        }\\n        return hashedZeros;\\n    }\\n\\n    /// @notice get merkle root of generic array of bytes\\n    /// @param _data array of bytes to be merklelized\\n    /// @param _log2Size log2 of total size of the drive\\n    /// @dev _data is padded with zeroes until is multiple of 8\\n    /// @dev root is completed with zero tree until log2size is complete\\n    /// @dev hashes are taken word by word (8 bytes by 8 bytes)\\n    function getMerkleRootFromBytes(bytes calldata _data, uint8 _log2Size)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        require(_log2Size >= 3, \\\"Must be at least a word\\\");\\n        require(_log2Size <= 64, \\\"Cannot be bigger than the machine itself\\\");\\n\\n        // if _data is empty return pristine drive of size log2size\\n        if (_data.length == 0) return getEmptyTreeHashAtIndex(_log2Size - 3);\\n\\n        // total size of the drive in words\\n        uint256 size = 1 << uint256(_log2Size - 3);\\n        require(\\n            size << L_WORD_SIZE >= _data.length,\\n            \\\"data is bigger than drive\\\"\\n        );\\n        // the stack depth is log2(_data.length / 8) + 2\\n        uint256 stack_depth =\\n            2 + ((_data.length) >> L_WORD_SIZE).getLog2Floor();\\n        bytes32[] memory stack = new bytes32[](stack_depth);\\n\\n        uint256 numOfHashes; // total number of hashes on stack (counting levels)\\n        uint256 stackLength; // total length of stack\\n        uint256 numOfJoins; // number of hashes of the same level on stack\\n        uint256 topStackLevel; // hash level of the top of the stack\\n\\n        while (numOfHashes < size) {\\n            if ((numOfHashes << L_WORD_SIZE) < _data.length) {\\n                // we still have words to hash\\n                stack[stackLength] = getHashOfWordAtIndex(_data, numOfHashes);\\n                numOfHashes++;\\n\\n                numOfJoins = numOfHashes;\\n            } else {\\n                // since padding happens in hashOfWordAtIndex function\\n                // we only need to complete the stack with pre-computed\\n                // hash(0), hash(hash(0),hash(0)) and so on\\n                topStackLevel = numOfHashes.ctz();\\n\\n                stack[stackLength] = getEmptyTreeHashAtIndex(topStackLevel);\\n\\n                //Empty Tree Hash summarizes many hashes\\n                numOfHashes = numOfHashes.add(1 << topStackLevel);\\n                numOfJoins = numOfHashes >> topStackLevel;\\n            }\\n\\n            stackLength++;\\n\\n            // while there are joins, hash top of stack together\\n            while (numOfJoins & 1 == 0) {\\n                bytes32 h2 = stack[stackLength - 1];\\n                bytes32 h1 = stack[stackLength - 2];\\n\\n                stack[stackLength - 2] = keccak256(abi.encodePacked(h1, h2));\\n                stackLength = stackLength.sub(1); // remove hashes from stack\\n\\n                numOfJoins = numOfJoins >> 1;\\n            }\\n        }\\n        require(\\n            stackLength == 1,\\n            \\\"function ended but stack has more than one element\\\"\\n        );\\n\\n        return stack[0];\\n    }\\n\\n    /// @notice Get the hash of a word in an array of bytes\\n    /// @param _data array of bytes\\n    /// @param _wordIndex index of word inside the bytes to get the hash of\\n    /// @dev if word is incomplete (< 8 bytes) it gets padded with zeroes\\n    function getHashOfWordAtIndex(bytes calldata _data, uint256 _wordIndex)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _wordIndex << L_WORD_SIZE;\\n        uint256 end = start.add(1 << L_WORD_SIZE);\\n\\n        // TODO: in .lua this just returns zero, but this might be more consistent\\n        require(start <= _data.length, \\\"word out of bounds\\\");\\n\\n        if (end <= _data.length) {\\n            return keccak256(abi.encodePacked(_data[start:end]));\\n        }\\n\\n        // word is incomplete\\n        // fill paddedSlice with incomplete words - the rest is going to be bytes(0)\\n        bytes memory paddedSlice = new bytes(8);\\n        uint256 remaining = _data.length.sub(start);\\n\\n        for (uint256 i = 0; i < remaining; i++) {\\n            paddedSlice[i] = _data[start.add(i)];\\n        }\\n\\n        return keccak256(paddedSlice);\\n    }\\n\\n    /// @notice Calculate the root of Merkle tree from an array of power of 2 elements\\n    /// @param hashes The array containing power of 2 elements\\n    /// @return byte32 the root hash being calculated\\n    function calculateRootFromPowerOfTwo(bytes32[] memory hashes)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        // revert when the input is not of power of 2\\n        require(\\n            (hashes.length).isPowerOf2(),\\n            \\\"The input array must contain power of 2 elements\\\"\\n        );\\n\\n        if (hashes.length == 1) {\\n            return hashes[0];\\n        } else {\\n            bytes32[] memory newHashes = new bytes32[](hashes.length >> 1);\\n\\n            for (uint256 i = 0; i < hashes.length; i += 2) {\\n                newHashes[i >> 1] = keccak256(\\n                    abi.encodePacked(hashes[i], hashes[i + 1])\\n                );\\n            }\\n\\n            return calculateRootFromPowerOfTwo(newHashes);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x63b9120e57124ad19aba14f3be018af100d492924f2665e33a9ab56d67ed148f\",\"license\":\"Apache-2.0\"},\"contracts/test/TestMerkle.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Test Merkle\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Merkle.sol\\\";\\n\\ncontract TestMerkle {\\n    function getPristineHash(uint8 _log2Size) public pure returns (bytes32) {\\n        return Merkle.getPristineHash(_log2Size);\\n    }\\n\\n    function getRoot(\\n        uint64 _position,\\n        bytes8 _value,\\n        bytes32[] memory proof\\n    ) public pure returns (bytes32) {\\n        return Merkle.getRoot(_position, _value, proof);\\n    }\\n\\n    function getRootWithDrive(\\n        uint64 _position,\\n        uint8 _logOfSize,\\n        bytes32 _drive,\\n        bytes32[] memory siblings\\n    ) public pure returns (bytes32) {\\n        return Merkle.getRootWithDrive(_position, _logOfSize, _drive, siblings);\\n    }\\n\\n    function getEmptyTreeHashAtIndex(uint256 _index)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        return Merkle.getEmptyTreeHashAtIndex(_index);\\n    }\\n\\n    function getMerkleRootFromBytes(bytes calldata _data, uint8 _log2Size)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        return Merkle.getMerkleRootFromBytes(_data, _log2Size);\\n    }\\n\\n    function getHashOfWordAtIndex(bytes calldata _data, uint256 _wordIndex)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        return Merkle.getHashOfWordAtIndex(_data, _wordIndex);\\n    }\\n\\n    function calculateRootFromPowerOfTwo(bytes32[] memory hashes)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        return Merkle.calculateRootFromPowerOfTwo(hashes);\\n    }\\n}\\n\",\"keccak256\":\"0x65229670413f64955984cb8fa47871f5a115d1f01fb78aa8c487429667300f1c\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}