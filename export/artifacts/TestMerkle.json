{
  "contractName": "TestMerkle",
  "sourceName": "contracts/test/TestMerkle.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "calculateRootFromPowerOfTwo",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getEmptyTreeHashAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_wordIndex",
          "type": "uint256"
        }
      ],
      "name": "getHashOfWordAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_log2Size",
          "type": "uint256"
        }
      ],
      "name": "getMerkleRootFromBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_position",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfReplacement",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_logSizeOfFullDrive",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_replacement",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "siblings",
          "type": "bytes32[]"
        }
      ],
      "name": "getRootAfterReplacementInDrive",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506105e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046103ed565b6100cd565b60405190815260200160405180910390f35b61006f61008f366004610460565b610163565b61006f6100a2366004610478565b6101f0565b61006f6100b53660046103a2565b61028c565b61006f6100c83660046103ed565b6102c6565b6040516334bd712d60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906334bd712d9061010b9087908790879060040161052e565b60206040518083038186803b15801561012357600080fd5b505af4158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b91906103d5565b949350505050565b60405163451a105560e01b81526004810182905260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063451a1055906024015b60206040518083038186803b1580156101b257600080fd5b505af41580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906103d5565b92915050565b6040516379de460160e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906379de4601906102329089908990899089908990600401610566565b60206040518083038186803b15801561024a57600080fd5b505af415801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906103d5565b9695505050505050565b6040516310561d5760e31b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906382b0eab89061019a908590600401610514565b60405163c84583a160e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063c84583a19061010b9087908790879060040161052e565b600082601f830112610314578081fd5b8135602067ffffffffffffffff808311156103315761033161059c565b8260051b604051601f19603f830116810181811084821117156103565761035661059c565b60405284815283810192508684018288018501891015610374578687fd5b8692505b85831015610396578035845292840192600192909201918401610378565b50979650505050505050565b6000602082840312156103b3578081fd5b813567ffffffffffffffff8111156103c9578182fd5b61015b84828501610304565b6000602082840312156103e6578081fd5b5051919050565b600080600060408486031215610401578182fd5b833567ffffffffffffffff80821115610418578384fd5b818601915086601f83011261042b578384fd5b813581811115610439578485fd5b87602082850101111561044a578485fd5b6020928301989097509590910135949350505050565b600060208284031215610471578081fd5b5035919050565b600080600080600060a0868803121561048f578081fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156104c1578182fd5b6104cd88828901610304565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610509578151875295820195908201906001016104ed565b509495945050505050565b60208152600061052760208301846104da565b9392505050565b6040815282604082015282846060830137600080606085840101526060601f19601f8601168301019050826020830152949350505050565b85815284602082015283604082015282606082015260a06080820152600061059160a08301846104da565b979650505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220aae6cff83e1dd7d81866f0d9d9f8689078edf2f1549e1ce385ed820eafba452964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806334bd712d1461005c578063451a10551461008157806379de46011461009457806382b0eab8146100a7578063c84583a1146100ba575b600080fd5b61006f61006a3660046103ed565b6100cd565b60405190815260200160405180910390f35b61006f61008f366004610460565b610163565b61006f6100a2366004610478565b6101f0565b61006f6100b53660046103a2565b61028c565b61006f6100c83660046103ed565b6102c6565b6040516334bd712d60e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906334bd712d9061010b9087908790879060040161052e565b60206040518083038186803b15801561012357600080fd5b505af4158015610137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015b91906103d5565b949350505050565b60405163451a105560e01b81526004810182905260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063451a1055906024015b60206040518083038186803b1580156101b257600080fd5b505af41580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906103d5565b92915050565b6040516379de460160e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906379de4601906102329089908990899089908990600401610566565b60206040518083038186803b15801561024a57600080fd5b505af415801561025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028291906103d5565b9695505050505050565b6040516310561d5760e31b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__906382b0eab89061019a908590600401610514565b60405163c84583a160e01b815260009073__$334858ba5cb9c8f4fa57878485f86f96e9$__9063c84583a19061010b9087908790879060040161052e565b600082601f830112610314578081fd5b8135602067ffffffffffffffff808311156103315761033161059c565b8260051b604051601f19603f830116810181811084821117156103565761035661059c565b60405284815283810192508684018288018501891015610374578687fd5b8692505b85831015610396578035845292840192600192909201918401610378565b50979650505050505050565b6000602082840312156103b3578081fd5b813567ffffffffffffffff8111156103c9578182fd5b61015b84828501610304565b6000602082840312156103e6578081fd5b5051919050565b600080600060408486031215610401578182fd5b833567ffffffffffffffff80821115610418578384fd5b818601915086601f83011261042b578384fd5b813581811115610439578485fd5b87602082850101111561044a578485fd5b6020928301989097509590910135949350505050565b600060208284031215610471578081fd5b5035919050565b600080600080600060a0868803121561048f578081fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156104c1578182fd5b6104cd88828901610304565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610509578151875295820195908201906001016104ed565b509495945050505050565b60208152600061052760208301846104da565b9392505050565b6040815282604082015282846060830137600080606085840101526060601f19601f8601168301019050826020830152949350505050565b85815284602082015283604082015282606082015260a06080820152600061059160a08301846104da565b979650505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220aae6cff83e1dd7d81866f0d9d9f8689078edf2f1549e1ce385ed820eafba452964736f6c63430008040033",
  "linkReferences": {
    "contracts/Merkle.sol": {
      "Merkle": [
        {
          "length": 20,
          "start": 255
        },
        {
          "length": 20,
          "start": 412
        },
        {
          "length": 20,
          "start": 546
        },
        {
          "length": 20,
          "start": 702
        },
        {
          "length": 20,
          "start": 760
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "contracts/Merkle.sol": {
      "Merkle": [
        {
          "length": 20,
          "start": 223
        },
        {
          "length": 20,
          "start": 380
        },
        {
          "length": 20,
          "start": 514
        },
        {
          "length": 20,
          "start": 670
        },
        {
          "length": 20,
          "start": 728
        }
      ]
    }
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "contracts/Merkle.sol": {
          "Merkle": [
            {
              "length": 20,
              "start": 255
            },
            {
              "length": 20,
              "start": 412
            },
            {
              "length": 20,
              "start": 546
            },
            {
              "length": 20,
              "start": 702
            },
            {
              "length": 20,
              "start": 760
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34BD712D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x79DE4601 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xC84583A1 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x460 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH2 0x6F PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34BD712D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34BD712D SWAP1 PUSH2 0x10B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x451A1055 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x451A1055 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79DE4601 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x79DE4601 SWAP1 PUSH2 0x232 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10561D57 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x82B0EAB8 SWAP1 PUSH2 0x19A SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC84583A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xC84583A1 SWAP1 PUSH2 0x10B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x314 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x374 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x396 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x378 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x401 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x418 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x42B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x439 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x44A JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x471 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x48F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4CD DUP9 DUP3 DUP10 ADD PUSH2 0x304 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x509 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4ED JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x527 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP5 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP4 ADD ADD SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x591 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xE6 0xCF 0xF8 RETURNDATACOPY SAR 0xD7 0xD8 XOR PUSH7 0xF0D9D9F8689078 0xED CALLCODE CALL SLOAD SWAP15 SHR 0xE3 DUP6 0xED DUP3 0xE 0xAF 0xBA GASLIMIT 0x29 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
      "sourceMap": "690:1187:3:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5341:4",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:4",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "78:869:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "127:24:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "136:5:4"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "143:5:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "129:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "129:20:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "129:20:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "106:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "114:4:4",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "102:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "102:17:4"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "121:3:4"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "98:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "98:27:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "91:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:35:4"
                      },
                      "nodeType": "YulIf",
                      "src": "88:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "160:30:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "183:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "170:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "170:20:4"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "164:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "199:14:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "209:4:4",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "203:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "222:28:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:18:4",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "226:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "273:22:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "275:16:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "275:18:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "275:18:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "265:2:4"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "269:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "262:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "262:10:4"
                      },
                      "nodeType": "YulIf",
                      "src": "259:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "304:20:4",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:1:4",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "321:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "314:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:10:4"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "308:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "333:23:4",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "353:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "347:5:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "347:9:4"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "337:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "365:56:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "387:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "403:2:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "407:2:4",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:11:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "416:2:4",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "412:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "412:7:4"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "395:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "395:25:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "383:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:38:4"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "369:10:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "480:22:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "482:16:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "482:18:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "482:18:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "439:10:4"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "451:2:4"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "436:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "436:18:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "459:10:4"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "471:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "456:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "456:22:4"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "433:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:46:4"
                      },
                      "nodeType": "YulIf",
                      "src": "430:2:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "518:2:4",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "522:10:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "511:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "511:22:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "511:22:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "542:17:4",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:4"
                      },
                      "variables": [
                        {
                          "name": "dst",
                          "nodeType": "YulTypedName",
                          "src": "546:3:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "575:6:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "583:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "568:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "568:18:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "595:22:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "606:6:4"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "614:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:15:4"
                      },
                      "variableNames": [
                        {
                          "name": "dst",
                          "nodeType": "YulIdentifier",
                          "src": "595:3:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "626:26:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "641:6:4"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "649:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "637:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "637:15:4"
                      },
                      "variables": [
                        {
                          "name": "src",
                          "nodeType": "YulTypedName",
                          "src": "630:3:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "698:24:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:5:4"
                                },
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "714:5:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "700:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "700:20:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "700:20:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "675:6:4"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "683:2:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:15:4"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "688:2:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:24:4"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "693:3:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "664:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:33:4"
                      },
                      "nodeType": "YulIf",
                      "src": "661:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "731:14:4",
                      "value": {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:4"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "735:1:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "799:118:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "820:3:4"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "838:3:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nodeType": "YulIdentifier",
                                    "src": "825:12:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "825:17:4"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "813:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "813:30:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "813:30:4"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "856:19:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "867:3:4"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:2:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "863:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "863:12:4"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "856:3:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "888:19:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:3:4"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "904:2:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "895:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "895:12:4"
                            },
                            "variableNames": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "888:3:4"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "765:1:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "768:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "762:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:9:4"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "772:18:4",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "774:14:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "783:1:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "786:1:4",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "779:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "779:9:4"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "774:1:4"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "758:3:4",
                        "statements": []
                      },
                      "src": "754:163:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "926:15:4",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "935:6:4"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "926:5:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_array_bytes32_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "52:6:4",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "60:3:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "68:5:4",
                    "type": ""
                  }
                ],
                "src": "14:933:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1047:273:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1093:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1102:6:4"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1110:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1095:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1095:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1095:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1068:7:4"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1077:9:4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1064:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1064:23:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1089:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:32:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1057:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1128:37:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1155:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1142:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1142:23:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1132:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1208:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1217:6:4"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1225:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1210:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1210:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1210:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1188:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1177:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1177:30:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1174:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1243:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1286:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1297:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1282:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1282:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1306:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "1253:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1253:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1243:6:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1013:9:4",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1024:7:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1036:6:4",
                    "type": ""
                  }
                ],
                "src": "952:368:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1406:113:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1452:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1461:6:4"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1469:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1454:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1454:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1454:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1427:7:4"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1436:9:4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1423:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1423:23:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1419:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1419:32:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1416:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1487:26:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1503:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1497:5:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:16:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1487:6:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1372:9:4",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1383:7:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1395:6:4",
                    "type": ""
                  }
                ],
                "src": "1325:194:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1630:609:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1676:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1685:6:4"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1693:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1678:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1678:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1678:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1651:7:4"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1660:9:4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1647:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1647:23:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1672:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1643:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1643:32:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1640:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1711:37:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1725:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:23:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1715:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1757:28:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1767:18:4",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1761:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1812:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1821:6:4"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1829:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1814:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1814:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1814:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1800:6:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1808:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1797:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1797:14:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1794:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1847:32:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1861:9:4"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1857:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1857:22:4"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1851:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1927:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1936:6:4"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1944:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1929:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1929:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1929:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1906:2:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1910:4:4",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1902:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1902:13:4"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1917:7:4"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1898:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1898:27:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1891:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:35:4"
                      },
                      "nodeType": "YulIf",
                      "src": "1888:2:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1962:30:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1989:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1976:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1976:16:4"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "1966:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2019:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2028:6:4"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2036:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2021:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2021:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2021:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2007:6:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2015:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2004:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2004:14:4"
                      },
                      "nodeType": "YulIf",
                      "src": "2001:2:4"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2097:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2106:6:4"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2114:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2099:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2099:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2099:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2068:2:4"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2072:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2064:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2064:15:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2081:4:4",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2060:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2060:26:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2088:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2057:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2057:39:4"
                      },
                      "nodeType": "YulIf",
                      "src": "2054:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2132:23:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2146:2:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2150:4:4",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2142:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:13:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2132:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2164:16:4",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2174:6:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2164:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2189:44:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2216:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2227:4:4",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2212:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2212:20:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2199:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:34:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2189:6:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1580:9:4",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1591:7:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1603:6:4",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1611:6:4",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1619:6:4",
                    "type": ""
                  }
                ],
                "src": "1524:715:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2314:120:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2360:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2369:6:4"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2377:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2362:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2362:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2362:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2335:7:4"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2344:9:4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2331:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2331:23:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2356:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2327:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2327:32:4"
                      },
                      "nodeType": "YulIf",
                      "src": "2324:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2395:33:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2418:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2405:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2405:23:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2395:6:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2280:9:4",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2291:7:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2303:6:4",
                    "type": ""
                  }
                ],
                "src": "2244:190:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2602:479:4",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2649:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2658:6:4"
                                },
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2666:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2651:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2651:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2651:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2623:7:4"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2632:9:4"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2619:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2619:23:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2644:3:4",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2615:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:33:4"
                      },
                      "nodeType": "YulIf",
                      "src": "2612:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2684:33:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2707:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2694:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2694:23:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2684:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2726:42:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2753:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2764:2:4",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2749:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2749:18:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2736:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2736:32:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2726:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2777:42:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2804:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2815:2:4",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2800:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2800:18:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2787:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2787:32:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2777:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2828:42:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2855:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2866:2:4",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2851:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2851:18:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2838:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2838:32:4"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2828:6:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2879:47:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2910:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2921:3:4",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2906:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2906:19:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2893:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2893:33:4"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2883:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2969:26:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2978:6:4"
                                },
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2986:6:4"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2971:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2971:22:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2971:22:4"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2941:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2949:18:4",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2938:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:30:4"
                      },
                      "nodeType": "YulIf",
                      "src": "2935:2:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3004:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3047:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3058:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3043:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3043:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3067:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "3014:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3004:6:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2536:9:4",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2547:7:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2559:6:4",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2567:6:4",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2575:6:4",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "2583:6:4",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "2591:6:4",
                    "type": ""
                  }
                ],
                "src": "2439:642:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3147:376:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3157:26:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3177:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3171:5:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3171:12:4"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3161:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3199:3:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3204:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3192:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:19:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3192:19:4"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3220:14:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3230:4:4",
                        "type": "",
                        "value": "0x20"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3224:2:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3243:19:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3254:3:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3259:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3250:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3250:12:4"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "3243:3:4"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3271:28:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3289:5:4"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3296:2:4"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3285:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3285:14:4"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "3275:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3308:12:4",
                      "value": {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3317:3:4"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "3312:1:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3378:120:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3399:3:4"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3410:6:4"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3404:5:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3404:13:4"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3392:6:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3392:26:4"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3392:26:4"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3431:19:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3442:3:4"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3447:2:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3438:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3438:12:4"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3431:3:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3463:25:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3477:6:4"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3485:2:4"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3473:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3473:15:4"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3463:6:4"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3340:1:4"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3343:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3337:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3337:13:4"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "3351:18:4",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3353:14:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3362:1:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3365:1:4",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3358:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3358:9:4"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "3353:1:4"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "3333:3:4",
                        "statements": []
                      },
                      "src": "3329:169:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3507:10:4",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3514:3:4"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "3507:3:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_array_bytes32_dyn",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "3124:5:4",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "3131:3:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "3139:3:4",
                    "type": ""
                  }
                ],
                "src": "3086:437:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3687:110:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3704:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3715:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3697:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3697:21:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3697:21:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3727:64:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3764:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3776:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3787:2:4",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3772:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3772:18:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "3735:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:56:4"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3727:4:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3656:9:4",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3667:6:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3678:4:4",
                    "type": ""
                  }
                ],
                "src": "3528:269:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3903:76:4",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3913:26:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3925:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3936:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3921:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3921:18:4"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3913:4:4"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3955:9:4"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3966:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3948:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3948:25:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3948:25:4"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3872:9:4",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3883:6:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3894:4:4",
                    "type": ""
                  }
                ],
                "src": "3802:177:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4149:307:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4166:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4177:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4159:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:21:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4159:21:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4200:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4211:2:4",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4196:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4196:18:4"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4216:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4189:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:34:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4189:34:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4249:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4260:2:4",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4245:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4245:18:4"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4265:6:4"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4273:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "4232:12:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4232:48:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4232:48:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4304:9:4"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4315:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4300:22:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4324:2:4",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4296:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4296:31:4"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4329:4:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4289:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4289:45:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4289:45:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4343:62:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4359:9:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4378:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4386:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4374:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4374:15:4"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4395:2:4",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4391:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4391:7:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4370:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4370:29:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4355:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4355:45:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4402:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4351:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4351:54:4"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4343:4:4"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4425:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4436:4:4",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4421:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4421:20:4"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4443:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4414:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:36:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4414:36:4"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4102:9:4",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4113:6:4",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4121:6:4",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4129:6:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4140:4:4",
                    "type": ""
                  }
                ],
                "src": "3984:472:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4570:76:4",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4580:26:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4592:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4603:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:18:4"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4580:4:4"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4622:9:4"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4633:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4615:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4615:25:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4615:25:4"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4539:9:4",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4550:6:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4561:4:4",
                    "type": ""
                  }
                ],
                "src": "4461:185:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4922:285:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4939:9:4"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4950:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4932:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4932:25:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4932:25:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4977:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4988:2:4",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4973:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4973:18:4"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4993:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4966:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4966:34:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4966:34:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5020:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5031:2:4",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5016:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5016:18:4"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5036:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5009:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5009:34:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5009:34:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5063:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5074:2:4",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5059:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5059:18:4"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5079:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5052:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5052:34:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5052:34:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5106:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5117:3:4",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5102:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5102:19:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5123:3:4",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5095:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5095:32:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5095:32:4"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5136:65:4",
                      "value": {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "5173:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5185:9:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5196:3:4",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5181:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5181:19:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_array_bytes32_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "5144:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5144:57:4"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5136:4:4"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4859:9:4",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "4870:6:4",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "4878:6:4",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4886:6:4",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4894:6:4",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4902:6:4",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4913:4:4",
                    "type": ""
                  }
                ],
                "src": "4651:556:4"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5244:95:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5261:1:4",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5268:3:4",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5273:10:4",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5264:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5264:20:4"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5254:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5254:31:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5254:31:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5301:1:4",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5304:4:4",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5294:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5294:15:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5294:15:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5325:1:4",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5328:4:4",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5318:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5318:15:4"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5318:15:4"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "5212:127:4"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, _4), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value1, value1) }\n        if gt(add(add(_2, length), 0x20), dataEnd) { revert(value1, value1) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_array_bytes32_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_bytes32_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_library_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), value1)\n        calldatacopy(add(headStart, 96), value0, value1)\n        mstore(add(add(headStart, value1), 96), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint256_t_uint256_t_uint256_t_bytes32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_library_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_array_bytes32_dyn(value4, add(headStart, 160))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
          "id": 4,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {
        "contracts/Merkle.sol": {
          "Merkle": [
            {
              "length": 20,
              "start": 223
            },
            {
              "length": 20,
              "start": 380
            },
            {
              "length": 20,
              "start": 514
            },
            {
              "length": 20,
              "start": 670
            },
            {
              "length": 20,
              "start": 728
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34BD712D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x451A1055 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x79DE4601 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x82B0EAB8 EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xC84583A1 EQ PUSH2 0xBA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x460 JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x28C JUMP JUMPDEST PUSH2 0x6F PUSH2 0xC8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34BD712D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x34BD712D SWAP1 PUSH2 0x10B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x137 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x451A1055 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x451A1055 SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79DE4601 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x79DE4601 SWAP1 PUSH2 0x232 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x566 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x3D5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x10561D57 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0x82B0EAB8 SWAP1 PUSH2 0x19A SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC84583A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0x0 SWAP1 PUSH4 0xC84583A1 SWAP1 PUSH2 0x10B SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x52E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x314 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x331 JUMPI PUSH2 0x331 PUSH2 0x59C JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x356 JUMPI PUSH2 0x356 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP5 DUP2 MSTORE DUP4 DUP2 ADD SWAP3 POP DUP7 DUP5 ADD DUP3 DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x374 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x396 JUMPI DUP1 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD PUSH2 0x378 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15B DUP5 DUP3 DUP6 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x401 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x418 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x42B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x439 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x44A JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x471 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x48F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x4CD DUP9 DUP3 DUP10 ADD PUSH2 0x304 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x509 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4ED JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x527 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP5 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP7 ADD AND DUP4 ADD ADD SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x591 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4DA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xE6 0xCF 0xF8 RETURNDATACOPY SAR 0xD7 0xD8 XOR PUSH7 0xF0D9D9F8689078 0xED CALLCODE CALL SLOAD SWAP15 SHR 0xE3 DUP6 0xED DUP3 0xE 0xAF 0xBA GASLIMIT 0x29 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
      "sourceMap": "690:1187:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1539:172;;;;;;:::i;:::-;;:::i;:::-;;;3948:25:4;;;3936:2;3921:18;1539:172:3;;;;;;;1212:141;;;;;;:::i;:::-;;:::i;716:490::-;;;;;;:::i;:::-;;:::i;1717:158::-;;;;;;:::i;:::-;;:::i;1359:174::-;;;;;;:::i;:::-;;:::i;1539:172::-;1658:46;;-1:-1:-1;;;1658:46:3;;1632:7;;1658:6;;:27;;:46;;1686:5;;;;1693:10;;1658:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1651:53;1539:172;-1:-1:-1;;;;1539:172:3:o;1212:141::-;1308:38;;-1:-1:-1;;;1308:38:3;;;;;3948:25:4;;;1282:7:3;;1308:6;;:30;;3921:18:4;;1308:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1301:45;1212:141;-1:-1:-1;;1212:141:3:o;716:490::-;989:210;;-1:-1:-1;;;989:210:3;;951:7;;989:6;;:37;;:210;;1044:9;;1071:21;;1110:19;;1147:12;;1177:8;;989:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;970:229;716:490;-1:-1:-1;;;;;;716:490:3:o;1717:158::-;1826:42;;-1:-1:-1;;;1826:42:3;;1800:7;;1826:6;;:34;;:42;;1861:6;;1826:42;;;:::i;1359:174::-;1479:47;;-1:-1:-1;;;1479:47:3;;1453:7;;1479:6;;:29;;:47;;1509:5;;;;1516:9;;1479:47;;;:::i;14:933:4:-;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;183:6;170:20;209:4;232:18;269:2;265;262:10;259:2;;;275:18;;:::i;:::-;321:2;318:1;314:10;353:2;347:9;416:2;412:7;407:2;403;399:11;395:25;387:6;383:38;471:6;459:10;456:22;451:2;439:10;436:18;433:46;430:2;;;482:18;;:::i;:::-;518:2;511:22;568:18;;;602:15;;;;-1:-1:-1;637:15:4;;;671;;;667:24;;664:33;-1:-1:-1;661:2:4;;;714:5;707;700:20;661:2;740:5;731:14;;754:163;768:2;765:1;762:9;754:163;;;825:17;;813:30;;863:12;;;;786:1;779:9;;;;;895:12;;754:163;;;-1:-1:-1;935:6:4;78:869;-1:-1:-1;;;;;;;78:869:4:o;952:368::-;1036:6;1089:2;1077:9;1068:7;1064:23;1060:32;1057:2;;;1110:6;1102;1095:22;1057:2;1155:9;1142:23;1188:18;1180:6;1177:30;1174:2;;;1225:6;1217;1210:22;1174:2;1253:61;1306:7;1297:6;1286:9;1282:22;1253:61;:::i;1325:194::-;1395:6;1448:2;1436:9;1427:7;1423:23;1419:32;1416:2;;;1469:6;1461;1454:22;1416:2;-1:-1:-1;1497:16:4;;1406:113;-1:-1:-1;1406:113:4:o;1524:715::-;1603:6;1611;1619;1672:2;1660:9;1651:7;1647:23;1643:32;1640:2;;;1693:6;1685;1678:22;1640:2;1738:9;1725:23;1767:18;1808:2;1800:6;1797:14;1794:2;;;1829:6;1821;1814:22;1794:2;1872:6;1861:9;1857:22;1847:32;;1917:7;1910:4;1906:2;1902:13;1898:27;1888:2;;1944:6;1936;1929:22;1888:2;1989;1976:16;2015:2;2007:6;2004:14;2001:2;;;2036:6;2028;2021:22;2001:2;2088:7;2081:4;2072:6;2068:2;2064:15;2060:26;2057:39;2054:2;;;2114:6;2106;2099:22;2054:2;2150:4;2142:13;;;;2174:6;;-1:-1:-1;2212:20:4;;;;2199:34;;1630:609;-1:-1:-1;;;;1630:609:4:o;2244:190::-;2303:6;2356:2;2344:9;2335:7;2331:23;2327:32;2324:2;;;2377:6;2369;2362:22;2324:2;-1:-1:-1;2405:23:4;;2314:120;-1:-1:-1;2314:120:4:o;2439:642::-;2559:6;2567;2575;2583;2591;2644:3;2632:9;2623:7;2619:23;2615:33;2612:2;;;2666:6;2658;2651:22;2612:2;2707:9;2694:23;2684:33;;2764:2;2753:9;2749:18;2736:32;2726:42;;2815:2;2804:9;2800:18;2787:32;2777:42;;2866:2;2855:9;2851:18;2838:32;2828:42;;2921:3;2910:9;2906:19;2893:33;2949:18;2941:6;2938:30;2935:2;;;2986:6;2978;2971:22;2935:2;3014:61;3067:7;3058:6;3047:9;3043:22;3014:61;:::i;:::-;3004:71;;;2602:479;;;;;;;;:::o;3086:437::-;3139:3;3177:5;3171:12;3204:6;3199:3;3192:19;3230:4;3259:2;3254:3;3250:12;3243:19;;3296:2;3289:5;3285:14;3317:3;3329:169;3343:6;3340:1;3337:13;3329:169;;;3404:13;;3392:26;;3438:12;;;;3473:15;;;;3365:1;3358:9;3329:169;;;-1:-1:-1;3514:3:4;;3147:376;-1:-1:-1;;;;;3147:376:4:o;3528:269::-;3715:2;3704:9;3697:21;3678:4;3735:56;3787:2;3776:9;3772:18;3764:6;3735:56;:::i;:::-;3727:64;3687:110;-1:-1:-1;;;3687:110:4:o;3984:472::-;4177:2;4166:9;4159:21;4216:6;4211:2;4200:9;4196:18;4189:34;4273:6;4265;4260:2;4249:9;4245:18;4232:48;4140:4;4329;4324:2;4315:6;4304:9;4300:22;4296:31;4289:45;4402:2;4395;4391:7;4386:2;4378:6;4374:15;4370:29;4359:9;4355:45;4351:54;4343:62;;4443:6;4436:4;4425:9;4421:20;4414:36;4149:307;;;;;;:::o;4651:556::-;4950:6;4939:9;4932:25;4993:6;4988:2;4977:9;4973:18;4966:34;5036:6;5031:2;5020:9;5016:18;5009:34;5079:6;5074:2;5063:9;5059:18;5052:34;5123:3;5117;5106:9;5102:19;5095:32;4913:4;5144:57;5196:3;5185:9;5181:19;5173:6;5144:57;:::i;:::-;5136:65;4922:285;-1:-1:-1;;;;;;;4922:285:4:o;5212:127::-;5273:10;5268:3;5264:20;5261:1;5254:31;5304:4;5301:1;5294:15;5328:4;5325:1;5318:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "302400",
        "executionCost": "343",
        "totalCost": "302743"
      },
      "external": {
        "calculateRootFromPowerOfTwo(bytes32[])": "infinite",
        "getEmptyTreeHashAtIndex(uint256)": "infinite",
        "getHashOfWordAtIndex(bytes,uint256)": "infinite",
        "getMerkleRootFromBytes(bytes,uint256)": "infinite",
        "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "infinite"
      }
    },
    "methodIdentifiers": {
      "calculateRootFromPowerOfTwo(bytes32[])": "82b0eab8",
      "getEmptyTreeHashAtIndex(uint256)": "451a1055",
      "getHashOfWordAtIndex(bytes,uint256)": "34bd712d",
      "getMerkleRootFromBytes(bytes,uint256)": "c84583a1",
      "getRootAfterReplacementInDrive(uint256,uint256,uint256,bytes32,bytes32[])": "79de4601"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"calculateRootFromPowerOfTwo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getEmptyTreeHashAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_wordIndex\",\"type\":\"uint256\"}],\"name\":\"getHashOfWordAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_log2Size\",\"type\":\"uint256\"}],\"name\":\"getMerkleRootFromBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_position\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_logSizeOfReplacement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_logSizeOfFullDrive\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_replacement\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"name\":\"getRootAfterReplacementInDrive\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestMerkle.sol\":\"TestMerkle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CartesiMath.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title CartesiMath\\n/// @author Felipe Argento\\npragma solidity ^0.8.0;\\n\\nlibrary CartesiMath {\\n    // mapping values are packed as bytes3 each\\n    // see test/TestCartesiMath.ts for decimal values\\n    bytes constant log2tableTimes1M =\\n        hex\\\"0000000F4240182F421E8480236E082771822AD63A2DC6C0305E8532B04834C96736B3C23876D73A187A3B9D4A3D09003E5EA63FA0C540D17741F28843057D440BA745062945F60246DC1047B917488DC7495ABA4A207C4ADF8A4B98544C4B404CF8AA4DA0E64E44434EE3054F7D6D5013B750A61A5134C851BFF05247BD52CC58534DE753CC8D54486954C19C55384255AC75561E50568DE956FB575766B057D00758376F589CFA5900BA5962BC59C3135A21CA5A7EF15ADA945B34BF5B8D805BE4DF5C3AEA5C8FA95CE3265D356C5D86835DD6735E25455E73005EBFAD5F0B525F55F75F9FA25FE85A60302460770860BD0A61023061467F6189FD61CCAE620E98624FBF62902762CFD5630ECD634D12638AA963C7966403DC643F7F647A8264B4E864EEB56527EC6560906598A365D029660724663D9766738566A8F066DDDA6712476746386779AF67ACAF67DF3A6811526842FA68743268A4FC68D55C6905536934E169640A6992CF69C13169EF326A1CD46A4A186A76FF6AA38C6ACFC0\\\";\\n\\n    /// @notice Approximates log2 * 1M\\n    /// @param _num number to take log2 * 1M of\\n    /// @return approximate log2 times 1M\\n    function log2ApproxTimes1M(uint256 _num) public pure returns (uint256) {\\n        require(_num > 0, \\\"Number cannot be zero\\\");\\n        uint256 leading = 0;\\n\\n        if (_num == 1) return 0;\\n\\n        while (_num > 128) {\\n            _num = _num >> 1;\\n            leading += 1;\\n        }\\n        return (leading * uint256(1000000)) + (getLog2TableTimes1M(_num));\\n    }\\n\\n    /// @notice navigates log2tableTimes1M\\n    /// @param _num number to take log2 of\\n    /// @return result after table look-up\\n    function getLog2TableTimes1M(uint256 _num) public pure returns (uint256) {\\n        bytes3 result = 0;\\n        for (uint8 i = 0; i < 3; i++) {\\n            bytes3 tempResult = log2tableTimes1M[(_num - 1) * 3 + i];\\n            result = result | (tempResult >> (i * 8));\\n        }\\n\\n        return uint256(uint24(result));\\n    }\\n\\n    /// @notice get floor of log2 of number\\n    /// @param _num number to take floor(log2) of\\n    /// @return floor(log2) of _num\\n   function getLog2Floor(uint256 _num) public pure returns (uint8) {\\n       require(_num != 0, \\\"log of zero is undefined\\\");\\n\\n       return uint8(255 - clz(_num));\\n    }\\n\\n    /// @notice checks if a number is Power of 2\\n    /// @param _num number to check\\n    /// @return true if number is power of 2, false if not\\n    function isPowerOf2(uint256 _num) public pure returns (bool) {\\n        if (_num == 0) return false;\\n\\n        return _num & (_num - 1) == 0;\\n    }\\n\\n    /// @notice count trailing zeros\\n    /// @param _num number you want the ctz of\\n    /// @dev this a binary search implementation\\n    function ctz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0) { n = n + 128; _num = _num >> 128; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF == 0) { n = n + 64; _num = _num >> 64; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000FFFFFFFF == 0) { n = n + 32; _num = _num >> 32; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000FFFF == 0) { n = n + 16; _num = _num >> 16; }\\n        if (_num & 0x00000000000000000000000000000000000000000000000000000000000000FF == 0) { n = n +  8; _num = _num >>  8; }\\n        if (_num & 0x000000000000000000000000000000000000000000000000000000000000000F == 0) { n = n +  4; _num = _num >>  4; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000003 == 0) { n = n +  2; _num = _num >>  2; }\\n        if (_num & 0x0000000000000000000000000000000000000000000000000000000000000001 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n\\n    /// @notice count leading zeros\\n    /// @param _num number you want the clz of\\n    /// @dev this a binary search implementation\\n    function clz(uint256 _num) public pure returns (uint256) {\\n        if (_num == 0) return 256;\\n\\n        uint256 n = 0;\\n        if (_num & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 == 0) { n = n + 128; _num = _num << 128; }\\n        if (_num & 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 == 0) { n = n + 64; _num = _num << 64; }\\n        if (_num & 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 == 0) { n = n + 32; _num = _num << 32; }\\n        if (_num & 0xFFFF000000000000000000000000000000000000000000000000000000000000 == 0) { n = n + 16; _num = _num << 16; }\\n        if (_num & 0xFF00000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  8; _num = _num <<  8; }\\n        if (_num & 0xF000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  4; _num = _num <<  4; }\\n        if (_num & 0xC000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  2; _num = _num <<  2; }\\n        if (_num & 0x8000000000000000000000000000000000000000000000000000000000000000 == 0) { n = n +  1; }\\n\\n        return n;\\n    }\\n}\\n\",\"keccak256\":\"0x28b74012e966438edff701decdc5ffd207b3f0244af65fbd7d397050986e58d4\",\"license\":\"Apache-2.0\"},\"contracts/Merkle.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Library for Merkle proofs\\npragma solidity ^0.8.0;\\n\\nimport \\\"./CartesiMath.sol\\\";\\n\\nlibrary Merkle {\\n    using CartesiMath for uint256;\\n\\n    uint128 constant L_WORD_SIZE = 3; // word = 8 bytes, log = 3\\n    // number of hashes in EMPTY_TREE_HASHES\\n    uint128 constant EMPTY_TREE_SIZE = 1952; // 61*32=1952. 32 bytes per 61 indexes (64 words)\\n\\n    // merkle root hashes of trees of zero concatenated\\n    // 32 bytes for each root, first one is keccak(0), second one is\\n    // keccak(keccack(0), keccak(0)) and so on\\n\\n    bytes constant EMPTY_TREE_HASHES =\\n        hex\\\"011b4d03dd8c01f1049143cf9c4c817e4b167f1d1b83e5c6f0f10d89ba1e7bce4d9470a821fbe90117ec357e30bad9305732fb19ddf54a07dd3e29f440619254ae39ce8537aca75e2eff3e38c98011dfe934e700a0967732fc07b430dd656a233fc9a15f5b4869c872f81087bb6104b7d63e6f9ab47f2c43f3535eae7172aa7f17d2dd614cddaa4d879276b11e0672c9560033d3e8453a1d045339d34ba601b9c37b8b13ca95166fb7af16988a70fcc90f38bf9126fd833da710a47fb37a55e68e7a427fa943d9966b389f4f257173676090c6e95f43e2cb6d65f8758111e30930b0b9deb73e155c59740bacf14a6ff04b64bb8e201a506409c3fe381ca4ea90cd5deac729d0fdaccc441d09d7325f41586ba13c801b7eccae0f95d8f3933efed8b96e5b7f6f459e9cb6a2f41bf276c7b85c10cd4662c04cbbb365434726c0a0c9695393027fb106a8153109ac516288a88b28a93817899460d6310b71cf1e6163e8806fa0d4b197a259e8c3ac28864268159d0ac85f8581ca28fa7d2c0c03eb91e3eee5ca7a3da2b3053c9770db73599fb149f620e3facef95e947c0ee860b72122e31e4bbd2b7c783d79cc30f60c6238651da7f0726f767d22747264fdb046f7549f26cc70ed5e18baeb6c81bb0625cb95bb4019aeecd40774ee87ae29ec517a71f6ee264c5d761379b3d7d617ca83677374b49d10aec50505ac087408ca892b573c267a712a52e1d06421fe276a03efb1889f337201110fdc32a81f8e152499af665835aabfdc6740c7e2c3791a31c3cdc9f5ab962f681b12fc092816a62f27d86025599a41233848702f0cfc0437b445682df51147a632a0a083d2d38b5e13e466a8935afff58bb533b3ef5d27fba63ee6b0fd9e67ff20af9d50deee3f8bf065ec220c1fd4ba57e341261d55997f85d66d32152526736872693d2b437a233e2337b715f6ac9a6a272622fdc2d67fcfe1da3459f8dab4ed7e40a657a54c36766c5e8ac9a88b35b05c34747e6507f6b044ab66180dc76ac1a696de03189593fedc0d0dbbd855c8ead673544899b0960e4a5a7ca43b4ef90afe607de7698caefdc242788f654b57a4fb32a71b335ef6ff9a4cc118b282b53bdd6d6192b7a82c3c5126b9c7e33c8e5a5ac9738b8bd31247fb7402054f97b573e8abb9faad219f4fd085aceaa7f542d787ee4196d365f3cc566e7bbcfbfd451230c48d804c017d21e2d8fa914e2559bb72bf0ab78c8ab92f00ef0d0d576eccdd486b64138a4172674857e543d1d5b639058dd908186597e366ad5f3d9c7ceaff44d04d1550b8d33abc751df07437834ba5acb32328a396994aebb3c40f759c2d6d7a3cb5377e55d5d218ef5a296dda8ddc355f3f50c3d0b660a51dfa4d98a6a5a33564556cf83c1373a814641d6a1dcef97b883fee61bb84fe60a3409340217e629cc7e4dcc93b85d8820921ff5826148b60e6939acd7838e1d7f20562bff8ee4b5ec4a05ad997a57b9796fdcb2eda87883c2640b072b140b946bfdf6575cacc066fdae04f6951e63624cbd316a677cad529bbe4e97b9144e4bc06c4afd1de55dd3e1175f90423847a230d34dfb71ed56f2965a7f6c72e6aa33c24c303fd67745d632656c5ef90bec80f4f5d1daa251988826cef375c81c36bf457e09687056f924677cb0bccf98dff81e014ce25f2d132497923e267363963cdf4302c5049d63131dc03fd95f65d8b6aa5934f817252c028c90f56d413b9d5d10d89790707dae2fabb249f649929927c21dd71e3f656826de5451c5da375aadecbd59d5ebf3a31fae65ac1b316a1611f1b276b26530f58d7247df459ce1f86db1d734f6f811932f042cee45d0e455306d01081bc3384f82c5fb2aacaa19d89cdfa46cc916eac61121475ba2e6191b4feecbe1789717021a158ace5d06744b40f551076b67cd63af60007f8c99876e1424883a45ec49d497ddaf808a5521ca74a999ab0b3c7aa9c80f85e93977ec61ce68b20307a1a81f71ca645b568fcd319ccbb5f651e87b707d37c39e15f945ea69e2f7c7d2ccc85b7e654c07e96f0636ae4044fe0e38590b431795ad0f8647bdd613713ada493cc17efd313206380e6a685b8198475bbd021c6e9d94daab2214947127506073e44d5408ba166c512a0b86805d07f5a44d3c41706be2bc15e712e55805248b92e8677d90f6d284d1d6ffaff2c430657042a0e82624fa3717b06cc0a6fd12230ea586dae83019fb9e06034ed2803c98d554b93c9a52348cafff75c40174a91f9ae6b8647854a156029f0b88b83316663ce574a4978277bb6bb27a31085634b6ec78864b6d8201c7e93903d75815067e378289a3d072ae172dafa6a452470f8d645bebfad9779594fc0784bb764a22e3a8181d93db7bf97893c414217a618ccb14caa9e92e8c61673afc9583662e812adba1f87a9c68202d60e909efab43c42c0cb00695fc7f1ffe67c75ca894c3c51e1e5e731360199e600f6ced9a87b2a6a87e70bf251bb5075ab222138288164b2eda727515ea7de12e2496d4fe42ea8d1a120c03cf9c50622c2afe4acb0dad98fd62d07ab4e828a94495f6d1ab973982c7ccbe6c1fae02788e4422ae22282fa49cbdb04ba54a7a238c6fc41187451383460762c06d1c8a72b9cd718866ad4b689e10c9a8c38fe5ef045bd785b01e980fc82c7e3532ce81876b778dd9f1ceeba4478e86411fb6fdd790683916ca832592485093644e8760cd7b4c01dba1ccc82b661bf13f0e3f34acd6b88\\\";\\n\\n    /// @notice Gets merkle root hash of drive with a replacement\\n    /// @param _position position of _drive\\n    /// @param _logSizeOfReplacement log2 of size the replacement\\n    /// @param _logSizeOfFullDrive log2 of size the full drive, which can be the entire machine\\n    /// @param _replacement hash of the replacement\\n    /// @param siblings of replacement that merkle root can be calculated\\n    function getRootAfterReplacementInDrive(\\n        uint256 _position,\\n        uint256 _logSizeOfReplacement,\\n        uint256 _logSizeOfFullDrive,\\n        bytes32 _replacement,\\n        bytes32[] calldata siblings\\n    ) public pure returns (bytes32) {\\n        require(\\n            _logSizeOfFullDrive >= _logSizeOfReplacement &&\\n                _logSizeOfReplacement >= 3 &&\\n                _logSizeOfFullDrive <= 64,\\n            \\\"3 <= logSizeOfReplacement <= logSizeOfFullDrive <= 64\\\"\\n        );\\n\\n        uint256 size = 1 << _logSizeOfReplacement;\\n\\n        require(((size - 1) & _position) == 0, \\\"Position is not aligned\\\");\\n        require(\\n            siblings.length == _logSizeOfFullDrive - _logSizeOfReplacement,\\n            \\\"Proof length does not match\\\"\\n        );\\n\\n        for (uint256 i; i < siblings.length; i++) {\\n            if ((_position & (size << i)) == 0) {\\n                _replacement = keccak256(\\n                    abi.encodePacked(_replacement, siblings[i])\\n                );\\n            } else {\\n                _replacement = keccak256(\\n                    abi.encodePacked(siblings[i], _replacement)\\n                );\\n            }\\n        }\\n\\n        return _replacement;\\n    }\\n\\n    /// @notice Gets precomputed hash of zero in empty tree hashes\\n    /// @param _index of hash wanted\\n    /// @dev first index is keccak(0), second index is keccak(keccak(0), keccak(0))\\n    function getEmptyTreeHashAtIndex(uint256 _index)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _index * 32;\\n        require(EMPTY_TREE_SIZE >= start + 32, \\\"index out of bounds\\\");\\n        bytes32 hashedZeros;\\n        bytes memory zeroTree = EMPTY_TREE_HASHES;\\n\\n        // first word is length, then skip index words\\n        assembly {\\n            hashedZeros := mload(add(add(zeroTree, 0x20), start))\\n        }\\n        return hashedZeros;\\n    }\\n\\n    /// @notice get merkle root of generic array of bytes\\n    /// @param _data array of bytes to be merklelized\\n    /// @param _log2Size log2 of total size of the drive\\n    /// @dev _data is padded with zeroes until is multiple of 8\\n    /// @dev root is completed with zero tree until log2size is complete\\n    /// @dev hashes are taken word by word (8 bytes by 8 bytes)\\n    function getMerkleRootFromBytes(bytes calldata _data, uint256 _log2Size)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        require(_log2Size >= 3 && _log2Size <= 64, \\\"range of log2Size: [3,64]\\\");\\n\\n        // if _data is empty return pristine drive of size log2size\\n        if (_data.length == 0) return getEmptyTreeHashAtIndex(_log2Size - 3);\\n\\n        // total size of the drive in words\\n        uint256 size = 1 << (_log2Size - 3);\\n        require(\\n            size << L_WORD_SIZE >= _data.length,\\n            \\\"data is bigger than drive\\\"\\n        );\\n        // the stack depth is log2(_data.length / 8) + 2\\n        uint256 stack_depth = 2 +\\n            ((_data.length) >> L_WORD_SIZE).getLog2Floor();\\n        bytes32[] memory stack = new bytes32[](stack_depth);\\n\\n        uint256 numOfHashes; // total number of hashes on stack (counting levels)\\n        uint256 stackLength; // total length of stack\\n        uint256 numOfJoins; // number of hashes of the same level on stack\\n        uint256 topStackLevel; // hash level of the top of the stack\\n\\n        while (numOfHashes < size) {\\n            if ((numOfHashes << L_WORD_SIZE) < _data.length) {\\n                // we still have words to hash\\n                stack[stackLength] = getHashOfWordAtIndex(_data, numOfHashes);\\n                numOfHashes++;\\n\\n                numOfJoins = numOfHashes;\\n            } else {\\n                // since padding happens in hashOfWordAtIndex function\\n                // we only need to complete the stack with pre-computed\\n                // hash(0), hash(hash(0),hash(0)) and so on\\n                topStackLevel = numOfHashes.ctz();\\n\\n                stack[stackLength] = getEmptyTreeHashAtIndex(topStackLevel);\\n\\n                //Empty Tree Hash summarizes many hashes\\n                numOfHashes = numOfHashes + (1 << topStackLevel);\\n                numOfJoins = numOfHashes >> topStackLevel;\\n            }\\n\\n            stackLength++;\\n\\n            // while there are joins, hash top of stack together\\n            while (numOfJoins & 1 == 0) {\\n                bytes32 h2 = stack[stackLength - 1];\\n                bytes32 h1 = stack[stackLength - 2];\\n\\n                stack[stackLength - 2] = keccak256(abi.encodePacked(h1, h2));\\n                stackLength = stackLength - 1; // remove hashes from stack\\n\\n                numOfJoins = numOfJoins >> 1;\\n            }\\n        }\\n        require(stackLength == 1, \\\"stack error\\\");\\n\\n        return stack[0];\\n    }\\n\\n    /// @notice Get the hash of a word in an array of bytes\\n    /// @param _data array of bytes\\n    /// @param _wordIndex index of word inside the bytes to get the hash of\\n    /// @dev if word is incomplete (< 8 bytes) it gets padded with zeroes\\n    function getHashOfWordAtIndex(bytes calldata _data, uint256 _wordIndex)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        uint256 start = _wordIndex << L_WORD_SIZE;\\n        uint256 end = start + (1 << L_WORD_SIZE);\\n\\n        // TODO: in .lua this just returns zero, but this might be more consistent\\n        require(start <= _data.length, \\\"word out of bounds\\\");\\n\\n        if (end <= _data.length) {\\n            return keccak256(abi.encodePacked(_data[start:end]));\\n        }\\n\\n        // word is incomplete\\n        // fill paddedSlice with incomplete words - the rest is going to be bytes(0)\\n        bytes memory paddedSlice = new bytes(8);\\n        uint256 remaining = _data.length - start;\\n\\n        for (uint256 i; i < remaining; i++) {\\n            paddedSlice[i] = _data[start + i];\\n        }\\n\\n        return keccak256(paddedSlice);\\n    }\\n\\n    /// @notice Calculate the root of Merkle tree from an array of power of 2 elements\\n    /// @param hashes The array containing power of 2 elements\\n    /// @return byte32 the root hash being calculated\\n    function calculateRootFromPowerOfTwo(bytes32[] memory hashes)\\n        public\\n        pure\\n        returns (bytes32)\\n    {\\n        // revert when the input is not of power of 2\\n        require((hashes.length).isPowerOf2(), \\\"array len not power of 2\\\");\\n\\n        if (hashes.length == 1) {\\n            return hashes[0];\\n        } else {\\n            bytes32[] memory newHashes = new bytes32[](hashes.length >> 1);\\n\\n            for (uint256 i; i < hashes.length; i += 2) {\\n                newHashes[i >> 1] = keccak256(\\n                    abi.encodePacked(hashes[i], hashes[i + 1])\\n                );\\n            }\\n\\n            return calculateRootFromPowerOfTwo(newHashes);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe9896db44cc4dab335a3e776c629186824823d316d902b2efecb4b0a3e3dfdb7\",\"license\":\"Apache-2.0\"},\"contracts/test/TestMerkle.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Test Merkle\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Merkle.sol\\\";\\n\\ncontract TestMerkle {\\n    function getRootAfterReplacementInDrive(\\n        uint256 _position,\\n        uint256 _logSizeOfReplacement,\\n        uint256 _logSizeOfFullDrive,\\n        bytes32 _replacement,\\n        bytes32[] memory siblings\\n    ) public pure returns (bytes32) {\\n        return\\n            Merkle.getRootAfterReplacementInDrive(\\n                _position,\\n                _logSizeOfReplacement,\\n                _logSizeOfFullDrive,\\n                _replacement,\\n                siblings\\n            );\\n    }\\n\\n    function getEmptyTreeHashAtIndex(uint256 _index) public pure returns (bytes32) {\\n        return Merkle.getEmptyTreeHashAtIndex(_index);\\n    }\\n\\n    function getMerkleRootFromBytes(bytes calldata _data, uint256 _log2Size) public pure returns (bytes32) {\\n        return Merkle.getMerkleRootFromBytes(_data, _log2Size);\\n    }\\n\\n    function getHashOfWordAtIndex(bytes calldata _data, uint256 _wordIndex) public pure returns (bytes32) {\\n        return Merkle.getHashOfWordAtIndex(_data, _wordIndex);\\n    }\\n\\n    function calculateRootFromPowerOfTwo(bytes32[] memory hashes) public pure returns (bytes32) {\\n        return Merkle.calculateRootFromPowerOfTwo(hashes);\\n    }\\n}\\n\",\"keccak256\":\"0xdb4aa994f0361e44af5ae267ef9a332586702d41c3fab41a4ac2dc8791d0937e\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}