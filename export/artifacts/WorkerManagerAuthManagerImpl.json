{
  "contractName": "WorkerManagerAuthManagerImpl",
  "sourceName": "contracts/WorkerManagerAuthManagerImpl.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dapp",
          "type": "address"
        }
      ],
      "name": "Authorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dapp",
          "type": "address"
        }
      ],
      "name": "Deauthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "JobAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "JobOffer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "JobRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "worker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "Retired",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptJob",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dappAddress",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "cancelHire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dappAddress",
          "type": "address"
        }
      ],
      "name": "deauthorize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "hire",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_workerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dappAddress",
          "type": "address"
        }
      ],
      "name": "hireAndAuthorize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dappAddress",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "isAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "isOwned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "isPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "isRetired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rejectJob",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_workerAddress",
          "type": "address"
        }
      ],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610d08806100206000396000f3fe6080604052600436106100e85760003560e01c80639b789b7e1161008a578063d9d6bd8611610059578063d9d6bd8614610272578063dbd9655414610285578063f4dc754b14610298578063fa544161146102b857600080fd5b80639b789b7e146101fd5780639e6371ba14610212578063a00745b614610232578063b64b3bed1461025257600080fd5b806365e4ad9e116100c657806365e4ad9e1461014c5780636d3c62751461016c5780636d892f7e1461018c5780636f77926b146101ac57600080fd5b806303d6e81e146100ed5780632896f60b146100f75780632bef45951461012c575b600080fd5b6100f56102d8565b005b34801561010357600080fd5b50610117610112366004610c4d565b6103f0565b60405190151581526020015b60405180910390f35b34801561013857600080fd5b506100f5610147366004610ca8565b610436565b34801561015857600080fd5b50610117610167366004610ca8565b610575565b34801561017857600080fd5b50610117610187366004610c4d565b6105a9565b34801561019857600080fd5b506100f56101a7366004610ca8565b6105b2565b3480156101b857600080fd5b506101e56101c7366004610c4d565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b039091168152602001610123565b34801561020957600080fd5b506100f56106e8565b34801561021e57600080fd5b506100f561022d366004610c4d565b6107cd565b34801561023e57600080fd5b5061011761024d366004610c4d565b610901565b34801561025e57600080fd5b506100f561026d366004610c4d565b61090a565b6100f5610280366004610c4d565b610973565b6100f5610293366004610c70565b610b6b565b3480156102a457600080fd5b506101176102b3366004610c4d565b610b82565b3480156102c457600080fd5b506101e56102d3366004610c4d565b610b8b565b336000908152602081905260409020546001600160a01b03166103425760405162461bcd60e51b815260206004820181905260248201527f776f726b657220646f6573206e6f7420686176652061206a6f62206f6666657260448201526064015b60405180910390fd5b3360009081526020818152604080832080546001600160a01b031981169091556001909252808320805460ff19169055516001600160a01b039091169182913480156108fc0292909190818181858888f193505050501580156103a9573d6000803e3d6000fd5b50336000818152602081905260408082205490516001600160a01b0390911692917fac8bfc64efe7b663f325ca81c7468a291a868aacc74c8f91cdc5c8141c15e38a91a350565b6000805b6001600160a01b03831660009081526001602052604090205460ff16600381111561042f57634e487b7160e01b600052602160045260246000fd5b1492915050565b813361045a826001600160a01b039081166000908152602081905260409020541690565b6001600160a01b0316146104b05760405162461bcd60e51b815260206004820152601a60248201527f776f726b6572206e6f742068697265642062792073656e6465720000000000006044820152606401610339565b60006104bd338585610bf8565b60008181526002602052604090205490915060ff161561051f5760405162461bcd60e51b815260206004820152601760248201527f6461707020616c726561647920617574686f72697a65640000000000000000006044820152606401610339565b600081815260026020526040808220805460ff19166001179055516001600160a01b03808616929087169133917fde756a416a233cdb16c23a1fa5dcb3113164968df8607e0a4eeca25974b96e0391a450505050565b60006002600061058e61058786610b8b565b8686610bf8565b815260208101919091526040016000205460ff169392505050565b600060036103f4565b81336105d6826001600160a01b039081166000908152602081905260409020541690565b6001600160a01b03161461062c5760405162461bcd60e51b815260206004820152601a60248201527f776f726b6572206e6f742068697265642062792073656e6465720000000000006044820152606401610339565b6000610639338585610bf8565b60008181526002602052604090205490915060ff1615156001146106955760405162461bcd60e51b815260206004820152601360248201527219185c1c081b9bdd08185d5d1a1bdc9a5e9959606a1b6044820152606401610339565b600081815260026020526040808220805460ff19169055516001600160a01b03808616929087169133917f4d2275ddb8a6d9c36c95476c2eaf9746c1785b4ab76a99719fd647b36da46cee91a450505050565b60013360009081526001602052604090205460ff16600381111561071c57634e487b7160e01b600052602160045260246000fd5b146107745760405162461bcd60e51b815260206004820152602260248201527f776f726b6572206e6f74206973206e6f7420696e2070656e64696e6720737461604482015261746560f01b6064820152608401610339565b336000818152600160209081526040808320805460ff19166002179055908290528082205490516001600160a01b0390911692917f0cfa12ab8ee8dc6f9b68938d5e764dafed737d43dc5ec8443abf81e645276eb691a3565b60026001600160a01b03821660009081526001602052604090205460ff16600381111561080a57634e487b7160e01b600052602160045260246000fd5b1461084a5760405162461bcd60e51b815260206004820152601060248201526f1ddbdc9ad95c881b9bdd081bdddb995960821b6044820152606401610339565b6001600160a01b038181166000908152602081905260409020541633146108b35760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2072657469726520776f726b6572000000006044820152606401610339565b6001600160a01b038116600081815260016020526040808220805460ff19166003179055513392917f657b373e1262c26d1f1a83e8949f0af9067fe48026b308e47eec5ef6b40ff25d91a350565b600060016103f4565b6001600160a01b038181166000908152602081905260409020541633146108b35760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792068697265722063616e2063616e63656c20746865206f66666572006044820152606401610339565b61097c816103f0565b6109c85760405162461bcd60e51b815260206004820152601760248201527f776f726b6572206973206e6f7420617661696c61626c650000000000000000006044820152606401610339565b6001600160a01b038116610a1e5760405162461bcd60e51b815260206004820152601d60248201527f776f726b657220616464726573732063616e206e6f74206265203078300000006044820152606401610339565b66038d7ea4c68000341015610a6d5760405162461bcd60e51b815260206004820152601560248201527466756e64696e672062656c6f77206d696e696d756d60581b6044820152606401610339565b6729a2241af62c0000341115610abd5760405162461bcd60e51b815260206004820152601560248201527466756e64696e672061626f7665206d6178696d756d60581b6044820152606401610339565b6001600160a01b03811660009081526020818152604080832080546001600160a01b03191633179055600191829052909120805460ff1916828002179055506040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610b31573d6000803e3d6000fd5b5060405133906001600160a01b038316907f2e0aa97ef0e6f4f76319861c90e91beec7a7a44a698cab856dfc1985a0c588f090600090a350565b610b7482610973565b610b7e8282610436565b5050565b600060026103f4565b600060026001600160a01b03831660009081526001602052604090205460ff166003811115610bca57634e487b7160e01b600052602160045260246000fd5b14610bd6576000610bf2565b6001600160a01b03808316600090815260208190526040902054165b92915050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284811b8216603484015283901b166048820152600090605c016040516020818303038152906040528051906020012090509392505050565b600060208284031215610c5e578081fd5b8135610c6981610cba565b9392505050565b60008060408385031215610c82578081fd5b8235610c8d81610cba565b91506020830135610c9d81610cba565b809150509250929050565b60008060408385031215610c82578182fd5b6001600160a01b0381168114610ccf57600080fd5b5056fea26469706673582212202700c4e4bbaeb90fae58ff3eb584ca659cec3993a24873987c6c38e6b553627464736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80639b789b7e1161008a578063d9d6bd8611610059578063d9d6bd8614610272578063dbd9655414610285578063f4dc754b14610298578063fa544161146102b857600080fd5b80639b789b7e146101fd5780639e6371ba14610212578063a00745b614610232578063b64b3bed1461025257600080fd5b806365e4ad9e116100c657806365e4ad9e1461014c5780636d3c62751461016c5780636d892f7e1461018c5780636f77926b146101ac57600080fd5b806303d6e81e146100ed5780632896f60b146100f75780632bef45951461012c575b600080fd5b6100f56102d8565b005b34801561010357600080fd5b50610117610112366004610c4d565b6103f0565b60405190151581526020015b60405180910390f35b34801561013857600080fd5b506100f5610147366004610ca8565b610436565b34801561015857600080fd5b50610117610167366004610ca8565b610575565b34801561017857600080fd5b50610117610187366004610c4d565b6105a9565b34801561019857600080fd5b506100f56101a7366004610ca8565b6105b2565b3480156101b857600080fd5b506101e56101c7366004610c4d565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b039091168152602001610123565b34801561020957600080fd5b506100f56106e8565b34801561021e57600080fd5b506100f561022d366004610c4d565b6107cd565b34801561023e57600080fd5b5061011761024d366004610c4d565b610901565b34801561025e57600080fd5b506100f561026d366004610c4d565b61090a565b6100f5610280366004610c4d565b610973565b6100f5610293366004610c70565b610b6b565b3480156102a457600080fd5b506101176102b3366004610c4d565b610b82565b3480156102c457600080fd5b506101e56102d3366004610c4d565b610b8b565b336000908152602081905260409020546001600160a01b03166103425760405162461bcd60e51b815260206004820181905260248201527f776f726b657220646f6573206e6f7420686176652061206a6f62206f6666657260448201526064015b60405180910390fd5b3360009081526020818152604080832080546001600160a01b031981169091556001909252808320805460ff19169055516001600160a01b039091169182913480156108fc0292909190818181858888f193505050501580156103a9573d6000803e3d6000fd5b50336000818152602081905260408082205490516001600160a01b0390911692917fac8bfc64efe7b663f325ca81c7468a291a868aacc74c8f91cdc5c8141c15e38a91a350565b6000805b6001600160a01b03831660009081526001602052604090205460ff16600381111561042f57634e487b7160e01b600052602160045260246000fd5b1492915050565b813361045a826001600160a01b039081166000908152602081905260409020541690565b6001600160a01b0316146104b05760405162461bcd60e51b815260206004820152601a60248201527f776f726b6572206e6f742068697265642062792073656e6465720000000000006044820152606401610339565b60006104bd338585610bf8565b60008181526002602052604090205490915060ff161561051f5760405162461bcd60e51b815260206004820152601760248201527f6461707020616c726561647920617574686f72697a65640000000000000000006044820152606401610339565b600081815260026020526040808220805460ff19166001179055516001600160a01b03808616929087169133917fde756a416a233cdb16c23a1fa5dcb3113164968df8607e0a4eeca25974b96e0391a450505050565b60006002600061058e61058786610b8b565b8686610bf8565b815260208101919091526040016000205460ff169392505050565b600060036103f4565b81336105d6826001600160a01b039081166000908152602081905260409020541690565b6001600160a01b03161461062c5760405162461bcd60e51b815260206004820152601a60248201527f776f726b6572206e6f742068697265642062792073656e6465720000000000006044820152606401610339565b6000610639338585610bf8565b60008181526002602052604090205490915060ff1615156001146106955760405162461bcd60e51b815260206004820152601360248201527219185c1c081b9bdd08185d5d1a1bdc9a5e9959606a1b6044820152606401610339565b600081815260026020526040808220805460ff19169055516001600160a01b03808616929087169133917f4d2275ddb8a6d9c36c95476c2eaf9746c1785b4ab76a99719fd647b36da46cee91a450505050565b60013360009081526001602052604090205460ff16600381111561071c57634e487b7160e01b600052602160045260246000fd5b146107745760405162461bcd60e51b815260206004820152602260248201527f776f726b6572206e6f74206973206e6f7420696e2070656e64696e6720737461604482015261746560f01b6064820152608401610339565b336000818152600160209081526040808320805460ff19166002179055908290528082205490516001600160a01b0390911692917f0cfa12ab8ee8dc6f9b68938d5e764dafed737d43dc5ec8443abf81e645276eb691a3565b60026001600160a01b03821660009081526001602052604090205460ff16600381111561080a57634e487b7160e01b600052602160045260246000fd5b1461084a5760405162461bcd60e51b815260206004820152601060248201526f1ddbdc9ad95c881b9bdd081bdddb995960821b6044820152606401610339565b6001600160a01b038181166000908152602081905260409020541633146108b35760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c79206f776e65722063616e2072657469726520776f726b6572000000006044820152606401610339565b6001600160a01b038116600081815260016020526040808220805460ff19166003179055513392917f657b373e1262c26d1f1a83e8949f0af9067fe48026b308e47eec5ef6b40ff25d91a350565b600060016103f4565b6001600160a01b038181166000908152602081905260409020541633146108b35760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792068697265722063616e2063616e63656c20746865206f66666572006044820152606401610339565b61097c816103f0565b6109c85760405162461bcd60e51b815260206004820152601760248201527f776f726b6572206973206e6f7420617661696c61626c650000000000000000006044820152606401610339565b6001600160a01b038116610a1e5760405162461bcd60e51b815260206004820152601d60248201527f776f726b657220616464726573732063616e206e6f74206265203078300000006044820152606401610339565b66038d7ea4c68000341015610a6d5760405162461bcd60e51b815260206004820152601560248201527466756e64696e672062656c6f77206d696e696d756d60581b6044820152606401610339565b6729a2241af62c0000341115610abd5760405162461bcd60e51b815260206004820152601560248201527466756e64696e672061626f7665206d6178696d756d60581b6044820152606401610339565b6001600160a01b03811660009081526020818152604080832080546001600160a01b03191633179055600191829052909120805460ff1916828002179055506040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015610b31573d6000803e3d6000fd5b5060405133906001600160a01b038316907f2e0aa97ef0e6f4f76319861c90e91beec7a7a44a698cab856dfc1985a0c588f090600090a350565b610b7482610973565b610b7e8282610436565b5050565b600060026103f4565b600060026001600160a01b03831660009081526001602052604090205460ff166003811115610bca57634e487b7160e01b600052602160045260246000fd5b14610bd6576000610bf2565b6001600160a01b03808316600090815260208190526040902054165b92915050565b6040516bffffffffffffffffffffffff19606085811b8216602084015284811b8216603484015283901b166048820152600090605c016040516020818303038152906040528051906020012090509392505050565b600060208284031215610c5e578081fd5b8135610c6981610cba565b9392505050565b60008060408385031215610c82578081fd5b8235610c8d81610cba565b91506020830135610c9d81610cba565b809150509250929050565b60008060408385031215610c82578182fd5b6001600160a01b0381168114610ccf57600080fd5b5056fea26469706673582212202700c4e4bbaeb90fae58ff3eb584ca659cec3993a24873987c6c38e6b553627464736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "authorize(address,address)": {
        "params": {
          "_dappAddress": "address of the dapp that permission will be given to",
          "_workerAddress": "address of the worker node to given permission"
        }
      },
      "isAuthorized(address,address)": {
        "params": {
          "_dappAddress": "address of the DApp",
          "_workerAddress": "address of the worker"
        }
      },
      "isAvailable(address)": {
        "params": {
          "workerAddress": "address of the worker node"
        }
      },
      "isPending(address)": {
        "params": {
          "workerAddress": "address of the worker node"
        }
      }
    },
    "stateVariables": {
      "MAXIMUM_FUNDING": {
        "details": "transfers bigger than maximum value should be done directly"
      },
      "MINIMUM_FUNDING": {
        "details": "user can only hire a worker if he sends more than minimum value"
      },
      "permissions": {
        "details": "permissions keyed by hash(user, worker, dapp)"
      },
      "stateOf": {
        "details": "mapping from worker to its internal state"
      },
      "userOf": {
        "details": "mapping from worker to its user"
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD08 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B789B7E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD9D6BD86 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDBD96554 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF4DC754B EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xFA544161 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B789B7E EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xA00745B6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65E4AD9E GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x65E4AD9E EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x6D3C6275 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x6D892F7E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D6E81E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x2896F60B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2BEF4595 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x6E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B657220646F6573206E6F7420686176652061206A6F62206F66666572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0xAC8BFC64EFE7B663F325CA81C7468A291A868AACC74C8F91CDC5C8141C15E38A SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 CALLER PUSH2 0x45A DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F742068697265642062792073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD CALLER DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6461707020616C726561647920617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0xDE756A416A233CDB16C23A1FA5DCB3113164968DF8607E0A4EECA25974B96E03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x58E PUSH2 0x587 DUP7 PUSH2 0xB8B JUMP JUMPDEST DUP7 DUP7 PUSH2 0xBF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x3F4 JUMP JUMPDEST DUP2 CALLER PUSH2 0x5D6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F742068697265642062792073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x639 CALLER DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x19185C1C081B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x4D2275DDB8A6D9C36C95476C2EAF9746C1785B4AB76A99719FD647B36DA46CEE SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F74206973206E6F7420696E2070656E64696E6720737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7465 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0xCFA12AB8EE8DC6F9B68938D5E764DAFED737D43DC5EC8443ABF81E645276EB6 SWAP2 LOG3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1DDBDC9AD95C881B9BDD081BDDDB9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E65722063616E2072657469726520776F726B657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x657B373E1262C26D1F1A83E8949F0AF9067FE48026B308E47EEC5EF6B40FF25D SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792068697265722063616E2063616E63656C20746865206F6666657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B657220616464726573732063616E206E6F7420626520307830000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x66756E64696E672062656C6F77206D696E696D756D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH8 0x29A2241AF62C0000 CALLVALUE GT ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x66756E64696E672061626F7665206D6178696D756D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2E0AA97EF0E6F4F76319861C90E91BEEC7A7A44A698CAB856DFC1985A0C588F0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xB74 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xB7E DUP3 DUP3 PUSH2 0x436 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP5 DUP2 SHL DUP3 AND PUSH1 0x34 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC69 DUP2 PUSH2 0xCBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC82 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC8D DUP2 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC9D DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC82 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 STOP 0xC4 0xE4 0xBB 0xAE 0xB9 0xF 0xAE PC SELFDESTRUCT RETURNDATACOPY 0xB5 DUP5 0xCA PUSH6 0x9CEC3993A248 PUSH20 0x987C6C38E6B553627464736F6C63430008040033 ",
      "sourceMap": "772:6463:3:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:6605:5",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:5",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:187:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "139:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "147:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "94:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "165:36:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "191:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "178:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:23:5"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "169:5:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "235:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "210:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "210:31:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "250:15:5",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "260:5:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "250:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:5",
                    "type": ""
                  }
                ],
                "src": "14:257:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "354:187:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "400:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "409:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "417:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "402:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "402:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "402:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "375:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "384:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "371:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "371:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "396:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "367:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "367:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "364:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "435:36:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "461:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "448:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "448:23:5"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "439:5:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "505:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "480:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "480:31:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "520:15:5",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "520:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_payable",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "320:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "331:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "343:6:5",
                    "type": ""
                  }
                ],
                "src": "276:265:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "641:311:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "687:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "696:6:5"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "704:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "689:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "689:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "689:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "662:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "671:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "658:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "658:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "651:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "722:36:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "748:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "735:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "735:23:5"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "726:5:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "792:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "767:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "767:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "767:31:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "807:15:5",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "817:5:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "807:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "831:47:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "863:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "874:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "846:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "846:32:5"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "835:7:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "912:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "887:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:33:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "887:33:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "929:17:5",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "939:7:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "929:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_payablet_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "599:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "610:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "622:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "630:6:5",
                    "type": ""
                  }
                ],
                "src": "546:406:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1044:311:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1090:26:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1099:6:5"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1107:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1092:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1092:22:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1092:22:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1065:7:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1074:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1061:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1061:23:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1086:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1057:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:32:5"
                      },
                      "nodeType": "YulIf",
                      "src": "1054:2:5"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1125:36:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1151:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1138:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:23:5"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1129:5:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1195:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1170:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1170:31:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1170:31:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1210:15:5",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1220:5:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1210:6:5"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1234:47:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1266:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1277:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1262:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1262:18:5"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1249:12:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:32:5"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1238:7:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1315:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1290:24:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1290:33:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1290:33:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1332:17:5",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1342:7:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1332:6:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1002:9:5",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1013:7:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1025:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1033:6:5",
                    "type": ""
                  }
                ],
                "src": "957:398:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1535:241:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1545:41:5",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1559:26:5",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1555:31:5"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1549:2:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1602:3:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1615:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1619:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1611:15:5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1628:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1607:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1607:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1595:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1595:37:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1595:37:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1652:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1657:2:5",
                                "type": "",
                                "value": "20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1648:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1648:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1670:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1674:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1666:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1666:15:5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1683:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1662:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1662:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1641:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1641:46:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1641:46:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1707:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1712:2:5",
                                "type": "",
                                "value": "40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1703:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1703:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1725:2:5",
                                    "type": "",
                                    "value": "96"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1729:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1721:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1721:15:5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1738:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1717:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1717:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1696:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:46:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1696:46:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1751:19:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1762:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1767:2:5",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1758:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:12:5"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "1751:3:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_address_t_address_t_address__to_t_address_t_address_t_address__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "1495:3:5",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1500:6:5",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1508:6:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1516:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "1527:3:5",
                    "type": ""
                  }
                ],
                "src": "1360:416:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1882:102:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1892:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1904:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1915:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1900:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1892:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1934:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1965:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1970:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1961:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1961:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1974:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1957:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1957:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1945:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1945:32:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1927:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1927:51:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1927:51:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1851:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1862:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1873:4:5",
                    "type": ""
                  }
                ],
                "src": "1781:203:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2084:92:5",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2094:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2117:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2094:4:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2136:9:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2161:6:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2154:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2154:14:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2147:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2147:22:5"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2129:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2129:41:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2129:41:5"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2053:9:5",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2064:6:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2075:4:5",
                    "type": ""
                  }
                ],
                "src": "1989:187:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2355:166:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2372:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2383:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2365:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2365:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2365:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2406:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2417:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2402:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2402:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2422:2:5",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2395:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2395:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2395:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2445:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2456:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2441:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2441:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2461:18:5",
                            "type": "",
                            "value": "worker not owned"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2434:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2434:46:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2434:46:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2489:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2501:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2512:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2497:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2497:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2489:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0bd7fdc8800901930b931cb30cb4aee54d53ccd765a730d50a3891d91c19bf98__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2332:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2346:4:5",
                    "type": ""
                  }
                ],
                "src": "2181:340:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2700:181:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2717:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2728:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2710:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2710:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2710:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2751:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2762:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2747:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2747:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2767:2:5",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2740:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2740:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2790:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2801:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2786:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2786:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2806:33:5",
                            "type": "",
                            "value": "only hirer can cancel the offer"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2779:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2779:61:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2779:61:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2849:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2861:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2872:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2857:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2857:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2849:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_18b32a229a50dfacfd7696166d2a2b18c1ea3ca0a1c1c1fe6d1d2c0d60b34eb6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2677:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2691:4:5",
                    "type": ""
                  }
                ],
                "src": "2526:355:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3060:169:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3077:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3088:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3070:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3070:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3070:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3111:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3122:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3107:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3107:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3127:2:5",
                            "type": "",
                            "value": "19"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3100:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3100:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3100:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3150:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3161:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3146:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3146:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3166:21:5",
                            "type": "",
                            "value": "dapp not authorized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3139:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3139:49:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3139:49:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3197:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3209:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3220:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3205:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3205:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3197:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3932cc1e6160440db676ea88d5467e7212ce5a4a0d63023762463fb007da5ed6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3037:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3051:4:5",
                    "type": ""
                  }
                ],
                "src": "2886:343:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3408:173:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3425:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3436:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3418:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3418:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3418:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3459:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3470:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3455:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3455:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3475:2:5",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3448:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3448:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3448:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3498:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3509:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3494:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3494:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3514:25:5",
                            "type": "",
                            "value": "worker is not available"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3487:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3487:53:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3487:53:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3549:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3561:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3572:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3557:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3557:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3549:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_56a6884761bd02a804ab7d80a93b054fbe0eeba0ac7f68562916fbf4f7db7327__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3385:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3399:4:5",
                    "type": ""
                  }
                ],
                "src": "3234:347:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3760:182:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3777:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3788:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3770:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3770:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3770:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3811:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3822:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3807:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3807:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3827:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3800:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3800:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3800:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3850:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3861:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3846:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3846:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3866:34:5",
                            "type": "",
                            "value": "worker does not have a job offer"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3839:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3839:62:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3839:62:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3910:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3922:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3933:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3918:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3918:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3910:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_98bbb34c1233be383f8a895822c1762eddab90928757045bf9deb29240a5911d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3737:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3751:4:5",
                    "type": ""
                  }
                ],
                "src": "3586:356:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4121:173:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4138:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4149:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4131:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4131:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4131:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4172:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4183:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4168:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4168:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4188:2:5",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4161:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4161:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4161:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4211:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4222:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4207:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4207:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4227:25:5",
                            "type": "",
                            "value": "dapp already authorized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4200:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4200:53:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4200:53:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4262:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4274:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4285:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4270:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4270:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4262:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_ad1c7bf59deb127db7d83bcdd493b1631bfb5b7de96bd523860333043d8fb7d0__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4098:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4112:4:5",
                    "type": ""
                  }
                ],
                "src": "3947:347:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4473:171:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4490:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4501:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4483:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4483:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4483:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4524:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4535:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4520:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4520:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4540:2:5",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4513:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4513:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4513:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4563:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4574:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4559:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4559:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4579:23:5",
                            "type": "",
                            "value": "funding above maximum"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4552:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4552:51:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4552:51:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4612:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4624:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4635:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4620:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4620:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4612:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c0d77fd0f532043cb15bb7b34a738cd71a95145c1283884bf0a93231e11d85be__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4450:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4464:4:5",
                    "type": ""
                  }
                ],
                "src": "4299:345:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4823:178:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4840:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4851:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4833:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4833:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4833:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4874:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4885:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4870:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4870:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4890:2:5",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4863:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4863:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4913:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4924:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4909:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4909:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4929:30:5",
                            "type": "",
                            "value": "only owner can retire worker"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4902:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4902:58:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4902:58:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4969:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4981:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4992:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4977:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4969:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c82851afaf79b73620a74205117532d21a2b5fe9a351aa53959d1e92ad1466b1__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4800:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4814:4:5",
                    "type": ""
                  }
                ],
                "src": "4649:352:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5180:179:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5197:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5208:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5190:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5190:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5190:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5231:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5242:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5227:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5227:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5247:2:5",
                            "type": "",
                            "value": "29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5220:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5220:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5220:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5270:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5281:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5266:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5266:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5286:31:5",
                            "type": "",
                            "value": "worker address can not be 0x0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5259:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5259:59:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5259:59:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5327:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5339:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5350:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5335:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5335:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5327:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_e4ccb06ca41b69ace172c9d8cb02eb44172b1f513c0b43751b45f1bc892fdc3f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5157:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5171:4:5",
                    "type": ""
                  }
                ],
                "src": "5006:353:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5538:176:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5555:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5566:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5548:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5548:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5589:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5600:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5585:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5585:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5605:2:5",
                            "type": "",
                            "value": "26"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5578:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5578:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5578:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5628:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5639:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5624:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5624:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5644:28:5",
                            "type": "",
                            "value": "worker not hired by sender"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5617:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5617:56:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5617:56:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5682:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5694:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5705:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5682:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f2c173fd5d5a2fcd47df6b1a9a1a577ad4d8894f67b7d94442813477aca2d91e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5515:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5529:4:5",
                    "type": ""
                  }
                ],
                "src": "5364:350:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5893:224:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5910:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5903:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5903:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5903:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5944:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5955:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5940:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5940:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5960:2:5",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5933:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5933:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5933:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5983:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5994:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5979:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5979:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5999:34:5",
                            "type": "",
                            "value": "worker not is not in pending sta"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5972:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5972:62:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5972:62:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6054:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6065:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6050:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6050:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6070:4:5",
                            "type": "",
                            "value": "te"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6043:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6043:32:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6043:32:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6084:27:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6096:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6107:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6092:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6092:19:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6084:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_f92f6c571d0b4422126c611c169038b36eb8ef73e2a24b837e3dfd45b705083f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5870:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5884:4:5",
                    "type": ""
                  }
                ],
                "src": "5719:398:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6296:171:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6313:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6324:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6306:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:21:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6306:21:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6347:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6358:2:5",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6343:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6343:18:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6363:2:5",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6336:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6336:30:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6336:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6386:9:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6397:2:5",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6382:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6382:18:5"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6402:23:5",
                            "type": "",
                            "value": "funding below minimum"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6375:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6375:51:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6375:51:5"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6435:26:5",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6447:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6458:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6443:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6443:18:5"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6435:4:5"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_fb3b977cb3592df942477465ee8f29e1f41e41c4b99dea855a8ea987840e08de__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6273:9:5",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6287:4:5",
                    "type": ""
                  }
                ],
                "src": "6122:345:5"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6517:86:5",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6581:16:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6590:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6593:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6583:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6583:12:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6583:12:5"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6540:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6551:5:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6566:3:5",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6571:1:5",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6562:3:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6562:11:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6575:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6558:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6558:19:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6547:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6547:31:5"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "6537:2:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6537:42:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6530:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6530:50:5"
                      },
                      "nodeType": "YulIf",
                      "src": "6527:2:5"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "6506:5:5",
                    "type": ""
                  }
                ],
                "src": "6472:131:5"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_packed_t_address_t_address_t_address__to_t_address_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        mstore(add(pos, 40), and(shl(96, value2), _1))\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_0bd7fdc8800901930b931cb30cb4aee54d53ccd765a730d50a3891d91c19bf98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"worker not owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_18b32a229a50dfacfd7696166d2a2b18c1ea3ca0a1c1c1fe6d1d2c0d60b34eb6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"only hirer can cancel the offer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3932cc1e6160440db676ea88d5467e7212ce5a4a0d63023762463fb007da5ed6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"dapp not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56a6884761bd02a804ab7d80a93b054fbe0eeba0ac7f68562916fbf4f7db7327__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"worker is not available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98bbb34c1233be383f8a895822c1762eddab90928757045bf9deb29240a5911d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"worker does not have a job offer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad1c7bf59deb127db7d83bcdd493b1631bfb5b7de96bd523860333043d8fb7d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"dapp already authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0d77fd0f532043cb15bb7b34a738cd71a95145c1283884bf0a93231e11d85be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"funding above maximum\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c82851afaf79b73620a74205117532d21a2b5fe9a351aa53959d1e92ad1466b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"only owner can retire worker\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e4ccb06ca41b69ace172c9d8cb02eb44172b1f513c0b43751b45f1bc892fdc3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"worker address can not be 0x0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2c173fd5d5a2fcd47df6b1a9a1a577ad4d8894f67b7d94442813477aca2d91e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"worker not hired by sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f92f6c571d0b4422126c611c169038b36eb8ef73e2a24b837e3dfd45b705083f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"worker not is not in pending sta\")\n        mstore(add(headStart, 96), \"te\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb3b977cb3592df942477465ee8f29e1f41e41c4b99dea855a8ea987840e08de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"funding below minimum\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
          "id": 5,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B789B7E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD9D6BD86 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xDBD96554 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF4DC754B EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xFA544161 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B789B7E EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xA00745B6 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65E4AD9E GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x65E4AD9E EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x6D3C6275 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x6D892F7E EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D6E81E EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x2896F60B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2BEF4595 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA8 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x123 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x6E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x90A JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0xB6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E5 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xB8B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B657220646F6573206E6F7420686176652061206A6F62206F66666572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0xAC8BFC64EFE7B663F325CA81C7468A291A868AACC74C8F91CDC5C8141C15E38A SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 CALLER PUSH2 0x45A DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F742068697265642062792073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD CALLER DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x51F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6461707020616C726561647920617574686F72697A6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0xDE756A416A233CDB16C23A1FA5DCB3113164968DF8607E0A4EECA25974B96E03 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x58E PUSH2 0x587 DUP7 PUSH2 0xB8B JUMP JUMPDEST DUP7 DUP7 PUSH2 0xBF8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0x3F4 JUMP JUMPDEST DUP2 CALLER PUSH2 0x5D6 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F742068697265642062792073656E646572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x639 CALLER DUP6 DUP6 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x19185C1C081B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP3 SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x4D2275DDB8A6D9C36C95476C2EAF9746C1785B4AB76A99719FD647B36DA46CEE SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206E6F74206973206E6F7420696E2070656E64696E6720737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7465 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x339 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 PUSH32 0xCFA12AB8EE8DC6F9B68938D5E764DAFED737D43DC5EC8443ABF81E645276EB6 SWAP2 LOG3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1DDBDC9AD95C881B9BDD081BDDDB9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206F776E65722063616E2072657469726520776F726B657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x3 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x657B373E1262C26D1F1A83E8949F0AF9067FE48026B308E47EEC5EF6B40FF25D SWAP2 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792068697265722063616E2063616E63656C20746865206F6666657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B6572206973206E6F7420617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x776F726B657220616464726573732063616E206E6F7420626520307830000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x66756E64696E672062656C6F77206D696E696D756D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH8 0x29A2241AF62C0000 CALLVALUE GT ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x66756E64696E672061626F7665206D6178696D756D PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 SWAP2 DUP3 SWAP1 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2E0AA97EF0E6F4F76319861C90E91BEEC7A7A44A698CAB856DFC1985A0C588F0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xB74 DUP3 PUSH2 0x973 JUMP JUMPDEST PUSH2 0xB7E DUP3 DUP3 PUSH2 0x436 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP5 DUP2 SHL DUP3 AND PUSH1 0x34 DUP5 ADD MSTORE DUP4 SWAP1 SHL AND PUSH1 0x48 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC69 DUP2 PUSH2 0xCBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC82 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC8D DUP2 PUSH2 0xCBA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC9D DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC82 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 STOP 0xC4 0xE4 0xBB 0xAE 0xB9 0xF 0xAE PC SELFDESTRUCT RETURNDATACOPY 0xB5 DUP5 0xCA PUSH6 0x9CEC3993A248 PUSH20 0x987C6C38E6B553627464736F6C63430008040033 ",
      "sourceMap": "772:6463:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3689:536;;;:::i;:::-;;1563:187;;;;;;;;;;-1:-1:-1;1563:187:3;;;;;:::i;:::-;;:::i;:::-;;;2154:14:5;;2147:22;2129:41;;2117:2;2102:18;1563:187:3;;;;;;;;5646:519;;;;;;;;;;-1:-1:-1;5646:519:3;;;;;:::i;:::-;;:::i;6698:326::-;;;;;;;;;;-1:-1:-1;6698:326:3;;;;;:::i;:::-;;:::i;5049:185::-;;;;;;;;;;-1:-1:-1;5049:185:3;;;;;:::i;:::-;;:::i;6171:521::-;;;;;;;;;;-1:-1:-1;6171:521:3;;;;;:::i;:::-;;:::i;2252:162::-;;;;;;;;;;-1:-1:-1;2252:162:3;;;;;:::i;:::-;-1:-1:-1;;;;;2385:22:3;;;2355:7;2385:22;;;;;;;;;;;;;2252:162;;;;-1:-1:-1;;;;;1945:32:5;;;1927:51;;1915:2;1900:18;2252:162:3;1882:102:5;3298:385:3;;;;;;;;;;;;;:::i;4581:462::-;;;;;;;;;;-1:-1:-1;4581:462:3;;;;;:::i;:::-;;:::i;1756:183::-;;;;;;;;;;-1:-1:-1;1756:183:3;;;;;:::i;:::-;;:::i;4231:344::-;;;;;;;;;;-1:-1:-1;4231:344:3;;;;;:::i;:::-;;:::i;2607:685::-;;;;;;:::i;:::-;;:::i;7030:203::-;;;;;;:::i;:::-;;:::i;2420:181::-;;;;;;;;;;-1:-1:-1;2420:181:3;;;;;:::i;:::-;;:::i;1945:301::-;;;;;;;;;;-1:-1:-1;1945:301:3;;;;;:::i;:::-;;:::i;3689:536::-;3772:10;3795:1;3765:18;;;;;;;;;;;-1:-1:-1;;;;;3765:18:3;3744:111;;;;-1:-1:-1;;;3744:111:3;;3788:2:5;3744:111:3;;;3770:21:5;;;3807:18;;;3800:30;3866:34;3846:18;;;3839:62;3918:18;;3744:111:3;;;;;;;;;3897:10;3866:21;3890:18;;;;;;;;;;;;;-1:-1:-1;;;;;;3955:40:3;;;;;-1:-1:-1;4030:19:3;;;;;;:43;;-1:-1:-1;;4030:43:3;;;4112:25;-1:-1:-1;;;;;3890:18:3;;;;;;4127:9;4112:25;;;;;4127:9;;4112:25;;3866:21;4112:25;4127:9;3890:18;4112:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4206:10:3;4199:6;:18;;;;;;;;;;;;4175:43;;-1:-1:-1;;;;;4199:18:3;;;;4206:10;4175:43;;;3689:536;:::o;1563:187::-;1669:4;;1696:47;-1:-1:-1;;;;;1696:22:3;;;;;;:7;:22;;;;;;;;:47;;;;;;-1:-1:-1;;;1696:47:3;;;;;;;;;;;1563:187;-1:-1:-1;;1563:187:3:o;5646:519::-;5762:14;5342:10;5315:23;5762:14;-1:-1:-1;;;;;2385:22:3;;;2355:7;2385:22;;;;;;;;;;;;;2252:162;5315:23;-1:-1:-1;;;;;5315:37:3;;5294:110;;;;-1:-1:-1;;;5294:110:3;;5566:2:5;5294:110:3;;;5548:21:5;5605:2;5585:18;;;5578:30;5644:28;5624:18;;;5617:56;5690:18;;5294:110:3;5538:176:5;5294:110:3;5792:11:::1;5806:107;5839:10;5863:14;5891:12;5806:19;:107::i;:::-;5931:16;::::0;;;:11:::1;:16;::::0;;;;;5792:121;;-1:-1:-1;5931:16:3::1;;:25;5923:61;;;::::0;-1:-1:-1;;;5923:61:3;;4149:2:5;5923:61:3::1;::::0;::::1;4131:21:5::0;4188:2;4168:18;;;4161:30;4227:25;4207:18;;;4200:53;4270:18;;5923:61:3::1;4121:173:5::0;5923:61:3::1;6042:16;::::0;;;:11:::1;:16;::::0;;;;;:23;;-1:-1:-1;;6042:23:3::1;6061:4;6042:23;::::0;;6103:55;-1:-1:-1;;;;;6103:55:3;;::::1;::::0;;;::::1;::::0;6117:10:::1;::::0;6103:55:::1;::::0;::::1;5414:1;5646:519:::0;;;:::o;6698:326::-;6828:4;6867:11;:150;6879:137;6916:24;6925:14;6916:8;:24::i;:::-;6958:14;6990:12;6879:19;:137::i;:::-;6867:150;;;;;;;;;;;-1:-1:-1;6867:150:3;;;;;6698:326;-1:-1:-1;;;6698:326:3:o;5049:185::-;5154:4;5208:19;5181:46;;6171:521;6289:14;5342:10;5315:23;6289:14;-1:-1:-1;;;;;2385:22:3;;;2355:7;2385:22;;;;;;;;;;;;;2252:162;5315:23;-1:-1:-1;;;;;5315:37:3;;5294:110;;;;-1:-1:-1;;;5294:110:3;;5566:2:5;5294:110:3;;;5548:21:5;5605:2;5585:18;;;5578:30;5644:28;5624:18;;;5617:56;5690:18;;5294:110:3;5538:176:5;5294:110:3;6319:11:::1;6333:107;6366:10;6390:14;6418:12;6333:19;:107::i;:::-;6458:16;::::0;;;:11:::1;:16;::::0;;;;;6319:121;;-1:-1:-1;6458:16:3::1;;:24;;:16:::0;:24:::1;6450:56;;;::::0;-1:-1:-1;;;6450:56:3;;3088:2:5;6450:56:3::1;::::0;::::1;3070:21:5::0;3127:2;3107:18;;;3100:30;-1:-1:-1;;;3146:18:5;;;3139:49;3205:18;;6450:56:3::1;3060:169:5::0;6450:56:3::1;6585:5;6566:16:::0;;;:11:::1;:16;::::0;;;;;:24;;-1:-1:-1;;6566:24:3::1;::::0;;6628:57;-1:-1:-1;;;;;6628:57:3;;::::1;::::0;;;::::1;::::0;6644:10:::1;::::0;6628:57:::1;::::0;::::1;5414:1;6171:521:::0;;;:::o;3298:385::-;3389:19;3374:10;3366:19;;;;:7;:19;;;;;;;;:42;;;;;;-1:-1:-1;;;3366:42:3;;;;;;;;;;3345:123;;;;-1:-1:-1;;;3345:123:3;;5921:2:5;3345:123:3;;;5903:21:5;5960:2;5940:18;;;5933:30;5999:34;5979:18;;;5972:62;-1:-1:-1;;;6050:18:5;;;6043:32;6092:19;;3345:123:3;5893:224:5;3345:123:3;3511:10;3503:19;;;;:7;:19;;;;;;;;:39;;-1:-1:-1;;3503:39:3;3525:17;3503:39;;;3657:18;;;;;;;;3633:43;;-1:-1:-1;;;;;3657:18:3;;;;3511:10;3633:43;;;3298:385::o;4581:462::-;4703:17;-1:-1:-1;;;;;4676:23:3;;;;;;:7;:23;;;;;;;;:44;;;;;;-1:-1:-1;;;4676:44:3;;;;;;;;;;4655:107;;;;-1:-1:-1;;;4655:107:3;;2383:2:5;4655:107:3;;;2365:21:5;2422:2;2402:18;;;2395:30;-1:-1:-1;;;2441:18:5;;;2434:46;2497:18;;4655:107:3;2355:166:5;4655:107:3;-1:-1:-1;;;;;4793:22:3;;;:6;:22;;;;;;;;;;;;4819:10;4793:36;4772:111;;;;-1:-1:-1;;;4772:111:3;;4851:2:5;4772:111:3;;;4833:21:5;4890:2;4870:18;;;4863:30;4929;4909:18;;;4902:58;4977:18;;4772:111:3;4823:178:5;4772:111:3;-1:-1:-1;;;;;4918:23:3;;;;;;:7;:23;;;;;;:45;;-1:-1:-1;;4918:45:3;4944:19;4918:45;;;5001:35;5025:10;;4918:23;5001:35;;;4581:462;:::o;1756:183::-;1860:4;1913:19;1887:45;;4231:344;-1:-1:-1;;;;;4322:22:3;;;:6;:22;;;;;;;;;;;;4348:10;4322:36;4301:114;;;;-1:-1:-1;;;4301:114:3;;2728:2:5;4301:114:3;;;2710:21:5;2767:2;2747:18;;;2740:30;2806:33;2786:18;;;2779:61;2857:18;;4301:114:3;2700:181:5;2607:685:3;2695:27;2707:14;2695:11;:27::i;:::-;2687:63;;;;-1:-1:-1;;;2687:63:3;;3436:2:5;2687:63:3;;;3418:21:5;3475:2;3455:18;;;3448:30;3514:25;3494:18;;;3487:53;3557:18;;2687:63:3;3408:173:5;2687:63:3;-1:-1:-1;;;;;2768:28:3;;2760:70;;;;-1:-1:-1;;;2760:70:3;;5208:2:5;2760:70:3;;;5190:21:5;5247:2;5227:18;;;5220:30;5286:31;5266:18;;;5259:59;5335:18;;2760:70:3;5180:179:5;2760:70:3;964:11;2848:9;:28;;2840:62;;;;-1:-1:-1;;;2840:62:3;;6324:2:5;2840:62:3;;;6306:21:5;6363:2;6343:18;;;6336:30;-1:-1:-1;;;6382:18:5;;;6375:51;6443:18;;2840:62:3;6296:171:5;2840:62:3;1090:7;2920:9;:28;;2912:62;;;;-1:-1:-1;;;2912:62:3;;4501:2:5;2912:62:3;;;4483:21:5;4540:2;4520:18;;;4513:30;-1:-1:-1;;;4559:18:5;;;4552:51;4620:18;;2912:62:3;4473:171:5;2912:62:3;-1:-1:-1;;;;;3006:22:3;;:6;:22;;;;;;;;;;;:44;;-1:-1:-1;;;;;;3006:44:3;3039:10;3006:44;;;;3085:23;;;;;;;:45;;-1:-1:-1;;3085:45:3;3006:44;;3085:45;;;;-1:-1:-1;3177:34:3;;-1:-1:-1;;;;;3177:23:3;;;3201:9;3177:34;;;;;;;;;3201:9;3177:23;:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3249:36:3;;3274:10;;-1:-1:-1;;;;;3249:36:3;;;;;;;;2607:685;:::o;7030:203::-;7157:20;7162:14;7157:4;:20::i;:::-;7187:39;7197:14;7213:12;7187:9;:39::i;:::-;7030:203;;:::o;2420:181::-;2523:4;2577:17;2550:44;;1945:301;2083:7;2152:17;-1:-1:-1;;;;;2125:23:3;;;;;;:7;:23;;;;;;;;:44;;;;;;-1:-1:-1;;;2125:44:3;;;;;;;;;;:114;;2237:1;2125:114;;;-1:-1:-1;;;;;2188:22:3;;;:6;:22;;;;;;;;;;;;2125:114;2106:133;1945:301;-1:-1:-1;;1945:301:3:o;5428:212::-;5593:39;;-1:-1:-1;;1615:2:5;1611:15;;;1607:24;;5593:39:3;;;1595:37:5;1666:15;;;1662:24;;1648:12;;;1641:46;1721:15;;;1717:24;1703:12;;;1696:46;5557:7:3;;1758:12:5;;5593:39:3;;;;;;;;;;;;5583:50;;;;;;5576:57;;5428:212;;;;;:::o;14:257:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:5:o;546:406::-;622:6;630;683:2;671:9;662:7;658:23;654:32;651:2;;;704:6;696;689:22;651:2;748:9;735:23;767:31;792:5;767:31;:::i;:::-;817:5;-1:-1:-1;874:2:5;859:18;;846:32;887:33;846:32;887:33;:::i;:::-;939:7;929:17;;;641:311;;;;;:::o;957:398::-;1025:6;1033;1086:2;1074:9;1065:7;1061:23;1057:32;1054:2;;;1107:6;1099;1092:22;6472:131;-1:-1:-1;;;;;6547:31:5;;6537:42;;6527:2;;6593:1;6590;6583:12;6527:2;6517:86;:::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "667200",
        "executionCost": "702",
        "totalCost": "667902"
      },
      "external": {
        "acceptJob()": "24393",
        "authorize(address,address)": "infinite",
        "cancelHire(address)": "23736",
        "deauthorize(address,address)": "infinite",
        "getOwner(address)": "2317",
        "getUser(address)": "1353",
        "hire(address)": "infinite",
        "hireAndAuthorize(address,address)": "infinite",
        "isAuthorized(address,address)": "infinite",
        "isAvailable(address)": "1336",
        "isOwned(address)": "1367",
        "isPending(address)": "1368",
        "isRetired(address)": "1346",
        "rejectJob()": "infinite",
        "retire(address)": "24634"
      },
      "internal": {
        "getAuthorizationKey(address,address,address)": "infinite"
      }
    },
    "methodIdentifiers": {
      "acceptJob()": "9b789b7e",
      "authorize(address,address)": "2bef4595",
      "cancelHire(address)": "b64b3bed",
      "deauthorize(address,address)": "6d892f7e",
      "getOwner(address)": "fa544161",
      "getUser(address)": "6f77926b",
      "hire(address)": "d9d6bd86",
      "hireAndAuthorize(address,address)": "dbd96554",
      "isAuthorized(address,address)": "65e4ad9e",
      "isAvailable(address)": "2896f60b",
      "isOwned(address)": "f4dc754b",
      "isPending(address)": "a00745b6",
      "isRetired(address)": "6d3c6275",
      "rejectJob()": "03d6e81e",
      "retire(address)": "9e6371ba"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dapp\",\"type\":\"address\"}],\"name\":\"Authorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dapp\",\"type\":\"address\"}],\"name\":\"Deauthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"JobAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"JobOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"JobRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"worker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Retired\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptJob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dappAddress\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"cancelHire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dappAddress\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"hire\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_workerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dappAddress\",\"type\":\"address\"}],\"name\":\"hireAndAuthorize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dappAddress\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"isAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"isOwned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"isPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"isRetired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rejectJob\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_workerAddress\",\"type\":\"address\"}],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorize(address,address)\":{\"params\":{\"_dappAddress\":\"address of the dapp that permission will be given to\",\"_workerAddress\":\"address of the worker node to given permission\"}},\"isAuthorized(address,address)\":{\"params\":{\"_dappAddress\":\"address of the DApp\",\"_workerAddress\":\"address of the worker\"}},\"isAvailable(address)\":{\"params\":{\"workerAddress\":\"address of the worker node\"}},\"isPending(address)\":{\"params\":{\"workerAddress\":\"address of the worker node\"}}},\"stateVariables\":{\"MAXIMUM_FUNDING\":{\"details\":\"transfers bigger than maximum value should be done directly\"},\"MINIMUM_FUNDING\":{\"details\":\"user can only hire a worker if he sends more than minimum value\"},\"permissions\":{\"details\":\"permissions keyed by hash(user, worker, dapp)\"},\"stateOf\":{\"details\":\"mapping from worker to its internal state\"},\"userOf\":{\"details\":\"mapping from worker to its user\"}},\"version\":1},\"userdoc\":{\"events\":{\"Authorization(address,address,address)\":{\"notice\":\"A DApp has been authorized by a user for a worker\"},\"Deauthorization(address,address,address)\":{\"notice\":\"A DApp has been deauthorized by a user for a worker\"},\"JobOffer(address,address)\":{\"notice\":\"Events signalling every state transition\"}},\"kind\":\"user\",\"methods\":{\"acceptJob()\":{\"notice\":\"Called by the worker to accept the job\"},\"authorize(address,address)\":{\"notice\":\"Gives worker permission to act on a DApp\"},\"isAuthorized(address,address)\":{\"notice\":\"Returns is the dapp is authorized to be called by that worker\"},\"isAvailable(address)\":{\"notice\":\"Returns true if worker node is available\"},\"isPending(address)\":{\"notice\":\"Returns true if worker node is pending\"},\"rejectJob()\":{\"notice\":\"Called by the worker to reject a job offer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WorkerManagerAuthManagerImpl.sol\":\"WorkerManagerAuthManagerImpl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WorkerAuthManager.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title WorkerAuthManager\\n/// @author Danilo Tuler\\npragma solidity >=0.7.0;\\n\\ninterface WorkerAuthManager {\\n    /// @notice Gives worker permission to act on a DApp\\n    /// @param _workerAddress address of the worker node to given permission\\n    /// @param _dappAddress address of the dapp that permission will be given to\\n    function authorize(address _workerAddress, address _dappAddress) external;\\n\\n    /// @notice Removes worker's permission to act on a DApp\\n    /// @param _workerAddress address of the proxy that will lose permission\\n    /// @param _dappAddresses addresses of dapps that will lose permission\\n    function deauthorize(address _workerAddress, address _dappAddresses)\\n        external;\\n\\n    /// @notice Returns is the dapp is authorized to be called by that worker\\n    /// @param _workerAddress address of the worker\\n    /// @param _dappAddress address of the DApp\\n    function isAuthorized(address _workerAddress, address _dappAddress)\\n        external\\n        view\\n        returns (bool);\\n\\n    /// @notice Get the owner of the worker node\\n    /// @param workerAddress address of the worker node\\n    function getOwner(address workerAddress) external view returns (address);\\n\\n    /// @notice A DApp has been authorized by a user for a worker\\n    event Authorization(\\n        address indexed user,\\n        address indexed worker,\\n        address indexed dapp\\n    );\\n\\n    /// @notice A DApp has been deauthorized by a user for a worker\\n    event Deauthorization(\\n        address indexed user,\\n        address indexed worker,\\n        address indexed dapp\\n    );\\n}\\n\",\"keccak256\":\"0xb69b2fc75aae609d5a4098b77fb8f48dc87ff8073a8a3b70c0261af5f62f36db\",\"license\":\"Apache-2.0\"},\"contracts/WorkerManager.sol\":{\"content\":\"// Copyright 2010 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title WorkerManager\\n/// @author Danilo Tuler\\npragma solidity >=0.7.0;\\n\\ninterface WorkerManager {\\n    /// @notice Returns true if worker node is available\\n    /// @param workerAddress address of the worker node\\n    function isAvailable(address workerAddress) external view returns (bool);\\n\\n    /// @notice Returns true if worker node is pending\\n    /// @param workerAddress address of the worker node\\n    function isPending(address workerAddress) external view returns (bool);\\n\\n    /// @notice Get the owner of the worker node\\n    /// @param workerAddress address of the worker node\\n    function getOwner(address workerAddress) external view returns (address);\\n\\n    /// @notice Get the user of the worker node, which may not be the owner yet, or how was the previous owner of a retired node\\n    function getUser(address workerAddress) external view returns (address);\\n\\n    /// @notice Returns true if worker node is owned by some user\\n    function isOwned(address workerAddress) external view returns (bool);\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the worker to accept the job\\n    function acceptJob() external;\\n\\n    /// @notice Called by the worker to reject a job offer\\n    function rejectJob() external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n\\n    /// @notice Returns true if worker node was retired by its owner\\n    function isRetired(address workerAddress) external view returns (bool);\\n\\n    /// @notice Events signalling every state transition\\n    event JobOffer(address indexed worker, address indexed user);\\n    event JobAccepted(address indexed worker, address indexed user);\\n    event JobRejected(address indexed worker, address indexed user);\\n    event Retired(address indexed worker, address indexed user);\\n}\\n\",\"keccak256\":\"0xb93bac1de98b3fb44421c2498f11bcd246795c7cffeeebb535a046e88c303410\",\"license\":\"Apache-2.0\"},\"contracts/WorkerManagerAuthManagerImpl.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title WorkerManagerAuthManagerImpl\\n/// @author Danilo Tuler\\npragma solidity ^0.8.0;\\n\\nimport \\\"./WorkerManager.sol\\\";\\nimport \\\"./WorkerAuthManager.sol\\\";\\n\\ncontract WorkerManagerAuthManagerImpl is WorkerManager, WorkerAuthManager {\\n    /// @dev user can only hire a worker if he sends more than minimum value\\n    uint256 constant MINIMUM_FUNDING = 0.001 ether;\\n\\n    /// @dev transfers bigger than maximum value should be done directly\\n    uint256 constant MAXIMUM_FUNDING = 3 ether;\\n\\n    /// @notice A worker can be in 4 different states, starting from Available\\n    enum WorkerState {Available, Pending, Owned, Retired}\\n\\n    /// @dev mapping from worker to its user\\n    mapping(address => address payable) private userOf;\\n\\n    /// @dev mapping from worker to its internal state\\n    mapping(address => WorkerState) private stateOf;\\n\\n    /// @dev permissions keyed by hash(user, worker, dapp)\\n    mapping(bytes32 => bool) private permissions;\\n\\n    function isAvailable(address workerAddress)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return stateOf[workerAddress] == WorkerState.Available;\\n    }\\n\\n    function isPending(address workerAddress)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return stateOf[workerAddress] == WorkerState.Pending;\\n    }\\n\\n    function getOwner(address _workerAddress)\\n        public\\n        override(WorkerManager, WorkerAuthManager)\\n        view\\n        returns (address)\\n    {\\n        return\\n            stateOf[_workerAddress] == WorkerState.Owned\\n                ? userOf[_workerAddress]\\n                : address(0);\\n    }\\n\\n    function getUser(address _workerAddress)\\n        public\\n        override\\n        view\\n        returns (address)\\n    {\\n        return userOf[_workerAddress];\\n    }\\n\\n    function isOwned(address _workerAddress)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return stateOf[_workerAddress] == WorkerState.Owned;\\n    }\\n\\n    function hire(address payable _workerAddress) public override payable {\\n        require(isAvailable(_workerAddress), \\\"worker is not available\\\");\\n        require(_workerAddress != address(0), \\\"worker address can not be 0x0\\\");\\n        require(msg.value >= MINIMUM_FUNDING, \\\"funding below minimum\\\");\\n        require(msg.value <= MAXIMUM_FUNDING, \\\"funding above maximum\\\");\\n\\n        // set owner\\n        userOf[_workerAddress] = payable(msg.sender);\\n\\n        // change state\\n        stateOf[_workerAddress] = WorkerState.Pending;\\n\\n        // transfer ether to worker\\n        _workerAddress.transfer(msg.value);\\n\\n        // emit event\\n        emit JobOffer(_workerAddress, msg.sender);\\n    }\\n\\n    function acceptJob() public override {\\n        require(\\n            stateOf[msg.sender] == WorkerState.Pending,\\n            \\\"worker not is not in pending state\\\"\\n        );\\n\\n        // change state\\n        stateOf[msg.sender] = WorkerState.Owned;\\n        // from now on getOwner will return the user\\n\\n        // emit event\\n        emit JobAccepted(msg.sender, userOf[msg.sender]);\\n    }\\n\\n    function rejectJob() public override payable {\\n        require(\\n            userOf[msg.sender] != address(0),\\n            \\\"worker does not have a job offer\\\"\\n        );\\n\\n        address payable owner = userOf[msg.sender];\\n\\n        // reset hirer back to null\\n        userOf[msg.sender] = payable(address(0));\\n\\n        // change state\\n        stateOf[msg.sender] = WorkerState.Available;\\n\\n        // return the money\\n        owner.transfer(msg.value);\\n\\n        // emit event\\n        emit JobRejected(msg.sender, userOf[msg.sender]);\\n    }\\n\\n    function cancelHire(address _workerAddress) public override {\\n        require(\\n            userOf[_workerAddress] == msg.sender,\\n            \\\"only hirer can cancel the offer\\\"\\n        );\\n\\n        // change state\\n        stateOf[_workerAddress] = WorkerState.Retired;\\n\\n        // emit event\\n        emit Retired(_workerAddress, msg.sender);\\n    }\\n\\n    function retire(address payable _workerAddress) public override {\\n        require(\\n            stateOf[_workerAddress] == WorkerState.Owned,\\n            \\\"worker not owned\\\"\\n        );\\n        require(\\n            userOf[_workerAddress] == msg.sender,\\n            \\\"only owner can retire worker\\\"\\n        );\\n\\n        // change state\\n        stateOf[_workerAddress] = WorkerState.Retired;\\n\\n        // emit event\\n        emit Retired(_workerAddress, msg.sender);\\n    }\\n\\n    function isRetired(address _workerAddress)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return stateOf[_workerAddress] == WorkerState.Retired;\\n    }\\n\\n    modifier onlyByUser(address _workerAddress) {\\n        require(\\n            getUser(_workerAddress) == msg.sender,\\n            \\\"worker not hired by sender\\\"\\n        );\\n        _;\\n    }\\n\\n    function getAuthorizationKey(\\n        address _user,\\n        address _worker,\\n        address _dapp\\n    ) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(_user, _worker, _dapp));\\n    }\\n\\n    function authorize(address _workerAddress, address _dappAddress)\\n        public\\n        override\\n        onlyByUser(_workerAddress)\\n    {\\n        bytes32 key = getAuthorizationKey(\\n            msg.sender,\\n            _workerAddress,\\n            _dappAddress\\n        );\\n        require(permissions[key] == false, \\\"dapp already authorized\\\");\\n\\n        // record authorization from that user\\n        permissions[key] = true;\\n\\n        // emit event\\n        emit Authorization(msg.sender, _workerAddress, _dappAddress);\\n    }\\n\\n    function deauthorize(address _workerAddress, address _dappAddress)\\n        public\\n        override\\n        onlyByUser(_workerAddress)\\n    {\\n        bytes32 key = getAuthorizationKey(\\n            msg.sender,\\n            _workerAddress,\\n            _dappAddress\\n        );\\n        require(permissions[key] == true, \\\"dapp not authorized\\\");\\n\\n        // record deauthorization from that user\\n        permissions[key] = false;\\n\\n        // emit event\\n        emit Deauthorization(msg.sender, _workerAddress, _dappAddress);\\n    }\\n\\n    function isAuthorized(address _workerAddress, address _dappAddress)\\n        public\\n        override\\n        view\\n        returns (bool)\\n    {\\n        return\\n            permissions[getAuthorizationKey(\\n                getOwner(_workerAddress),\\n                _workerAddress,\\n                _dappAddress\\n            )];\\n    }\\n\\n    function hireAndAuthorize(\\n        address payable _workerAddress,\\n        address _dappAddress\\n    ) public payable {\\n        hire(_workerAddress);\\n        authorize(_workerAddress, _dappAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x3bea45e35de87f18d8c79dffa4b9ccd6106590cace1a7868bf9fbf2a5112d3ff\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 369,
        "contract": "contracts/WorkerManagerAuthManagerImpl.sol:WorkerManagerAuthManagerImpl",
        "label": "userOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address_payable)"
      },
      {
        "astId": 375,
        "contract": "contracts/WorkerManagerAuthManagerImpl.sol:WorkerManagerAuthManagerImpl",
        "label": "stateOf",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_enum(WorkerState)364)"
      },
      {
        "astId": 380,
        "contract": "contracts/WorkerManagerAuthManagerImpl.sol:WorkerManagerAuthManagerImpl",
        "label": "permissions",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(WorkerState)364": {
        "encoding": "inplace",
        "label": "enum WorkerManagerAuthManagerImpl.WorkerState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address_payable)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address payable)",
        "numberOfBytes": "32",
        "value": "t_address_payable"
      },
      "t_mapping(t_address,t_enum(WorkerState)364)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum WorkerManagerAuthManagerImpl.WorkerState)",
        "numberOfBytes": "32",
        "value": "t_enum(WorkerState)364"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  },
  "userdoc": {
    "events": {
      "Authorization(address,address,address)": {
        "notice": "A DApp has been authorized by a user for a worker"
      },
      "Deauthorization(address,address,address)": {
        "notice": "A DApp has been deauthorized by a user for a worker"
      },
      "JobOffer(address,address)": {
        "notice": "Events signalling every state transition"
      }
    },
    "kind": "user",
    "methods": {
      "acceptJob()": {
        "notice": "Called by the worker to accept the job"
      },
      "authorize(address,address)": {
        "notice": "Gives worker permission to act on a DApp"
      },
      "isAuthorized(address,address)": {
        "notice": "Returns is the dapp is authorized to be called by that worker"
      },
      "isAvailable(address)": {
        "notice": "Returns true if worker node is available"
      },
      "isPending(address)": {
        "notice": "Returns true if worker node is pending"
      },
      "rejectJob()": {
        "notice": "Called by the worker to reject a job offer"
      }
    },
    "version": 1
  }
}